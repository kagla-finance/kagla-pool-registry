{
  "abi": [
    {
      "inputs": [
        {
          "name": "_n_coins",
          "type": "uint256"
        },
        {
          "name": "_coin_list",
          "type": "address[4]"
        },
        {
          "name": "_underlying_coin_list",
          "type": "address[4]"
        },
        {
          "name": "_A",
          "type": "uint256"
        },
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "gas": 2184,
      "inputs": [
        {
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "coins",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 3180,
      "inputs": [
        {
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "underlying_coins",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2244,
      "inputs": [
        {
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 7251,
      "inputs": [
        {
          "name": "i",
          "type": "int128"
        },
        {
          "name": "j",
          "type": "int128"
        },
        {
          "name": "dx",
          "type": "uint256"
        }
      ],
      "name": "get_dy",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 8247,
      "inputs": [
        {
          "name": "i",
          "type": "int128"
        },
        {
          "name": "j",
          "type": "int128"
        },
        {
          "name": "dx",
          "type": "uint256"
        }
      ],
      "name": "get_dy_underlying",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 107714,
      "inputs": [
        {
          "name": "i",
          "type": "int128"
        },
        {
          "name": "j",
          "type": "int128"
        },
        {
          "name": "dx",
          "type": "uint256"
        },
        {
          "name": "min_dy",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "gas": 108710,
      "inputs": [
        {
          "name": "i",
          "type": "int128"
        },
        {
          "name": "j",
          "type": "int128"
        },
        {
          "name": "dx",
          "type": "uint256"
        },
        {
          "name": "min_dy",
          "type": "uint256"
        }
      ],
      "name": "exchange_underlying",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "gas": 175588,
      "inputs": [
        {
          "name": "_A",
          "type": "uint256"
        },
        {
          "name": "_initial_A",
          "type": "uint256"
        },
        {
          "name": "_initial_A_time",
          "type": "uint256"
        },
        {
          "name": "_future_A",
          "type": "uint256"
        },
        {
          "name": "_future_A_time",
          "type": "uint256"
        }
      ],
      "name": "_set_A",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 175718,
      "inputs": [
        {
          "name": "_fee",
          "type": "uint256"
        },
        {
          "name": "_admin_fee",
          "type": "uint256"
        },
        {
          "name": "_future_fee",
          "type": "uint256"
        },
        {
          "name": "_future_admin_fee",
          "type": "uint256"
        },
        {
          "name": "_future_owner",
          "type": "address"
        }
      ],
      "name": "_set_fees_and_owner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 140807,
      "inputs": [
        {
          "name": "_new_balances",
          "type": "uint256[4]"
        }
      ],
      "name": "_set_balances",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 35642,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "_set_virtual_price",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "gas": 1508,
      "inputs": [],
      "name": "A",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1538,
      "inputs": [],
      "name": "initial_A",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1568,
      "inputs": [],
      "name": "initial_A_time",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1598,
      "inputs": [],
      "name": "future_A",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1628,
      "inputs": [],
      "name": "future_A_time",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1658,
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1688,
      "inputs": [],
      "name": "admin_fee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1718,
      "inputs": [],
      "name": "future_fee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1748,
      "inputs": [],
      "name": "future_admin_fee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1778,
      "inputs": [],
      "name": "future_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1808,
      "inputs": [],
      "name": "get_virtual_price",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/testing/PoolMockV2.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 31,
              "end_lineno": 6,
              "id": "uint256",
              "lineno": 6,
              "node_id": 9,
              "src": "87:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 15,
          "end_col_offset": 32,
          "end_lineno": 6,
          "func": {
            "ast_type": "Name",
            "col_offset": 15,
            "end_col_offset": 23,
            "end_lineno": 6,
            "id": "constant",
            "lineno": 6,
            "node_id": 7,
            "src": "78:8:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 6,
          "node_id": 6,
          "src": "78:17:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 41,
        "end_lineno": 6,
        "lineno": 6,
        "node_id": 3,
        "simple": 1,
        "src": "63:41:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 13,
          "end_lineno": 6,
          "id": "FEE_PRECISION",
          "lineno": 6,
          "node_id": 4,
          "src": "63:13:5"
        },
        "value": {
          "ast_type": "BinOp",
          "col_offset": 35,
          "end_col_offset": 41,
          "end_lineno": 6,
          "left": {
            "ast_type": "Int",
            "col_offset": 35,
            "end_col_offset": 37,
            "end_lineno": 6,
            "lineno": 6,
            "node_id": 12,
            "src": "98:2:5",
            "value": 10
          },
          "lineno": 6,
          "node_id": 11,
          "op": {
            "ast_type": "Pow",
            "col_offset": 35,
            "end_col_offset": 41,
            "end_lineno": 6,
            "lineno": 6,
            "node_id": 450,
            "src": "98:6:5"
          },
          "right": {
            "ast_type": "Int",
            "col_offset": 39,
            "end_col_offset": 41,
            "end_lineno": 6,
            "lineno": 6,
            "node_id": 14,
            "src": "102:2:5",
            "value": 10
          },
          "src": "98:6:5"
        }
      },
      {
        "ast_type": "InterfaceDef",
        "body": [
          {
            "args": {
              "args": [],
              "ast_type": "arguments",
              "col_offset": 4,
              "default": null,
              "defaults": [],
              "end_col_offset": 7,
              "end_lineno": 9,
              "lineno": 9,
              "node_id": 17,
              "src": "131:3:5"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 31,
                "end_col_offset": 35,
                "end_lineno": 9,
                "lineno": 9,
                "node_id": 18,
                "src": "158:4:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 35,
                  "end_lineno": 9,
                  "id": "view",
                  "lineno": 9,
                  "node_id": 19,
                  "src": "158:4:5"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 35,
            "end_lineno": 9,
            "lineno": 9,
            "name": "decimals",
            "node_id": 16,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 22,
              "end_col_offset": 29,
              "end_lineno": 9,
              "id": "uint256",
              "lineno": 9,
              "node_id": 21,
              "src": "149:7:5"
            },
            "src": "131:31:5"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 25,
                    "end_col_offset": 32,
                    "end_lineno": 10,
                    "id": "address",
                    "lineno": 10,
                    "node_id": 26,
                    "src": "188:7:5"
                  },
                  "arg": "_addr",
                  "ast_type": "arg",
                  "col_offset": 18,
                  "end_col_offset": 32,
                  "end_lineno": 10,
                  "lineno": 10,
                  "node_id": 25,
                  "src": "181:14:5"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 18,
              "default": null,
              "defaults": [],
              "end_col_offset": 32,
              "end_lineno": 10,
              "lineno": 10,
              "node_id": 24,
              "src": "181:14:5"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 46,
                "end_col_offset": 50,
                "end_lineno": 10,
                "lineno": 10,
                "node_id": 28,
                "src": "209:4:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 46,
                  "end_col_offset": 50,
                  "end_lineno": 10,
                  "id": "view",
                  "lineno": 10,
                  "node_id": 29,
                  "src": "209:4:5"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 50,
            "end_lineno": 10,
            "lineno": 10,
            "name": "balanceOf",
            "node_id": 23,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 37,
              "end_col_offset": 44,
              "end_lineno": 10,
              "id": "uint256",
              "lineno": 10,
              "node_id": 31,
              "src": "200:7:5"
            },
            "src": "167:46:5"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 22,
                    "end_col_offset": 29,
                    "end_lineno": 11,
                    "id": "address",
                    "lineno": 11,
                    "node_id": 36,
                    "src": "236:7:5"
                  },
                  "arg": "_to",
                  "ast_type": "arg",
                  "col_offset": 17,
                  "end_col_offset": 29,
                  "end_lineno": 11,
                  "lineno": 11,
                  "node_id": 35,
                  "src": "231:12:5"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 40,
                    "end_col_offset": 47,
                    "end_lineno": 11,
                    "id": "uint256",
                    "lineno": 11,
                    "node_id": 39,
                    "src": "254:7:5"
                  },
                  "arg": "_amount",
                  "ast_type": "arg",
                  "col_offset": 31,
                  "end_col_offset": 47,
                  "end_lineno": 11,
                  "lineno": 11,
                  "node_id": 38,
                  "src": "245:16:5"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 17,
              "default": null,
              "defaults": [],
              "end_col_offset": 47,
              "end_lineno": 11,
              "lineno": 11,
              "node_id": 34,
              "src": "231:30:5"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 58,
                "end_col_offset": 68,
                "end_lineno": 11,
                "lineno": 11,
                "node_id": 41,
                "src": "272:10:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 58,
                  "end_col_offset": 68,
                  "end_lineno": 11,
                  "id": "nonpayable",
                  "lineno": 11,
                  "node_id": 42,
                  "src": "272:10:5"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 68,
            "end_lineno": 11,
            "lineno": 11,
            "name": "transfer",
            "node_id": 33,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 52,
              "end_col_offset": 56,
              "end_lineno": 11,
              "id": "bool",
              "lineno": 11,
              "node_id": 44,
              "src": "266:4:5"
            },
            "src": "218:64:5"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 28,
                    "end_col_offset": 35,
                    "end_lineno": 12,
                    "id": "address",
                    "lineno": 12,
                    "node_id": 49,
                    "src": "311:7:5"
                  },
                  "arg": "_from",
                  "ast_type": "arg",
                  "col_offset": 21,
                  "end_col_offset": 35,
                  "end_lineno": 12,
                  "lineno": 12,
                  "node_id": 48,
                  "src": "304:14:5"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 42,
                    "end_col_offset": 49,
                    "end_lineno": 12,
                    "id": "address",
                    "lineno": 12,
                    "node_id": 52,
                    "src": "325:7:5"
                  },
                  "arg": "_to",
                  "ast_type": "arg",
                  "col_offset": 37,
                  "end_col_offset": 49,
                  "end_lineno": 12,
                  "lineno": 12,
                  "node_id": 51,
                  "src": "320:12:5"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 60,
                    "end_col_offset": 67,
                    "end_lineno": 12,
                    "id": "uint256",
                    "lineno": 12,
                    "node_id": 55,
                    "src": "343:7:5"
                  },
                  "arg": "_amount",
                  "ast_type": "arg",
                  "col_offset": 51,
                  "end_col_offset": 67,
                  "end_lineno": 12,
                  "lineno": 12,
                  "node_id": 54,
                  "src": "334:16:5"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 21,
              "default": null,
              "defaults": [],
              "end_col_offset": 67,
              "end_lineno": 12,
              "lineno": 12,
              "node_id": 47,
              "src": "304:46:5"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 78,
                "end_col_offset": 88,
                "end_lineno": 12,
                "lineno": 12,
                "node_id": 57,
                "src": "361:10:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 78,
                  "end_col_offset": 88,
                  "end_lineno": 12,
                  "id": "nonpayable",
                  "lineno": 12,
                  "node_id": 58,
                  "src": "361:10:5"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 88,
            "end_lineno": 12,
            "lineno": 12,
            "name": "transferFrom",
            "node_id": 46,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 72,
              "end_col_offset": 76,
              "end_lineno": 12,
              "id": "bool",
              "lineno": 12,
              "node_id": 60,
              "src": "355:4:5"
            },
            "src": "287:84:5"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 31,
                    "end_col_offset": 38,
                    "end_lineno": 13,
                    "id": "address",
                    "lineno": 13,
                    "node_id": 65,
                    "src": "403:7:5"
                  },
                  "arg": "_to",
                  "ast_type": "arg",
                  "col_offset": 26,
                  "end_col_offset": 38,
                  "end_lineno": 13,
                  "lineno": 13,
                  "node_id": 64,
                  "src": "398:12:5"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 49,
                    "end_col_offset": 56,
                    "end_lineno": 13,
                    "id": "uint256",
                    "lineno": 13,
                    "node_id": 68,
                    "src": "421:7:5"
                  },
                  "arg": "_amount",
                  "ast_type": "arg",
                  "col_offset": 40,
                  "end_col_offset": 56,
                  "end_lineno": 13,
                  "lineno": 13,
                  "node_id": 67,
                  "src": "412:16:5"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 26,
              "default": null,
              "defaults": [],
              "end_col_offset": 56,
              "end_lineno": 13,
              "lineno": 13,
              "node_id": 63,
              "src": "398:30:5"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 59,
                "end_col_offset": 69,
                "end_lineno": 13,
                "lineno": 13,
                "node_id": 70,
                "src": "431:10:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 59,
                  "end_col_offset": 69,
                  "end_lineno": 13,
                  "id": "nonpayable",
                  "lineno": 13,
                  "node_id": 71,
                  "src": "431:10:5"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 69,
            "end_lineno": 13,
            "lineno": 13,
            "name": "_mint_for_testing",
            "node_id": 62,
            "pos": null,
            "returns": null,
            "src": "376:65:5"
          }
        ],
        "col_offset": 0,
        "end_col_offset": 69,
        "end_lineno": 13,
        "lineno": 8,
        "name": "ERC20Mock",
        "node_id": 15,
        "src": "106:335:5"
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 9,
          "end_col_offset": 16,
          "end_lineno": 15,
          "id": "uint256",
          "lineno": 15,
          "node_id": 76,
          "src": "452:7:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 16,
        "end_lineno": 15,
        "lineno": 15,
        "node_id": 73,
        "simple": 1,
        "src": "443:16:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 7,
          "end_lineno": 15,
          "id": "n_coins",
          "lineno": 15,
          "node_id": 74,
          "src": "443:7:5"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 11,
          "end_col_offset": 21,
          "end_lineno": 16,
          "lineno": 16,
          "node_id": 81,
          "slice": {
            "ast_type": "Index",
            "col_offset": 19,
            "end_col_offset": 20,
            "end_lineno": 16,
            "lineno": 16,
            "node_id": 84,
            "src": "479:1:5",
            "value": {
              "ast_type": "Int",
              "col_offset": 19,
              "end_col_offset": 20,
              "end_lineno": 16,
              "lineno": 16,
              "node_id": 85,
              "src": "479:1:5",
              "value": 4
            }
          },
          "src": "471:10:5",
          "value": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 18,
            "end_lineno": 16,
            "id": "address",
            "lineno": 16,
            "node_id": 82,
            "src": "471:7:5"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 21,
        "end_lineno": 16,
        "lineno": 16,
        "node_id": 78,
        "simple": 1,
        "src": "460:21:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 16,
          "id": "coin_list",
          "lineno": 16,
          "node_id": 79,
          "src": "460:9:5"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 22,
          "end_col_offset": 32,
          "end_lineno": 17,
          "lineno": 17,
          "node_id": 90,
          "slice": {
            "ast_type": "Index",
            "col_offset": 30,
            "end_col_offset": 31,
            "end_lineno": 17,
            "lineno": 17,
            "node_id": 93,
            "src": "512:1:5",
            "value": {
              "ast_type": "Int",
              "col_offset": 30,
              "end_col_offset": 31,
              "end_lineno": 17,
              "lineno": 17,
              "node_id": 94,
              "src": "512:1:5",
              "value": 4
            }
          },
          "src": "504:10:5",
          "value": {
            "ast_type": "Name",
            "col_offset": 22,
            "end_col_offset": 29,
            "end_lineno": 17,
            "id": "address",
            "lineno": 17,
            "node_id": 91,
            "src": "504:7:5"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 32,
        "end_lineno": 17,
        "lineno": 17,
        "node_id": 87,
        "simple": 1,
        "src": "482:32:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 20,
          "end_lineno": 17,
          "id": "underlying_coin_list",
          "lineno": 17,
          "node_id": 88,
          "src": "482:20:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 10,
              "end_col_offset": 17,
              "end_lineno": 19,
              "id": "uint256",
              "lineno": 19,
              "node_id": 102,
              "src": "526:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 3,
          "end_col_offset": 18,
          "end_lineno": 19,
          "func": {
            "ast_type": "Name",
            "col_offset": 3,
            "end_col_offset": 9,
            "end_lineno": 19,
            "id": "public",
            "lineno": 19,
            "node_id": 100,
            "src": "519:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 19,
          "node_id": 99,
          "src": "519:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 19,
        "lineno": 19,
        "node_id": 96,
        "simple": 1,
        "src": "516:18:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 1,
          "end_lineno": 19,
          "id": "A",
          "lineno": 19,
          "node_id": 97,
          "src": "516:1:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 18,
              "end_col_offset": 25,
              "end_lineno": 20,
              "id": "uint256",
              "lineno": 20,
              "node_id": 110,
              "src": "553:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 11,
          "end_col_offset": 26,
          "end_lineno": 20,
          "func": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 17,
            "end_lineno": 20,
            "id": "public",
            "lineno": 20,
            "node_id": 108,
            "src": "546:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 20,
          "node_id": 107,
          "src": "546:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 20,
        "lineno": 20,
        "node_id": 104,
        "simple": 1,
        "src": "535:26:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 20,
          "id": "initial_A",
          "lineno": 20,
          "node_id": 105,
          "src": "535:9:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 23,
              "end_col_offset": 30,
              "end_lineno": 21,
              "id": "uint256",
              "lineno": 21,
              "node_id": 118,
              "src": "585:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 16,
          "end_col_offset": 31,
          "end_lineno": 21,
          "func": {
            "ast_type": "Name",
            "col_offset": 16,
            "end_col_offset": 22,
            "end_lineno": 21,
            "id": "public",
            "lineno": 21,
            "node_id": 116,
            "src": "578:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 21,
          "node_id": 115,
          "src": "578:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 31,
        "end_lineno": 21,
        "lineno": 21,
        "node_id": 112,
        "simple": 1,
        "src": "562:31:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 14,
          "end_lineno": 21,
          "id": "initial_A_time",
          "lineno": 21,
          "node_id": 113,
          "src": "562:14:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 17,
              "end_col_offset": 24,
              "end_lineno": 22,
              "id": "uint256",
              "lineno": 22,
              "node_id": 126,
              "src": "611:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 10,
          "end_col_offset": 25,
          "end_lineno": 22,
          "func": {
            "ast_type": "Name",
            "col_offset": 10,
            "end_col_offset": 16,
            "end_lineno": 22,
            "id": "public",
            "lineno": 22,
            "node_id": 124,
            "src": "604:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 22,
          "node_id": 123,
          "src": "604:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 25,
        "end_lineno": 22,
        "lineno": 22,
        "node_id": 120,
        "simple": 1,
        "src": "594:25:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 22,
          "id": "future_A",
          "lineno": 22,
          "node_id": 121,
          "src": "594:8:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 22,
              "end_col_offset": 29,
              "end_lineno": 23,
              "id": "uint256",
              "lineno": 23,
              "node_id": 134,
              "src": "642:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 15,
          "end_col_offset": 30,
          "end_lineno": 23,
          "func": {
            "ast_type": "Name",
            "col_offset": 15,
            "end_col_offset": 21,
            "end_lineno": 23,
            "id": "public",
            "lineno": 23,
            "node_id": 132,
            "src": "635:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 23,
          "node_id": 131,
          "src": "635:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 30,
        "end_lineno": 23,
        "lineno": 23,
        "node_id": 128,
        "simple": 1,
        "src": "620:30:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 13,
          "end_lineno": 23,
          "id": "future_A_time",
          "lineno": 23,
          "node_id": 129,
          "src": "620:13:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 12,
              "end_col_offset": 19,
              "end_lineno": 25,
              "id": "uint256",
              "lineno": 25,
              "node_id": 142,
              "src": "664:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 5,
          "end_col_offset": 20,
          "end_lineno": 25,
          "func": {
            "ast_type": "Name",
            "col_offset": 5,
            "end_col_offset": 11,
            "end_lineno": 25,
            "id": "public",
            "lineno": 25,
            "node_id": 140,
            "src": "657:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 25,
          "node_id": 139,
          "src": "657:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 20,
        "end_lineno": 25,
        "lineno": 25,
        "node_id": 136,
        "simple": 1,
        "src": "652:20:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 3,
          "end_lineno": 25,
          "id": "fee",
          "lineno": 25,
          "node_id": 137,
          "src": "652:3:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 18,
              "end_col_offset": 25,
              "end_lineno": 26,
              "id": "uint256",
              "lineno": 26,
              "node_id": 150,
              "src": "691:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 11,
          "end_col_offset": 26,
          "end_lineno": 26,
          "func": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 17,
            "end_lineno": 26,
            "id": "public",
            "lineno": 26,
            "node_id": 148,
            "src": "684:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 26,
          "node_id": 147,
          "src": "684:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 26,
        "lineno": 26,
        "node_id": 144,
        "simple": 1,
        "src": "673:26:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 26,
          "id": "admin_fee",
          "lineno": 26,
          "node_id": 145,
          "src": "673:9:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 26,
              "end_lineno": 27,
              "id": "uint256",
              "lineno": 27,
              "node_id": 158,
              "src": "719:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 12,
          "end_col_offset": 27,
          "end_lineno": 27,
          "func": {
            "ast_type": "Name",
            "col_offset": 12,
            "end_col_offset": 18,
            "end_lineno": 27,
            "id": "public",
            "lineno": 27,
            "node_id": 156,
            "src": "712:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 27,
          "node_id": 155,
          "src": "712:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 27,
        "end_lineno": 27,
        "lineno": 27,
        "node_id": 152,
        "simple": 1,
        "src": "700:27:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 27,
          "id": "future_fee",
          "lineno": 27,
          "node_id": 153,
          "src": "700:10:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 25,
              "end_col_offset": 32,
              "end_lineno": 28,
              "id": "uint256",
              "lineno": 28,
              "node_id": 166,
              "src": "753:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 18,
          "end_col_offset": 33,
          "end_lineno": 28,
          "func": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 24,
            "end_lineno": 28,
            "id": "public",
            "lineno": 28,
            "node_id": 164,
            "src": "746:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 28,
          "node_id": 163,
          "src": "746:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 33,
        "end_lineno": 28,
        "lineno": 28,
        "node_id": 160,
        "simple": 1,
        "src": "728:33:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 16,
          "end_lineno": 28,
          "id": "future_admin_fee",
          "lineno": 28,
          "node_id": 161,
          "src": "728:16:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 28,
              "end_lineno": 29,
              "id": "address",
              "lineno": 29,
              "node_id": 174,
              "src": "783:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 14,
          "end_col_offset": 29,
          "end_lineno": 29,
          "func": {
            "ast_type": "Name",
            "col_offset": 14,
            "end_col_offset": 20,
            "end_lineno": 29,
            "id": "public",
            "lineno": 29,
            "node_id": 172,
            "src": "776:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 29,
          "node_id": 171,
          "src": "776:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 29,
        "end_lineno": 29,
        "lineno": 29,
        "node_id": 168,
        "simple": 1,
        "src": "762:29:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 12,
          "end_lineno": 29,
          "id": "future_owner",
          "lineno": 29,
          "node_id": 169,
          "src": "762:12:5"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 26,
              "end_col_offset": 33,
              "end_lineno": 30,
              "id": "uint256",
              "lineno": 30,
              "node_id": 182,
              "src": "818:7:5"
            }
          ],
          "ast_type": "Call",
          "col_offset": 19,
          "end_col_offset": 34,
          "end_lineno": 30,
          "func": {
            "ast_type": "Name",
            "col_offset": 19,
            "end_col_offset": 25,
            "end_lineno": 30,
            "id": "public",
            "lineno": 30,
            "node_id": 180,
            "src": "811:6:5"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 30,
          "node_id": 179,
          "src": "811:15:5"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 34,
        "end_lineno": 30,
        "lineno": 30,
        "node_id": 176,
        "simple": 1,
        "src": "792:34:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 17,
          "end_lineno": 30,
          "id": "get_virtual_price",
          "lineno": 30,
          "node_id": 177,
          "src": "792:17:5"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 11,
          "end_col_offset": 21,
          "end_lineno": 32,
          "lineno": 32,
          "node_id": 187,
          "slice": {
            "ast_type": "Index",
            "col_offset": 19,
            "end_col_offset": 20,
            "end_lineno": 32,
            "lineno": 32,
            "node_id": 190,
            "src": "847:1:5",
            "value": {
              "ast_type": "Int",
              "col_offset": 19,
              "end_col_offset": 20,
              "end_lineno": 32,
              "lineno": 32,
              "node_id": 191,
              "src": "847:1:5",
              "value": 4
            }
          },
          "src": "839:10:5",
          "value": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 18,
            "end_lineno": 32,
            "id": "uint256",
            "lineno": 32,
            "node_id": 188,
            "src": "839:7:5"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 21,
        "end_lineno": 32,
        "lineno": 32,
        "node_id": 184,
        "simple": 1,
        "src": "828:21:5",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 32,
          "id": "_balances",
          "lineno": 32,
          "node_id": 185,
          "src": "828:9:5"
        },
        "value": null
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 36,
                "id": "uint256",
                "lineno": 36,
                "node_id": 196,
                "src": "889:7:5"
              },
              "arg": "_n_coins",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 21,
              "end_lineno": 36,
              "lineno": 36,
              "node_id": 195,
              "src": "879:17:5"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 16,
                "end_col_offset": 26,
                "end_lineno": 37,
                "lineno": 37,
                "node_id": 199,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 24,
                  "end_col_offset": 25,
                  "end_lineno": 37,
                  "lineno": 37,
                  "node_id": 202,
                  "src": "922:1:5",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 24,
                    "end_col_offset": 25,
                    "end_lineno": 37,
                    "lineno": 37,
                    "node_id": 203,
                    "src": "922:1:5",
                    "value": 4
                  }
                },
                "src": "914:10:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 16,
                  "end_col_offset": 23,
                  "end_lineno": 37,
                  "id": "address",
                  "lineno": 37,
                  "node_id": 200,
                  "src": "914:7:5"
                }
              },
              "arg": "_coin_list",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 37,
              "lineno": 37,
              "node_id": 198,
              "src": "902:22:5"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 27,
                "end_col_offset": 37,
                "end_lineno": 38,
                "lineno": 38,
                "node_id": 206,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 35,
                  "end_col_offset": 36,
                  "end_lineno": 38,
                  "lineno": 38,
                  "node_id": 209,
                  "src": "961:1:5",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 35,
                    "end_col_offset": 36,
                    "end_lineno": 38,
                    "lineno": 38,
                    "node_id": 210,
                    "src": "961:1:5",
                    "value": 4
                  }
                },
                "src": "953:10:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 27,
                  "end_col_offset": 34,
                  "end_lineno": 38,
                  "id": "address",
                  "lineno": 38,
                  "node_id": 207,
                  "src": "953:7:5"
                }
              },
              "arg": "_underlying_coin_list",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 37,
              "end_lineno": 38,
              "lineno": 38,
              "node_id": 205,
              "src": "930:33:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 15,
                "end_lineno": 39,
                "id": "uint256",
                "lineno": 39,
                "node_id": 213,
                "src": "973:7:5"
              },
              "arg": "_A",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 39,
              "lineno": 39,
              "node_id": 212,
              "src": "969:11:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 10,
                "end_col_offset": 17,
                "end_lineno": 40,
                "id": "uint256",
                "lineno": 40,
                "node_id": 216,
                "src": "992:7:5"
              },
              "arg": "_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 215,
              "src": "986:13:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 4,
          "default": null,
          "defaults": [],
          "end_col_offset": 17,
          "end_lineno": 40,
          "lineno": 36,
          "node_id": 194,
          "src": "879:120:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 42,
            "lineno": 42,
            "node_id": 218,
            "src": "1008:23:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "n_coins",
              "col_offset": 4,
              "end_col_offset": 16,
              "end_lineno": 42,
              "lineno": 42,
              "node_id": 219,
              "src": "1008:12:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 42,
                "id": "self",
                "lineno": 42,
                "node_id": 220,
                "src": "1008:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 27,
              "end_lineno": 42,
              "id": "_n_coins",
              "lineno": 42,
              "node_id": 223,
              "src": "1023:8:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 43,
            "lineno": 43,
            "node_id": 225,
            "src": "1036:27:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "coin_list",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 43,
              "lineno": 43,
              "node_id": 226,
              "src": "1036:14:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 43,
                "id": "self",
                "lineno": 43,
                "node_id": 227,
                "src": "1036:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 31,
              "end_lineno": 43,
              "id": "_coin_list",
              "lineno": 43,
              "node_id": 230,
              "src": "1053:10:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 53,
            "end_lineno": 44,
            "lineno": 44,
            "node_id": 232,
            "src": "1068:49:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "underlying_coin_list",
              "col_offset": 4,
              "end_col_offset": 29,
              "end_lineno": 44,
              "lineno": 44,
              "node_id": 233,
              "src": "1068:25:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 44,
                "id": "self",
                "lineno": 44,
                "node_id": 234,
                "src": "1068:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 32,
              "end_col_offset": 53,
              "end_lineno": 44,
              "id": "_underlying_coin_list",
              "lineno": 44,
              "node_id": 237,
              "src": "1096:21:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 45,
            "lineno": 45,
            "node_id": 239,
            "src": "1122:11:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "A",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 45,
              "lineno": 45,
              "node_id": 240,
              "src": "1122:6:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 45,
                "id": "self",
                "lineno": 45,
                "node_id": 241,
                "src": "1122:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 13,
              "end_col_offset": 15,
              "end_lineno": 45,
              "id": "_A",
              "lineno": 45,
              "node_id": 244,
              "src": "1131:2:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 19,
            "end_lineno": 46,
            "lineno": 46,
            "node_id": 246,
            "src": "1138:15:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "fee",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 46,
              "lineno": 46,
              "node_id": 247,
              "src": "1138:8:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 46,
                "id": "self",
                "lineno": 46,
                "node_id": 248,
                "src": "1138:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 15,
              "end_col_offset": 19,
              "end_lineno": 46,
              "id": "_fee",
              "lineno": 46,
              "node_id": 251,
              "src": "1149:4:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 47,
            "lineno": 47,
            "node_id": 253,
            "src": "1158:31:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "get_virtual_price",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 47,
              "lineno": 47,
              "node_id": 254,
              "src": "1158:22:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 47,
                "id": "self",
                "lineno": 47,
                "node_id": 255,
                "src": "1158:4:5"
              }
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 29,
              "end_col_offset": 35,
              "end_lineno": 47,
              "left": {
                "ast_type": "Int",
                "col_offset": 29,
                "end_col_offset": 31,
                "end_lineno": 47,
                "lineno": 47,
                "node_id": 259,
                "src": "1183:2:5",
                "value": 10
              },
              "lineno": 47,
              "node_id": 258,
              "op": {
                "ast_type": "Pow",
                "col_offset": 29,
                "end_col_offset": 35,
                "end_lineno": 47,
                "lineno": 47,
                "node_id": 450,
                "src": "1183:6:5"
              },
              "right": {
                "ast_type": "Int",
                "col_offset": 33,
                "end_col_offset": 35,
                "end_lineno": 47,
                "lineno": 47,
                "node_id": 261,
                "src": "1187:2:5",
                "value": 18
              },
              "src": "1183:6:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 34,
            "id": "external",
            "lineno": 34,
            "node_id": 262,
            "src": "852:8:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 35,
        "end_lineno": 47,
        "lineno": 35,
        "name": "__init__",
        "node_id": 193,
        "pos": null,
        "returns": null,
        "src": "861:328:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 52,
                "id": "uint256",
                "lineno": 52,
                "node_id": 267,
                "src": "1221:7:5"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 10,
              "end_col_offset": 20,
              "end_lineno": 52,
              "lineno": 52,
              "node_id": 266,
              "src": "1218:10:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 10,
          "default": null,
          "defaults": [],
          "end_col_offset": 20,
          "end_lineno": 52,
          "lineno": 52,
          "node_id": 265,
          "src": "1218:10:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 53,
            "lineno": 53,
            "msg": null,
            "node_id": 269,
            "src": "1246:23:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 53,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 12,
                "end_lineno": 53,
                "id": "i",
                "lineno": 53,
                "node_id": 271,
                "src": "1253:1:5"
              },
              "lineno": 53,
              "node_id": 270,
              "op": {
                "ast_type": "Lt",
                "col_offset": 11,
                "end_col_offset": 27,
                "end_lineno": 53,
                "lineno": 53,
                "node_id": 346,
                "src": "1253:16:5"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "n_coins",
                "col_offset": 15,
                "end_col_offset": 27,
                "end_lineno": 53,
                "lineno": 53,
                "node_id": 274,
                "src": "1257:12:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 19,
                  "end_lineno": 53,
                  "id": "self",
                  "lineno": 53,
                  "node_id": 275,
                  "src": "1257:4:5"
                }
              },
              "src": "1253:16:5"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 54,
            "lineno": 54,
            "node_id": 278,
            "src": "1298:24:5",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 28,
              "end_lineno": 54,
              "lineno": 54,
              "node_id": 279,
              "slice": {
                "ast_type": "Index",
                "col_offset": 26,
                "end_col_offset": 27,
                "end_lineno": 54,
                "lineno": 54,
                "node_id": 284,
                "src": "1320:1:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 27,
                  "end_lineno": 54,
                  "id": "i",
                  "lineno": 54,
                  "node_id": 285,
                  "src": "1320:1:5"
                }
              },
              "src": "1305:17:5",
              "value": {
                "ast_type": "Attribute",
                "attr": "coin_list",
                "col_offset": 11,
                "end_col_offset": 25,
                "end_lineno": 54,
                "lineno": 54,
                "node_id": 280,
                "src": "1305:14:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 54,
                  "id": "self",
                  "lineno": 54,
                  "node_id": 281,
                  "src": "1305:4:5"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 50,
            "id": "external",
            "lineno": 50,
            "node_id": 288,
            "src": "1193:8:5"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 51,
            "id": "view",
            "lineno": 51,
            "node_id": 290,
            "src": "1203:4:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 28,
        "end_lineno": 54,
        "lineno": 52,
        "name": "coins",
        "node_id": 264,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 25,
          "end_col_offset": 32,
          "end_lineno": 52,
          "id": "address",
          "lineno": 52,
          "node_id": 292,
          "src": "1233:7:5"
        },
        "src": "1208:114:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 24,
                "end_col_offset": 31,
                "end_lineno": 59,
                "id": "uint256",
                "lineno": 59,
                "node_id": 297,
                "src": "1365:7:5"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 21,
              "end_col_offset": 31,
              "end_lineno": 59,
              "lineno": 59,
              "node_id": 296,
              "src": "1362:10:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 21,
          "default": null,
          "defaults": [],
          "end_col_offset": 31,
          "end_lineno": 59,
          "lineno": 59,
          "node_id": 295,
          "src": "1362:10:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 55,
            "end_lineno": 60,
            "lineno": 60,
            "msg": null,
            "node_id": 299,
            "src": "1390:51:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 55,
              "end_lineno": 60,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 39,
                "end_lineno": 60,
                "lineno": 60,
                "node_id": 301,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 37,
                  "end_col_offset": 38,
                  "end_lineno": 60,
                  "lineno": 60,
                  "node_id": 306,
                  "src": "1423:1:5",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 37,
                    "end_col_offset": 38,
                    "end_lineno": 60,
                    "lineno": 60,
                    "node_id": 307,
                    "src": "1423:1:5",
                    "value": 0
                  }
                },
                "src": "1397:28:5",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "underlying_coin_list",
                  "col_offset": 11,
                  "end_col_offset": 36,
                  "end_lineno": 60,
                  "lineno": 60,
                  "node_id": 302,
                  "src": "1397:25:5",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 60,
                    "id": "self",
                    "lineno": 60,
                    "node_id": 303,
                    "src": "1397:4:5"
                  }
                }
              },
              "lineno": 60,
              "node_id": 300,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 55,
                "end_lineno": 60,
                "lineno": 60,
                "node_id": 881,
                "src": "1397:44:5"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 43,
                "end_col_offset": 55,
                "end_lineno": 60,
                "id": "ZERO_ADDRESS",
                "lineno": 60,
                "node_id": 310,
                "src": "1429:12:5"
              },
              "src": "1397:44:5"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 61,
            "lineno": 61,
            "msg": null,
            "node_id": 312,
            "src": "1446:23:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 61,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 12,
                "end_lineno": 61,
                "id": "i",
                "lineno": 61,
                "node_id": 314,
                "src": "1453:1:5"
              },
              "lineno": 61,
              "node_id": 313,
              "op": {
                "ast_type": "Lt",
                "col_offset": 11,
                "end_col_offset": 27,
                "end_lineno": 61,
                "lineno": 61,
                "node_id": 346,
                "src": "1453:16:5"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "n_coins",
                "col_offset": 15,
                "end_col_offset": 27,
                "end_lineno": 61,
                "lineno": 61,
                "node_id": 317,
                "src": "1457:12:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 19,
                  "end_lineno": 61,
                  "id": "self",
                  "lineno": 61,
                  "node_id": 318,
                  "src": "1457:4:5"
                }
              },
              "src": "1453:16:5"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 39,
            "end_lineno": 62,
            "lineno": 62,
            "node_id": 321,
            "src": "1498:35:5",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 39,
              "end_lineno": 62,
              "lineno": 62,
              "node_id": 322,
              "slice": {
                "ast_type": "Index",
                "col_offset": 37,
                "end_col_offset": 38,
                "end_lineno": 62,
                "lineno": 62,
                "node_id": 327,
                "src": "1531:1:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 37,
                  "end_col_offset": 38,
                  "end_lineno": 62,
                  "id": "i",
                  "lineno": 62,
                  "node_id": 328,
                  "src": "1531:1:5"
                }
              },
              "src": "1505:28:5",
              "value": {
                "ast_type": "Attribute",
                "attr": "underlying_coin_list",
                "col_offset": 11,
                "end_col_offset": 36,
                "end_lineno": 62,
                "lineno": 62,
                "node_id": 323,
                "src": "1505:25:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 62,
                  "id": "self",
                  "lineno": 62,
                  "node_id": 324,
                  "src": "1505:4:5"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 57,
            "id": "external",
            "lineno": 57,
            "node_id": 331,
            "src": "1326:8:5"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 58,
            "id": "view",
            "lineno": 58,
            "node_id": 333,
            "src": "1336:4:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 39,
        "end_lineno": 62,
        "lineno": 59,
        "name": "underlying_coins",
        "node_id": 294,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 36,
          "end_col_offset": 43,
          "end_lineno": 59,
          "id": "address",
          "lineno": 59,
          "node_id": 335,
          "src": "1377:7:5"
        },
        "src": "1341:192:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 23,
                "end_lineno": 67,
                "id": "uint256",
                "lineno": 67,
                "node_id": 340,
                "src": "1568:7:5"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 23,
              "end_lineno": 67,
              "lineno": 67,
              "node_id": 339,
              "src": "1565:10:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 23,
          "end_lineno": 67,
          "lineno": 67,
          "node_id": 338,
          "src": "1565:10:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 68,
            "lineno": 68,
            "msg": null,
            "node_id": 342,
            "src": "1593:23:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 68,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 12,
                "end_lineno": 68,
                "id": "i",
                "lineno": 68,
                "node_id": 344,
                "src": "1600:1:5"
              },
              "lineno": 68,
              "node_id": 343,
              "op": {
                "ast_type": "Lt",
                "col_offset": 11,
                "end_col_offset": 27,
                "end_lineno": 68,
                "lineno": 68,
                "node_id": 346,
                "src": "1600:16:5"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "n_coins",
                "col_offset": 15,
                "end_col_offset": 27,
                "end_lineno": 68,
                "lineno": 68,
                "node_id": 347,
                "src": "1604:12:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 19,
                  "end_lineno": 68,
                  "id": "self",
                  "lineno": 68,
                  "node_id": 348,
                  "src": "1604:4:5"
                }
              },
              "src": "1600:16:5"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 69,
            "lineno": 69,
            "node_id": 351,
            "src": "1621:24:5",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 28,
              "end_lineno": 69,
              "lineno": 69,
              "node_id": 352,
              "slice": {
                "ast_type": "Index",
                "col_offset": 26,
                "end_col_offset": 27,
                "end_lineno": 69,
                "lineno": 69,
                "node_id": 357,
                "src": "1643:1:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 27,
                  "end_lineno": 69,
                  "id": "i",
                  "lineno": 69,
                  "node_id": 358,
                  "src": "1643:1:5"
                }
              },
              "src": "1628:17:5",
              "value": {
                "ast_type": "Attribute",
                "attr": "_balances",
                "col_offset": 11,
                "end_col_offset": 25,
                "end_lineno": 69,
                "lineno": 69,
                "node_id": 353,
                "src": "1628:14:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 69,
                  "id": "self",
                  "lineno": 69,
                  "node_id": 354,
                  "src": "1628:4:5"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 65,
            "id": "external",
            "lineno": 65,
            "node_id": 361,
            "src": "1537:8:5"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 66,
            "id": "view",
            "lineno": 66,
            "node_id": 363,
            "src": "1547:4:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 28,
        "end_lineno": 69,
        "lineno": 67,
        "name": "balances",
        "node_id": 337,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 28,
          "end_col_offset": 35,
          "end_lineno": 67,
          "id": "uint256",
          "lineno": 67,
          "node_id": 365,
          "src": "1580:7:5"
        },
        "src": "1552:93:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 74,
                "id": "address",
                "lineno": 74,
                "node_id": 370,
                "src": "1683:7:5"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 26,
              "end_lineno": 74,
              "lineno": 74,
              "node_id": 369,
              "src": "1676:14:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 33,
                "end_col_offset": 40,
                "end_lineno": 74,
                "id": "address",
                "lineno": 74,
                "node_id": 373,
                "src": "1697:7:5"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 28,
              "end_col_offset": 40,
              "end_lineno": 74,
              "lineno": 74,
              "node_id": 372,
              "src": "1692:12:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 47,
                "end_col_offset": 54,
                "end_lineno": 74,
                "id": "uint256",
                "lineno": 74,
                "node_id": 376,
                "src": "1711:7:5"
              },
              "arg": "_dx",
              "ast_type": "arg",
              "col_offset": 42,
              "end_col_offset": 54,
              "end_lineno": 74,
              "lineno": 74,
              "node_id": 375,
              "src": "1706:12:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 54,
          "end_lineno": 74,
          "lineno": 74,
          "node_id": 368,
          "src": "1676:42:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 28,
              "end_lineno": 75,
              "id": "uint256",
              "lineno": 75,
              "node_id": 381,
              "src": "1753:7:5"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 75,
            "lineno": 75,
            "node_id": 378,
            "simple": 1,
            "src": "1736:28:5",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 19,
              "end_lineno": 75,
              "id": "_from_precision",
              "lineno": 75,
              "node_id": 379,
              "src": "1736:15:5"
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 31,
              "end_col_offset": 32,
              "end_lineno": 75,
              "lineno": 75,
              "node_id": 383,
              "src": "1763:1:5",
              "value": 0
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 26,
              "end_lineno": 76,
              "id": "uint256",
              "lineno": 76,
              "node_id": 387,
              "src": "1784:7:5"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 76,
            "lineno": 76,
            "node_id": 384,
            "simple": 1,
            "src": "1769:26:5",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 76,
              "id": "_to_precision",
              "lineno": 76,
              "node_id": 385,
              "src": "1769:13:5"
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 29,
              "end_col_offset": 30,
              "end_lineno": 76,
              "lineno": 76,
              "node_id": 389,
              "src": "1794:1:5",
              "value": 0
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 28,
                "end_lineno": 79,
                "lineno": 79,
                "node_id": 396,
                "src": "1865:20:5",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 23,
                  "end_lineno": 79,
                  "id": "_from_precision",
                  "lineno": 79,
                  "node_id": 397,
                  "src": "1865:15:5"
                },
                "value": {
                  "ast_type": "Int",
                  "col_offset": 26,
                  "end_col_offset": 28,
                  "end_lineno": 79,
                  "lineno": 79,
                  "node_id": 399,
                  "src": "1883:2:5",
                  "value": 18
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 53,
            "end_lineno": 81,
            "lineno": 78,
            "node_id": 390,
            "orelse": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 53,
                "end_lineno": 81,
                "lineno": 81,
                "node_id": 400,
                "src": "1904:45:5",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 23,
                  "end_lineno": 81,
                  "id": "_from_precision",
                  "lineno": 81,
                  "node_id": 401,
                  "src": "1904:15:5"
                },
                "value": {
                  "args": [],
                  "ast_type": "Call",
                  "col_offset": 26,
                  "end_col_offset": 53,
                  "end_lineno": 81,
                  "func": {
                    "ast_type": "Attribute",
                    "attr": "decimals",
                    "col_offset": 26,
                    "end_col_offset": 51,
                    "end_lineno": 81,
                    "lineno": 81,
                    "node_id": 404,
                    "src": "1922:25:5",
                    "value": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 36,
                          "end_col_offset": 41,
                          "end_lineno": 81,
                          "id": "_from",
                          "lineno": 81,
                          "node_id": 408,
                          "src": "1932:5:5"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 26,
                      "end_col_offset": 42,
                      "end_lineno": 81,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 26,
                        "end_col_offset": 35,
                        "end_lineno": 81,
                        "id": "ERC20Mock",
                        "lineno": 81,
                        "node_id": 406,
                        "src": "1922:9:5"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 81,
                      "node_id": 405,
                      "src": "1922:16:5"
                    }
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 81,
                  "node_id": 403,
                  "src": "1922:27:5"
                }
              }
            ],
            "src": "1801:148:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 58,
              "end_lineno": 78,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 12,
                "end_lineno": 78,
                "id": "_from",
                "lineno": 78,
                "node_id": 392,
                "src": "1804:5:5"
              },
              "lineno": 78,
              "node_id": 391,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 58,
                "end_lineno": 78,
                "lineno": 78,
                "node_id": 919,
                "src": "1804:51:5"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 16,
                "end_col_offset": 58,
                "end_lineno": 78,
                "lineno": 78,
                "node_id": 395,
                "src": "1813:42:5",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "1804:51:5"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 26,
                "end_lineno": 83,
                "lineno": 83,
                "node_id": 417,
                "src": "2016:18:5",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 21,
                  "end_lineno": 83,
                  "id": "_to_precision",
                  "lineno": 83,
                  "node_id": 418,
                  "src": "2016:13:5"
                },
                "value": {
                  "ast_type": "Int",
                  "col_offset": 24,
                  "end_col_offset": 26,
                  "end_lineno": 83,
                  "lineno": 83,
                  "node_id": 420,
                  "src": "2032:2:5",
                  "value": 18
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 49,
            "end_lineno": 85,
            "lineno": 82,
            "node_id": 411,
            "orelse": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 49,
                "end_lineno": 85,
                "lineno": 85,
                "node_id": 421,
                "src": "2053:41:5",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 21,
                  "end_lineno": 85,
                  "id": "_to_precision",
                  "lineno": 85,
                  "node_id": 422,
                  "src": "2053:13:5"
                },
                "value": {
                  "args": [],
                  "ast_type": "Call",
                  "col_offset": 24,
                  "end_col_offset": 49,
                  "end_lineno": 85,
                  "func": {
                    "ast_type": "Attribute",
                    "attr": "decimals",
                    "col_offset": 24,
                    "end_col_offset": 47,
                    "end_lineno": 85,
                    "lineno": 85,
                    "node_id": 425,
                    "src": "2069:23:5",
                    "value": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 34,
                          "end_col_offset": 37,
                          "end_lineno": 85,
                          "id": "_to",
                          "lineno": 85,
                          "node_id": 429,
                          "src": "2079:3:5"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 24,
                      "end_col_offset": 38,
                      "end_lineno": 85,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 24,
                        "end_col_offset": 33,
                        "end_lineno": 85,
                        "id": "ERC20Mock",
                        "lineno": 85,
                        "node_id": 427,
                        "src": "2069:9:5"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 85,
                      "node_id": 426,
                      "src": "2069:14:5"
                    }
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 85,
                  "node_id": 424,
                  "src": "2069:25:5"
                }
              }
            ],
            "src": "1954:140:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 56,
              "end_lineno": 82,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 10,
                "end_lineno": 82,
                "id": "_to",
                "lineno": 82,
                "node_id": 413,
                "src": "1957:3:5"
              },
              "lineno": 82,
              "node_id": 412,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 56,
                "end_lineno": 82,
                "lineno": 82,
                "node_id": 919,
                "src": "1957:49:5"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 14,
                "end_col_offset": 56,
                "end_lineno": 82,
                "lineno": 82,
                "node_id": 416,
                "src": "1964:42:5",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "1957:49:5"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 9,
              "end_col_offset": 16,
              "end_lineno": 87,
              "id": "uint256",
              "lineno": 87,
              "node_id": 435,
              "src": "2105:7:5"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 68,
            "end_lineno": 87,
            "lineno": 87,
            "node_id": 432,
            "simple": 1,
            "src": "2100:64:5",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 7,
              "end_lineno": 87,
              "id": "_dy",
              "lineno": 87,
              "node_id": 433,
              "src": "2100:3:5"
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 19,
              "end_col_offset": 68,
              "end_lineno": 87,
              "left": {
                "ast_type": "BinOp",
                "col_offset": 19,
                "end_col_offset": 44,
                "end_lineno": 87,
                "left": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 87,
                  "id": "_dx",
                  "lineno": 87,
                  "node_id": 439,
                  "src": "2115:3:5"
                },
                "lineno": 87,
                "node_id": 438,
                "op": {
                  "ast_type": "Mult",
                  "col_offset": 19,
                  "end_col_offset": 44,
                  "end_lineno": 87,
                  "lineno": 87,
                  "node_id": 462,
                  "src": "2115:25:5"
                },
                "right": {
                  "ast_type": "BinOp",
                  "col_offset": 26,
                  "end_col_offset": 43,
                  "end_lineno": 87,
                  "left": {
                    "ast_type": "Int",
                    "col_offset": 26,
                    "end_col_offset": 28,
                    "end_lineno": 87,
                    "lineno": 87,
                    "node_id": 443,
                    "src": "2122:2:5",
                    "value": 10
                  },
                  "lineno": 87,
                  "node_id": 442,
                  "op": {
                    "ast_type": "Pow",
                    "col_offset": 26,
                    "end_col_offset": 43,
                    "end_lineno": 87,
                    "lineno": 87,
                    "node_id": 450,
                    "src": "2122:17:5"
                  },
                  "right": {
                    "ast_type": "Name",
                    "col_offset": 30,
                    "end_col_offset": 43,
                    "end_lineno": 87,
                    "id": "_to_precision",
                    "lineno": 87,
                    "node_id": 445,
                    "src": "2126:13:5"
                  },
                  "src": "2122:17:5"
                },
                "src": "2115:25:5"
              },
              "lineno": 87,
              "node_id": 437,
              "op": {
                "ast_type": "Div",
                "col_offset": 19,
                "end_col_offset": 68,
                "end_lineno": 87,
                "lineno": 87,
                "node_id": 467,
                "src": "2115:49:5"
              },
              "right": {
                "ast_type": "BinOp",
                "col_offset": 48,
                "end_col_offset": 67,
                "end_lineno": 87,
                "left": {
                  "ast_type": "Int",
                  "col_offset": 48,
                  "end_col_offset": 50,
                  "end_lineno": 87,
                  "lineno": 87,
                  "node_id": 449,
                  "src": "2144:2:5",
                  "value": 10
                },
                "lineno": 87,
                "node_id": 448,
                "op": {
                  "ast_type": "Pow",
                  "col_offset": 48,
                  "end_col_offset": 67,
                  "end_lineno": 87,
                  "lineno": 87,
                  "node_id": 450,
                  "src": "2144:19:5"
                },
                "right": {
                  "ast_type": "Name",
                  "col_offset": 52,
                  "end_col_offset": 67,
                  "end_lineno": 87,
                  "id": "_from_precision",
                  "lineno": 87,
                  "node_id": 451,
                  "src": "2148:15:5"
                },
                "src": "2144:19:5"
              },
              "src": "2115:49:5"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 10,
              "end_col_offset": 17,
              "end_lineno": 88,
              "id": "uint256",
              "lineno": 88,
              "node_id": 456,
              "src": "2175:7:5"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 50,
            "end_lineno": 88,
            "lineno": 88,
            "node_id": 453,
            "simple": 1,
            "src": "2169:46:5",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 8,
              "end_lineno": 88,
              "id": "_fee",
              "lineno": 88,
              "node_id": 454,
              "src": "2169:4:5"
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 20,
              "end_col_offset": 50,
              "end_lineno": 88,
              "left": {
                "ast_type": "BinOp",
                "col_offset": 20,
                "end_col_offset": 34,
                "end_lineno": 88,
                "left": {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 23,
                  "end_lineno": 88,
                  "id": "_dy",
                  "lineno": 88,
                  "node_id": 460,
                  "src": "2185:3:5"
                },
                "lineno": 88,
                "node_id": 459,
                "op": {
                  "ast_type": "Mult",
                  "col_offset": 20,
                  "end_col_offset": 34,
                  "end_lineno": 88,
                  "lineno": 88,
                  "node_id": 462,
                  "src": "2185:14:5"
                },
                "right": {
                  "ast_type": "Attribute",
                  "attr": "fee",
                  "col_offset": 26,
                  "end_col_offset": 34,
                  "end_lineno": 88,
                  "lineno": 88,
                  "node_id": 463,
                  "src": "2191:8:5",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 30,
                    "end_lineno": 88,
                    "id": "self",
                    "lineno": 88,
                    "node_id": 464,
                    "src": "2191:4:5"
                  }
                },
                "src": "2185:14:5"
              },
              "lineno": 88,
              "node_id": 458,
              "op": {
                "ast_type": "Div",
                "col_offset": 20,
                "end_col_offset": 50,
                "end_lineno": 88,
                "lineno": 88,
                "node_id": 467,
                "src": "2185:30:5"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 37,
                "end_col_offset": 50,
                "end_lineno": 88,
                "id": "FEE_PRECISION",
                "lineno": 88,
                "node_id": 468,
                "src": "2202:13:5"
              },
              "src": "2185:30:5"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 21,
            "end_lineno": 90,
            "lineno": 90,
            "node_id": 470,
            "src": "2221:17:5",
            "value": {
              "ast_type": "BinOp",
              "col_offset": 11,
              "end_col_offset": 21,
              "end_lineno": 90,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 90,
                "id": "_dy",
                "lineno": 90,
                "node_id": 472,
                "src": "2228:3:5"
              },
              "lineno": 90,
              "node_id": 471,
              "op": {
                "ast_type": "Sub",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 90,
                "lineno": 90,
                "node_id": 474,
                "src": "2228:10:5"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 17,
                "end_col_offset": 21,
                "end_lineno": 90,
                "id": "_fee",
                "lineno": 90,
                "node_id": 475,
                "src": "2234:4:5"
              },
              "src": "2228:10:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 72,
            "id": "internal",
            "lineno": 72,
            "node_id": 477,
            "src": "1649:8:5"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 73,
            "id": "view",
            "lineno": 73,
            "node_id": 479,
            "src": "1659:4:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 21,
        "end_lineno": 90,
        "lineno": 74,
        "name": "_get_dy",
        "node_id": 367,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 59,
          "end_col_offset": 66,
          "end_lineno": 74,
          "id": "uint256",
          "lineno": 74,
          "node_id": 481,
          "src": "1723:7:5"
        },
        "src": "1664:574:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 20,
                "end_lineno": 95,
                "id": "int128",
                "lineno": 95,
                "node_id": 486,
                "src": "2271:6:5"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 11,
              "end_col_offset": 20,
              "end_lineno": 95,
              "lineno": 95,
              "node_id": 485,
              "src": "2268:9:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 31,
                "end_lineno": 95,
                "id": "int128",
                "lineno": 95,
                "node_id": 489,
                "src": "2282:6:5"
              },
              "arg": "j",
              "ast_type": "arg",
              "col_offset": 22,
              "end_col_offset": 31,
              "end_lineno": 95,
              "lineno": 95,
              "node_id": 488,
              "src": "2279:9:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 37,
                "end_col_offset": 44,
                "end_lineno": 95,
                "id": "uint256",
                "lineno": 95,
                "node_id": 492,
                "src": "2294:7:5"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 33,
              "end_col_offset": 44,
              "end_lineno": 95,
              "lineno": 95,
              "node_id": 491,
              "src": "2290:11:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 11,
          "default": null,
          "defaults": [],
          "end_col_offset": 44,
          "end_lineno": 95,
          "lineno": 95,
          "node_id": 484,
          "src": "2268:33:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 65,
            "end_lineno": 96,
            "lineno": 96,
            "node_id": 494,
            "src": "2319:61:5",
            "value": {
              "args": [
                {
                  "ast_type": "Subscript",
                  "col_offset": 24,
                  "end_col_offset": 41,
                  "end_lineno": 96,
                  "lineno": 96,
                  "node_id": 500,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 39,
                    "end_col_offset": 40,
                    "end_lineno": 96,
                    "lineno": 96,
                    "node_id": 505,
                    "src": "2354:1:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 39,
                      "end_col_offset": 40,
                      "end_lineno": 96,
                      "id": "i",
                      "lineno": 96,
                      "node_id": 506,
                      "src": "2354:1:5"
                    }
                  },
                  "src": "2339:17:5",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 24,
                    "end_col_offset": 38,
                    "end_lineno": 96,
                    "lineno": 96,
                    "node_id": 501,
                    "src": "2339:14:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 24,
                      "end_col_offset": 28,
                      "end_lineno": 96,
                      "id": "self",
                      "lineno": 96,
                      "node_id": 502,
                      "src": "2339:4:5"
                    }
                  }
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 43,
                  "end_col_offset": 60,
                  "end_lineno": 96,
                  "lineno": 96,
                  "node_id": 509,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 58,
                    "end_col_offset": 59,
                    "end_lineno": 96,
                    "lineno": 96,
                    "node_id": 514,
                    "src": "2373:1:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 58,
                      "end_col_offset": 59,
                      "end_lineno": 96,
                      "id": "j",
                      "lineno": 96,
                      "node_id": 515,
                      "src": "2373:1:5"
                    }
                  },
                  "src": "2358:17:5",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 43,
                    "end_col_offset": 57,
                    "end_lineno": 96,
                    "lineno": 96,
                    "node_id": 510,
                    "src": "2358:14:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 43,
                      "end_col_offset": 47,
                      "end_lineno": 96,
                      "id": "self",
                      "lineno": 96,
                      "node_id": 511,
                      "src": "2358:4:5"
                    }
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 62,
                  "end_col_offset": 64,
                  "end_lineno": 96,
                  "id": "dx",
                  "lineno": 96,
                  "node_id": 518,
                  "src": "2377:2:5"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 65,
              "end_lineno": 96,
              "func": {
                "ast_type": "Attribute",
                "attr": "_get_dy",
                "col_offset": 11,
                "end_col_offset": 23,
                "end_lineno": 96,
                "lineno": 96,
                "node_id": 496,
                "src": "2326:12:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 96,
                  "id": "self",
                  "lineno": 96,
                  "node_id": 497,
                  "src": "2326:4:5"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 96,
              "node_id": 495,
              "src": "2326:54:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 93,
            "id": "external",
            "lineno": 93,
            "node_id": 520,
            "src": "2242:8:5"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 94,
            "id": "view",
            "lineno": 94,
            "node_id": 522,
            "src": "2252:4:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 65,
        "end_lineno": 96,
        "lineno": 95,
        "name": "get_dy",
        "node_id": 483,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 49,
          "end_col_offset": 56,
          "end_lineno": 95,
          "id": "uint256",
          "lineno": 95,
          "node_id": 524,
          "src": "2306:7:5"
        },
        "src": "2257:123:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 31,
                "end_lineno": 101,
                "id": "int128",
                "lineno": 101,
                "node_id": 529,
                "src": "2424:6:5"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 22,
              "end_col_offset": 31,
              "end_lineno": 101,
              "lineno": 101,
              "node_id": 528,
              "src": "2421:9:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 36,
                "end_col_offset": 42,
                "end_lineno": 101,
                "id": "int128",
                "lineno": 101,
                "node_id": 532,
                "src": "2435:6:5"
              },
              "arg": "j",
              "ast_type": "arg",
              "col_offset": 33,
              "end_col_offset": 42,
              "end_lineno": 101,
              "lineno": 101,
              "node_id": 531,
              "src": "2432:9:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 48,
                "end_col_offset": 55,
                "end_lineno": 101,
                "id": "uint256",
                "lineno": 101,
                "node_id": 535,
                "src": "2447:7:5"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 44,
              "end_col_offset": 55,
              "end_lineno": 101,
              "lineno": 101,
              "node_id": 534,
              "src": "2443:11:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 22,
          "default": null,
          "defaults": [],
          "end_col_offset": 55,
          "end_lineno": 101,
          "lineno": 101,
          "node_id": 527,
          "src": "2421:33:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 55,
            "end_lineno": 102,
            "lineno": 102,
            "msg": null,
            "node_id": 537,
            "src": "2472:51:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 55,
              "end_lineno": 102,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 39,
                "end_lineno": 102,
                "lineno": 102,
                "node_id": 539,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 37,
                  "end_col_offset": 38,
                  "end_lineno": 102,
                  "lineno": 102,
                  "node_id": 544,
                  "src": "2505:1:5",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 37,
                    "end_col_offset": 38,
                    "end_lineno": 102,
                    "lineno": 102,
                    "node_id": 545,
                    "src": "2505:1:5",
                    "value": 0
                  }
                },
                "src": "2479:28:5",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "underlying_coin_list",
                  "col_offset": 11,
                  "end_col_offset": 36,
                  "end_lineno": 102,
                  "lineno": 102,
                  "node_id": 540,
                  "src": "2479:25:5",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 102,
                    "id": "self",
                    "lineno": 102,
                    "node_id": 541,
                    "src": "2479:4:5"
                  }
                }
              },
              "lineno": 102,
              "node_id": 538,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 55,
                "end_lineno": 102,
                "lineno": 102,
                "node_id": 881,
                "src": "2479:44:5"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 43,
                "end_col_offset": 55,
                "end_lineno": 102,
                "id": "ZERO_ADDRESS",
                "lineno": 102,
                "node_id": 548,
                "src": "2511:12:5"
              },
              "src": "2479:44:5"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 87,
            "end_lineno": 103,
            "lineno": 103,
            "node_id": 550,
            "src": "2528:83:5",
            "value": {
              "args": [
                {
                  "ast_type": "Subscript",
                  "col_offset": 24,
                  "end_col_offset": 52,
                  "end_lineno": 103,
                  "lineno": 103,
                  "node_id": 556,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 50,
                    "end_col_offset": 51,
                    "end_lineno": 103,
                    "lineno": 103,
                    "node_id": 561,
                    "src": "2574:1:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 50,
                      "end_col_offset": 51,
                      "end_lineno": 103,
                      "id": "i",
                      "lineno": 103,
                      "node_id": 562,
                      "src": "2574:1:5"
                    }
                  },
                  "src": "2548:28:5",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "underlying_coin_list",
                    "col_offset": 24,
                    "end_col_offset": 49,
                    "end_lineno": 103,
                    "lineno": 103,
                    "node_id": 557,
                    "src": "2548:25:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 24,
                      "end_col_offset": 28,
                      "end_lineno": 103,
                      "id": "self",
                      "lineno": 103,
                      "node_id": 558,
                      "src": "2548:4:5"
                    }
                  }
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 54,
                  "end_col_offset": 82,
                  "end_lineno": 103,
                  "lineno": 103,
                  "node_id": 565,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 80,
                    "end_col_offset": 81,
                    "end_lineno": 103,
                    "lineno": 103,
                    "node_id": 570,
                    "src": "2604:1:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 80,
                      "end_col_offset": 81,
                      "end_lineno": 103,
                      "id": "j",
                      "lineno": 103,
                      "node_id": 571,
                      "src": "2604:1:5"
                    }
                  },
                  "src": "2578:28:5",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "underlying_coin_list",
                    "col_offset": 54,
                    "end_col_offset": 79,
                    "end_lineno": 103,
                    "lineno": 103,
                    "node_id": 566,
                    "src": "2578:25:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 54,
                      "end_col_offset": 58,
                      "end_lineno": 103,
                      "id": "self",
                      "lineno": 103,
                      "node_id": 567,
                      "src": "2578:4:5"
                    }
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 84,
                  "end_col_offset": 86,
                  "end_lineno": 103,
                  "id": "dx",
                  "lineno": 103,
                  "node_id": 574,
                  "src": "2608:2:5"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 87,
              "end_lineno": 103,
              "func": {
                "ast_type": "Attribute",
                "attr": "_get_dy",
                "col_offset": 11,
                "end_col_offset": 23,
                "end_lineno": 103,
                "lineno": 103,
                "node_id": 552,
                "src": "2535:12:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 103,
                  "id": "self",
                  "lineno": 103,
                  "node_id": 553,
                  "src": "2535:4:5"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 103,
              "node_id": 551,
              "src": "2535:76:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 99,
            "id": "external",
            "lineno": 99,
            "node_id": 576,
            "src": "2384:8:5"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 100,
            "id": "view",
            "lineno": 100,
            "node_id": 578,
            "src": "2394:4:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 87,
        "end_lineno": 103,
        "lineno": 101,
        "name": "get_dy_underlying",
        "node_id": 526,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 60,
          "end_col_offset": 67,
          "end_lineno": 101,
          "id": "uint256",
          "lineno": 101,
          "node_id": 580,
          "src": "2459:7:5"
        },
        "src": "2399:212:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 107,
                "id": "address",
                "lineno": 107,
                "node_id": 585,
                "src": "2647:7:5"
              },
              "arg": "_sender",
              "ast_type": "arg",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 107,
              "lineno": 107,
              "node_id": 584,
              "src": "2638:16:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 46,
                "end_lineno": 107,
                "id": "address",
                "lineno": 107,
                "node_id": 588,
                "src": "2663:7:5"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 46,
              "end_lineno": 107,
              "lineno": 107,
              "node_id": 587,
              "src": "2656:14:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 53,
                "end_col_offset": 60,
                "end_lineno": 107,
                "id": "address",
                "lineno": 107,
                "node_id": 591,
                "src": "2677:7:5"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 48,
              "end_col_offset": 60,
              "end_lineno": 107,
              "lineno": 107,
              "node_id": 590,
              "src": "2672:12:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 66,
                "end_col_offset": 73,
                "end_lineno": 107,
                "id": "uint256",
                "lineno": 107,
                "node_id": 594,
                "src": "2690:7:5"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 62,
              "end_col_offset": 73,
              "end_lineno": 107,
              "lineno": 107,
              "node_id": 593,
              "src": "2686:11:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 83,
                "end_col_offset": 90,
                "end_lineno": 107,
                "id": "uint256",
                "lineno": 107,
                "node_id": 597,
                "src": "2707:7:5"
              },
              "arg": "min_dy",
              "ast_type": "arg",
              "col_offset": 75,
              "end_col_offset": 90,
              "end_lineno": 107,
              "lineno": 107,
              "node_id": 596,
              "src": "2699:15:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 14,
          "default": null,
          "defaults": [],
          "end_col_offset": 90,
          "end_lineno": 107,
          "lineno": 107,
          "node_id": 583,
          "src": "2638:76:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 8,
              "end_col_offset": 15,
              "end_lineno": 108,
              "id": "uint256",
              "lineno": 108,
              "node_id": 602,
              "src": "2725:7:5"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 46,
            "end_lineno": 108,
            "lineno": 108,
            "node_id": 599,
            "simple": 1,
            "src": "2721:42:5",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 6,
              "end_lineno": 108,
              "id": "dy",
              "lineno": 108,
              "node_id": 600,
              "src": "2721:2:5"
            },
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 36,
                  "end_lineno": 108,
                  "id": "_from",
                  "lineno": 108,
                  "node_id": 609,
                  "src": "2748:5:5"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 41,
                  "end_lineno": 108,
                  "id": "_to",
                  "lineno": 108,
                  "node_id": 611,
                  "src": "2755:3:5"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 43,
                  "end_col_offset": 45,
                  "end_lineno": 108,
                  "id": "dx",
                  "lineno": 108,
                  "node_id": 613,
                  "src": "2760:2:5"
                }
              ],
              "ast_type": "Call",
              "col_offset": 18,
              "end_col_offset": 46,
              "end_lineno": 108,
              "func": {
                "ast_type": "Attribute",
                "attr": "_get_dy",
                "col_offset": 18,
                "end_col_offset": 30,
                "end_lineno": 108,
                "lineno": 108,
                "node_id": 605,
                "src": "2735:12:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 22,
                  "end_lineno": 108,
                  "id": "self",
                  "lineno": 108,
                  "node_id": 606,
                  "src": "2735:4:5"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 108,
              "node_id": 604,
              "src": "2735:28:5"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 73,
            "end_lineno": 109,
            "lineno": 109,
            "msg": {
              "ast_type": "Str",
              "col_offset": 25,
              "end_col_offset": 73,
              "end_lineno": 109,
              "lineno": 109,
              "node_id": 622,
              "src": "2789:48:5",
              "value": "Exchange resulted in fewer coins than expected"
            },
            "node_id": 615,
            "src": "2768:69:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 23,
              "end_lineno": 109,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 13,
                "end_lineno": 109,
                "id": "dy",
                "lineno": 109,
                "node_id": 617,
                "src": "2775:2:5"
              },
              "lineno": 109,
              "node_id": 616,
              "op": {
                "ast_type": "GtE",
                "col_offset": 11,
                "end_col_offset": 23,
                "end_lineno": 109,
                "lineno": 109,
                "node_id": 619,
                "src": "2775:12:5"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 17,
                "end_col_offset": 23,
                "end_lineno": 109,
                "id": "min_dy",
                "lineno": 109,
                "node_id": 620,
                "src": "2781:6:5"
              },
              "src": "2775:12:5"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "annotation": {
                  "ast_type": "Subscript",
                  "col_offset": 19,
                  "end_col_offset": 28,
                  "end_lineno": 112,
                  "lineno": 112,
                  "node_id": 632,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 25,
                    "end_col_offset": 27,
                    "end_lineno": 112,
                    "lineno": 112,
                    "node_id": 635,
                    "src": "2924:2:5",
                    "value": {
                      "ast_type": "Int",
                      "col_offset": 25,
                      "end_col_offset": 27,
                      "end_lineno": 112,
                      "lineno": 112,
                      "node_id": 636,
                      "src": "2924:2:5",
                      "value": 32
                    }
                  },
                  "src": "2918:9:5",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 24,
                    "end_lineno": 112,
                    "id": "Bytes",
                    "lineno": 112,
                    "node_id": 633,
                    "src": "2918:5:5"
                  }
                },
                "ast_type": "AnnAssign",
                "col_offset": 8,
                "end_col_offset": 9,
                "end_lineno": 121,
                "lineno": 112,
                "node_id": 629,
                "simple": 1,
                "src": "2907:313:5",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 17,
                  "end_lineno": 112,
                  "id": "_response",
                  "lineno": 112,
                  "node_id": 630,
                  "src": "2907:9:5"
                },
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 12,
                      "end_col_offset": 17,
                      "end_lineno": 113,
                      "id": "_from",
                      "lineno": 113,
                      "node_id": 641,
                      "src": "2952:5:5"
                    },
                    {
                      "args": [
                        {
                          "args": [
                            {
                              "ast_type": "Str",
                              "col_offset": 26,
                              "end_col_offset": 65,
                              "end_lineno": 115,
                              "lineno": 115,
                              "node_id": 649,
                              "src": "3005:39:5",
                              "value": "transferFrom(address,address,uint256)"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 66,
                          "end_lineno": 115,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 25,
                            "end_lineno": 115,
                            "id": "method_id",
                            "lineno": 115,
                            "node_id": 647,
                            "src": "2995:9:5"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 115,
                          "node_id": 646,
                          "src": "2995:50:5"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 31,
                              "end_lineno": 116,
                              "id": "_sender",
                              "lineno": 116,
                              "node_id": 653,
                              "src": "3071:7:5"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 33,
                              "end_col_offset": 40,
                              "end_lineno": 116,
                              "id": "bytes32",
                              "lineno": 116,
                              "node_id": 655,
                              "src": "3080:7:5"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 41,
                          "end_lineno": 116,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 116,
                            "id": "convert",
                            "lineno": 116,
                            "node_id": 651,
                            "src": "3063:7:5"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 116,
                          "node_id": 650,
                          "src": "3063:25:5"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 28,
                              "end_lineno": 117,
                              "id": "self",
                              "lineno": 117,
                              "node_id": 660,
                              "src": "3114:4:5"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 30,
                              "end_col_offset": 37,
                              "end_lineno": 117,
                              "id": "bytes32",
                              "lineno": 117,
                              "node_id": 662,
                              "src": "3120:7:5"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 38,
                          "end_lineno": 117,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 117,
                            "id": "convert",
                            "lineno": 117,
                            "node_id": 658,
                            "src": "3106:7:5"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 117,
                          "node_id": 657,
                          "src": "3106:22:5"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 26,
                              "end_lineno": 118,
                              "id": "dx",
                              "lineno": 118,
                              "node_id": 667,
                              "src": "3154:2:5"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 28,
                              "end_col_offset": 35,
                              "end_lineno": 118,
                              "id": "bytes32",
                              "lineno": 118,
                              "node_id": 669,
                              "src": "3158:7:5"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 36,
                          "end_lineno": 118,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 118,
                            "id": "convert",
                            "lineno": 118,
                            "node_id": 665,
                            "src": "3146:7:5"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 118,
                          "node_id": 664,
                          "src": "3146:20:5"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 12,
                      "end_col_offset": 13,
                      "end_lineno": 119,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 12,
                        "end_col_offset": 18,
                        "end_lineno": 114,
                        "id": "concat",
                        "lineno": 114,
                        "node_id": 644,
                        "src": "2971:6:5"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 114,
                      "node_id": 643,
                      "src": "2971:210:5"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 31,
                  "end_col_offset": 9,
                  "end_lineno": 121,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 31,
                    "end_col_offset": 39,
                    "end_lineno": 112,
                    "id": "raw_call",
                    "lineno": 112,
                    "node_id": 639,
                    "src": "2930:8:5"
                  },
                  "keyword": null,
                  "keywords": [
                    {
                      "arg": "max_outsize",
                      "ast_type": "keyword",
                      "col_offset": 12,
                      "end_col_offset": 26,
                      "end_lineno": 120,
                      "lineno": 120,
                      "node_id": 671,
                      "src": "3195:14:5",
                      "value": {
                        "ast_type": "Int",
                        "col_offset": 24,
                        "end_col_offset": 26,
                        "end_lineno": 120,
                        "lineno": 120,
                        "node_id": 672,
                        "src": "3207:2:5",
                        "value": 32
                      }
                    }
                  ],
                  "lineno": 112,
                  "node_id": 638,
                  "src": "2930:290:5"
                }
              },
              {
                "ast_type": "If",
                "body": [
                  {
                    "ast_type": "Assert",
                    "col_offset": 12,
                    "end_col_offset": 43,
                    "end_lineno": 123,
                    "lineno": 123,
                    "msg": null,
                    "node_id": 682,
                    "src": "3264:31:5",
                    "test": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 27,
                          "end_col_offset": 36,
                          "end_lineno": 123,
                          "id": "_response",
                          "lineno": 123,
                          "node_id": 686,
                          "src": "3279:9:5"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 38,
                          "end_col_offset": 42,
                          "end_lineno": 123,
                          "id": "bool",
                          "lineno": 123,
                          "node_id": 688,
                          "src": "3290:4:5"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 19,
                      "end_col_offset": 43,
                      "end_lineno": 123,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 19,
                        "end_col_offset": 26,
                        "end_lineno": 123,
                        "id": "convert",
                        "lineno": 123,
                        "node_id": 684,
                        "src": "3271:7:5"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 123,
                      "node_id": 683,
                      "src": "3271:24:5"
                    }
                  }
                ],
                "col_offset": 8,
                "end_col_offset": 43,
                "end_lineno": 123,
                "lineno": 122,
                "node_id": 673,
                "orelse": [],
                "src": "3229:66:5",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 11,
                  "end_col_offset": 29,
                  "end_lineno": 122,
                  "left": {
                    "args": [
                      {
                        "ast_type": "Name",
                        "col_offset": 15,
                        "end_col_offset": 24,
                        "end_lineno": 122,
                        "id": "_response",
                        "lineno": 122,
                        "node_id": 678,
                        "src": "3236:9:5"
                      }
                    ],
                    "ast_type": "Call",
                    "col_offset": 11,
                    "end_col_offset": 25,
                    "end_lineno": 122,
                    "func": {
                      "ast_type": "Name",
                      "col_offset": 11,
                      "end_col_offset": 14,
                      "end_lineno": 122,
                      "id": "len",
                      "lineno": 122,
                      "node_id": 676,
                      "src": "3232:3:5"
                    },
                    "keyword": null,
                    "keywords": [],
                    "lineno": 122,
                    "node_id": 675,
                    "src": "3232:14:5"
                  },
                  "lineno": 122,
                  "node_id": 674,
                  "op": {
                    "ast_type": "Gt",
                    "col_offset": 11,
                    "end_col_offset": 29,
                    "end_lineno": 122,
                    "lineno": 122,
                    "node_id": 761,
                    "src": "3232:18:5"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 28,
                    "end_col_offset": 29,
                    "end_lineno": 122,
                    "lineno": 122,
                    "node_id": 681,
                    "src": "3249:1:5",
                    "value": 0
                  },
                  "src": "3232:18:5"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 43,
            "end_lineno": 123,
            "lineno": 111,
            "node_id": 623,
            "orelse": [],
            "src": "2843:452:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 58,
              "end_lineno": 111,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 12,
                "end_lineno": 111,
                "id": "_from",
                "lineno": 111,
                "node_id": 625,
                "src": "2846:5:5"
              },
              "lineno": 111,
              "node_id": 624,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 7,
                "end_col_offset": 58,
                "end_lineno": 111,
                "lineno": 111,
                "node_id": 881,
                "src": "2846:51:5"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 16,
                "end_col_offset": 58,
                "end_lineno": 111,
                "lineno": 111,
                "node_id": 628,
                "src": "2855:42:5",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "2846:51:5"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 8,
                "end_col_offset": 25,
                "end_lineno": 126,
                "lineno": 126,
                "node_id": 696,
                "src": "3363:17:5",
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 13,
                      "end_col_offset": 20,
                      "end_lineno": 126,
                      "id": "_sender",
                      "lineno": 126,
                      "node_id": 700,
                      "src": "3368:7:5"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 22,
                      "end_col_offset": 24,
                      "end_lineno": 126,
                      "id": "dy",
                      "lineno": 126,
                      "node_id": 702,
                      "src": "3377:2:5"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 8,
                  "end_col_offset": 25,
                  "end_lineno": 126,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 8,
                    "end_col_offset": 12,
                    "end_lineno": 126,
                    "id": "send",
                    "lineno": 126,
                    "node_id": 698,
                    "src": "3363:4:5"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 126,
                  "node_id": 697,
                  "src": "3363:17:5"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 43,
            "end_lineno": 139,
            "lineno": 125,
            "node_id": 690,
            "orelse": [
              {
                "ast_type": "Expr",
                "col_offset": 8,
                "end_col_offset": 50,
                "end_lineno": 128,
                "lineno": 128,
                "node_id": 704,
                "src": "3399:42:5",
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 41,
                      "end_col_offset": 45,
                      "end_lineno": 128,
                      "id": "self",
                      "lineno": 128,
                      "node_id": 713,
                      "src": "3432:4:5"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 47,
                      "end_col_offset": 49,
                      "end_lineno": 128,
                      "id": "dy",
                      "lineno": 128,
                      "node_id": 715,
                      "src": "3438:2:5"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 8,
                  "end_col_offset": 50,
                  "end_lineno": 128,
                  "func": {
                    "ast_type": "Attribute",
                    "attr": "_mint_for_testing",
                    "col_offset": 8,
                    "end_col_offset": 40,
                    "end_lineno": 128,
                    "lineno": 128,
                    "node_id": 706,
                    "src": "3399:32:5",
                    "value": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 18,
                          "end_col_offset": 21,
                          "end_lineno": 128,
                          "id": "_to",
                          "lineno": 128,
                          "node_id": 710,
                          "src": "3409:3:5"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 8,
                      "end_col_offset": 22,
                      "end_lineno": 128,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 8,
                        "end_col_offset": 17,
                        "end_lineno": 128,
                        "id": "ERC20Mock",
                        "lineno": 128,
                        "node_id": 708,
                        "src": "3399:9:5"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 128,
                      "node_id": 707,
                      "src": "3399:14:5"
                    }
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 128,
                  "node_id": 705,
                  "src": "3399:42:5"
                }
              },
              {
                "annotation": {
                  "ast_type": "Subscript",
                  "col_offset": 19,
                  "end_col_offset": 28,
                  "end_lineno": 129,
                  "lineno": 129,
                  "node_id": 720,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 25,
                    "end_col_offset": 27,
                    "end_lineno": 129,
                    "lineno": 129,
                    "node_id": 723,
                    "src": "3467:2:5",
                    "value": {
                      "ast_type": "Int",
                      "col_offset": 25,
                      "end_col_offset": 27,
                      "end_lineno": 129,
                      "lineno": 129,
                      "node_id": 724,
                      "src": "3467:2:5",
                      "value": 32
                    }
                  },
                  "src": "3461:9:5",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 24,
                    "end_lineno": 129,
                    "id": "Bytes",
                    "lineno": 129,
                    "node_id": 721,
                    "src": "3461:5:5"
                  }
                },
                "ast_type": "AnnAssign",
                "col_offset": 8,
                "end_col_offset": 9,
                "end_lineno": 137,
                "lineno": 129,
                "node_id": 717,
                "simple": 1,
                "src": "3450:259:5",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 17,
                  "end_lineno": 129,
                  "id": "_response",
                  "lineno": 129,
                  "node_id": 718,
                  "src": "3450:9:5"
                },
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 12,
                      "end_col_offset": 15,
                      "end_lineno": 130,
                      "id": "_to",
                      "lineno": 130,
                      "node_id": 729,
                      "src": "3495:3:5"
                    },
                    {
                      "args": [
                        {
                          "args": [
                            {
                              "ast_type": "Str",
                              "col_offset": 26,
                              "end_col_offset": 53,
                              "end_lineno": 132,
                              "lineno": 132,
                              "node_id": 737,
                              "src": "3546:27:5",
                              "value": "transfer(address,uint256)"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 54,
                          "end_lineno": 132,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 25,
                            "end_lineno": 132,
                            "id": "method_id",
                            "lineno": 132,
                            "node_id": 735,
                            "src": "3536:9:5"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 132,
                          "node_id": 734,
                          "src": "3536:38:5"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 31,
                              "end_lineno": 133,
                              "id": "_sender",
                              "lineno": 133,
                              "node_id": 741,
                              "src": "3600:7:5"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 33,
                              "end_col_offset": 40,
                              "end_lineno": 133,
                              "id": "bytes32",
                              "lineno": 133,
                              "node_id": 743,
                              "src": "3609:7:5"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 41,
                          "end_lineno": 133,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 133,
                            "id": "convert",
                            "lineno": 133,
                            "node_id": 739,
                            "src": "3592:7:5"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 133,
                          "node_id": 738,
                          "src": "3592:25:5"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 26,
                              "end_lineno": 134,
                              "id": "dy",
                              "lineno": 134,
                              "node_id": 748,
                              "src": "3643:2:5"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 28,
                              "end_col_offset": 35,
                              "end_lineno": 134,
                              "id": "bytes32",
                              "lineno": 134,
                              "node_id": 750,
                              "src": "3647:7:5"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 36,
                          "end_lineno": 134,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 134,
                            "id": "convert",
                            "lineno": 134,
                            "node_id": 746,
                            "src": "3635:7:5"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 134,
                          "node_id": 745,
                          "src": "3635:20:5"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 12,
                      "end_col_offset": 13,
                      "end_lineno": 135,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 12,
                        "end_col_offset": 18,
                        "end_lineno": 131,
                        "id": "concat",
                        "lineno": 131,
                        "node_id": 732,
                        "src": "3512:6:5"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 131,
                      "node_id": 731,
                      "src": "3512:158:5"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 31,
                  "end_col_offset": 9,
                  "end_lineno": 137,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 31,
                    "end_col_offset": 39,
                    "end_lineno": 129,
                    "id": "raw_call",
                    "lineno": 129,
                    "node_id": 727,
                    "src": "3473:8:5"
                  },
                  "keyword": null,
                  "keywords": [
                    {
                      "arg": "max_outsize",
                      "ast_type": "keyword",
                      "col_offset": 12,
                      "end_col_offset": 26,
                      "end_lineno": 136,
                      "lineno": 136,
                      "node_id": 752,
                      "src": "3684:14:5",
                      "value": {
                        "ast_type": "Int",
                        "col_offset": 24,
                        "end_col_offset": 26,
                        "end_lineno": 136,
                        "lineno": 136,
                        "node_id": 753,
                        "src": "3696:2:5",
                        "value": 32
                      }
                    }
                  ],
                  "lineno": 129,
                  "node_id": 726,
                  "src": "3473:236:5"
                }
              },
              {
                "ast_type": "If",
                "body": [
                  {
                    "ast_type": "Assert",
                    "col_offset": 12,
                    "end_col_offset": 43,
                    "end_lineno": 139,
                    "lineno": 139,
                    "msg": null,
                    "node_id": 763,
                    "src": "3753:31:5",
                    "test": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 27,
                          "end_col_offset": 36,
                          "end_lineno": 139,
                          "id": "_response",
                          "lineno": 139,
                          "node_id": 767,
                          "src": "3768:9:5"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 38,
                          "end_col_offset": 42,
                          "end_lineno": 139,
                          "id": "bool",
                          "lineno": 139,
                          "node_id": 769,
                          "src": "3779:4:5"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 19,
                      "end_col_offset": 43,
                      "end_lineno": 139,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 19,
                        "end_col_offset": 26,
                        "end_lineno": 139,
                        "id": "convert",
                        "lineno": 139,
                        "node_id": 765,
                        "src": "3760:7:5"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 139,
                      "node_id": 764,
                      "src": "3760:24:5"
                    }
                  }
                ],
                "col_offset": 8,
                "end_col_offset": 43,
                "end_lineno": 139,
                "lineno": 138,
                "node_id": 754,
                "orelse": [],
                "src": "3718:66:5",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 11,
                  "end_col_offset": 29,
                  "end_lineno": 138,
                  "left": {
                    "args": [
                      {
                        "ast_type": "Name",
                        "col_offset": 15,
                        "end_col_offset": 24,
                        "end_lineno": 138,
                        "id": "_response",
                        "lineno": 138,
                        "node_id": 759,
                        "src": "3725:9:5"
                      }
                    ],
                    "ast_type": "Call",
                    "col_offset": 11,
                    "end_col_offset": 25,
                    "end_lineno": 138,
                    "func": {
                      "ast_type": "Name",
                      "col_offset": 11,
                      "end_col_offset": 14,
                      "end_lineno": 138,
                      "id": "len",
                      "lineno": 138,
                      "node_id": 757,
                      "src": "3721:3:5"
                    },
                    "keyword": null,
                    "keywords": [],
                    "lineno": 138,
                    "node_id": 756,
                    "src": "3721:14:5"
                  },
                  "lineno": 138,
                  "node_id": 755,
                  "op": {
                    "ast_type": "Gt",
                    "col_offset": 11,
                    "end_col_offset": 29,
                    "end_lineno": 138,
                    "lineno": 138,
                    "node_id": 761,
                    "src": "3721:18:5"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 28,
                    "end_col_offset": 29,
                    "end_lineno": 138,
                    "lineno": 138,
                    "node_id": 762,
                    "src": "3738:1:5",
                    "value": 0
                  },
                  "src": "3721:18:5"
                }
              }
            ],
            "src": "3301:483:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 56,
              "end_lineno": 125,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 10,
                "end_lineno": 125,
                "id": "_to",
                "lineno": 125,
                "node_id": 692,
                "src": "3304:3:5"
              },
              "lineno": 125,
              "node_id": 691,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 56,
                "end_lineno": 125,
                "lineno": 125,
                "node_id": 919,
                "src": "3304:49:5"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 14,
                "end_col_offset": 56,
                "end_lineno": 125,
                "lineno": 125,
                "node_id": 695,
                "src": "3311:42:5",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "3304:49:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 106,
            "id": "internal",
            "lineno": 106,
            "node_id": 771,
            "src": "2615:8:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 43,
        "end_lineno": 139,
        "lineno": 107,
        "name": "_exchange",
        "node_id": 582,
        "pos": null,
        "returns": null,
        "src": "2624:1160:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 22,
                "end_lineno": 145,
                "id": "int128",
                "lineno": 145,
                "node_id": 776,
                "src": "3844:6:5"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 22,
              "end_lineno": 145,
              "lineno": 145,
              "node_id": 775,
              "src": "3841:9:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 33,
                "end_lineno": 145,
                "id": "int128",
                "lineno": 145,
                "node_id": 779,
                "src": "3855:6:5"
              },
              "arg": "j",
              "ast_type": "arg",
              "col_offset": 24,
              "end_col_offset": 33,
              "end_lineno": 145,
              "lineno": 145,
              "node_id": 778,
              "src": "3852:9:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 46,
                "end_lineno": 145,
                "id": "uint256",
                "lineno": 145,
                "node_id": 782,
                "src": "3867:7:5"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 35,
              "end_col_offset": 46,
              "end_lineno": 145,
              "lineno": 145,
              "node_id": 781,
              "src": "3863:11:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 56,
                "end_col_offset": 63,
                "end_lineno": 145,
                "id": "uint256",
                "lineno": 145,
                "node_id": 785,
                "src": "3884:7:5"
              },
              "arg": "min_dy",
              "ast_type": "arg",
              "col_offset": 48,
              "end_col_offset": 63,
              "end_lineno": 145,
              "lineno": 145,
              "node_id": 784,
              "src": "3876:15:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 63,
          "end_lineno": 145,
          "lineno": 145,
          "node_id": 774,
          "src": "3841:50:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 146,
              "id": "address",
              "lineno": 146,
              "node_id": 790,
              "src": "3905:7:5"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 146,
            "lineno": 146,
            "node_id": 787,
            "simple": 1,
            "src": "3898:34:5",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 146,
              "id": "_from",
              "lineno": 146,
              "node_id": 788,
              "src": "3898:5:5"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 38,
              "end_lineno": 146,
              "lineno": 146,
              "node_id": 792,
              "slice": {
                "ast_type": "Index",
                "col_offset": 36,
                "end_col_offset": 37,
                "end_lineno": 146,
                "lineno": 146,
                "node_id": 797,
                "src": "3930:1:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 37,
                  "end_lineno": 146,
                  "id": "i",
                  "lineno": 146,
                  "node_id": 798,
                  "src": "3930:1:5"
                }
              },
              "src": "3915:17:5",
              "value": {
                "ast_type": "Attribute",
                "attr": "coin_list",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 146,
                "lineno": 146,
                "node_id": 793,
                "src": "3915:14:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 146,
                  "id": "self",
                  "lineno": 146,
                  "node_id": 794,
                  "src": "3915:4:5"
                }
              }
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 30,
                "end_lineno": 148,
                "lineno": 148,
                "msg": null,
                "node_id": 807,
                "src": "4001:22:5",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 30,
                  "end_lineno": 148,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "value",
                    "col_offset": 15,
                    "end_col_offset": 24,
                    "end_lineno": 148,
                    "lineno": 148,
                    "node_id": 809,
                    "src": "4008:9:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 15,
                      "end_col_offset": 18,
                      "end_lineno": 148,
                      "id": "msg",
                      "lineno": 148,
                      "node_id": 810,
                      "src": "4008:3:5"
                    }
                  },
                  "lineno": 148,
                  "node_id": 808,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 30,
                    "end_lineno": 148,
                    "lineno": 148,
                    "node_id": 919,
                    "src": "4008:15:5"
                  },
                  "right": {
                    "ast_type": "Name",
                    "col_offset": 28,
                    "end_col_offset": 30,
                    "end_lineno": 148,
                    "id": "dx",
                    "lineno": 148,
                    "node_id": 814,
                    "src": "4021:2:5"
                  },
                  "src": "4008:15:5"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 150,
            "lineno": 147,
            "node_id": 801,
            "orelse": [
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 29,
                "end_lineno": 150,
                "lineno": 150,
                "msg": null,
                "node_id": 816,
                "src": "4042:21:5",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 29,
                  "end_lineno": 150,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "value",
                    "col_offset": 15,
                    "end_col_offset": 24,
                    "end_lineno": 150,
                    "lineno": 150,
                    "node_id": 818,
                    "src": "4049:9:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 15,
                      "end_col_offset": 18,
                      "end_lineno": 150,
                      "id": "msg",
                      "lineno": 150,
                      "node_id": 819,
                      "src": "4049:3:5"
                    }
                  },
                  "lineno": 150,
                  "node_id": 817,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 29,
                    "end_lineno": 150,
                    "lineno": 150,
                    "node_id": 919,
                    "src": "4049:14:5"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 28,
                    "end_col_offset": 29,
                    "end_lineno": 150,
                    "lineno": 150,
                    "node_id": 823,
                    "src": "4062:1:5",
                    "value": 0
                  },
                  "src": "4049:14:5"
                }
              }
            ],
            "src": "3937:126:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 58,
              "end_lineno": 147,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 12,
                "end_lineno": 147,
                "id": "_from",
                "lineno": 147,
                "node_id": 803,
                "src": "3940:5:5"
              },
              "lineno": 147,
              "node_id": 802,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 58,
                "end_lineno": 147,
                "lineno": 147,
                "node_id": 919,
                "src": "3940:51:5"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 16,
                "end_col_offset": 58,
                "end_lineno": 147,
                "lineno": 147,
                "node_id": 806,
                "src": "3949:42:5",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "3940:51:5"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 68,
            "end_lineno": 152,
            "lineno": 152,
            "node_id": 824,
            "src": "4069:64:5",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 152,
                  "lineno": 152,
                  "node_id": 830,
                  "src": "4084:10:5",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 152,
                    "id": "msg",
                    "lineno": 152,
                    "node_id": 831,
                    "src": "4084:3:5"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 36,
                  "end_lineno": 152,
                  "id": "_from",
                  "lineno": 152,
                  "node_id": 834,
                  "src": "4096:5:5"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 38,
                  "end_col_offset": 55,
                  "end_lineno": 152,
                  "lineno": 152,
                  "node_id": 836,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 53,
                    "end_col_offset": 54,
                    "end_lineno": 152,
                    "lineno": 152,
                    "node_id": 841,
                    "src": "4118:1:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 53,
                      "end_col_offset": 54,
                      "end_lineno": 152,
                      "id": "j",
                      "lineno": 152,
                      "node_id": 842,
                      "src": "4118:1:5"
                    }
                  },
                  "src": "4103:17:5",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 38,
                    "end_col_offset": 52,
                    "end_lineno": 152,
                    "lineno": 152,
                    "node_id": 837,
                    "src": "4103:14:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 38,
                      "end_col_offset": 42,
                      "end_lineno": 152,
                      "id": "self",
                      "lineno": 152,
                      "node_id": 838,
                      "src": "4103:4:5"
                    }
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 57,
                  "end_col_offset": 59,
                  "end_lineno": 152,
                  "id": "dx",
                  "lineno": 152,
                  "node_id": 845,
                  "src": "4122:2:5"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 61,
                  "end_col_offset": 67,
                  "end_lineno": 152,
                  "id": "min_dy",
                  "lineno": 152,
                  "node_id": 847,
                  "src": "4126:6:5"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 68,
              "end_lineno": 152,
              "func": {
                "ast_type": "Attribute",
                "attr": "_exchange",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 152,
                "lineno": 152,
                "node_id": 826,
                "src": "4069:14:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 152,
                  "id": "self",
                  "lineno": 152,
                  "node_id": 827,
                  "src": "4069:4:5"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 152,
              "node_id": 825,
              "src": "4069:64:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 142,
            "id": "external",
            "lineno": 142,
            "node_id": 849,
            "src": "3788:8:5"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 143,
            "id": "payable",
            "lineno": 143,
            "node_id": 851,
            "src": "3798:7:5"
          },
          {
            "args": [
              {
                "ast_type": "Str",
                "col_offset": 14,
                "end_col_offset": 20,
                "end_lineno": 144,
                "lineno": 144,
                "node_id": 856,
                "src": "3820:6:5",
                "value": "lock"
              }
            ],
            "ast_type": "Call",
            "col_offset": 1,
            "end_col_offset": 21,
            "end_lineno": 144,
            "func": {
              "ast_type": "Name",
              "col_offset": 1,
              "end_col_offset": 13,
              "end_lineno": 144,
              "id": "nonreentrant",
              "lineno": 144,
              "node_id": 854,
              "src": "3807:12:5"
            },
            "keyword": null,
            "keywords": [],
            "lineno": 144,
            "node_id": 853,
            "src": "3807:20:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 68,
        "end_lineno": 152,
        "lineno": 145,
        "name": "exchange",
        "node_id": 773,
        "pos": null,
        "returns": null,
        "src": "3828:305:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 33,
                "end_lineno": 158,
                "id": "int128",
                "lineno": 158,
                "node_id": 860,
                "src": "4204:6:5"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 24,
              "end_col_offset": 33,
              "end_lineno": 158,
              "lineno": 158,
              "node_id": 859,
              "src": "4201:9:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 38,
                "end_col_offset": 44,
                "end_lineno": 158,
                "id": "int128",
                "lineno": 158,
                "node_id": 863,
                "src": "4215:6:5"
              },
              "arg": "j",
              "ast_type": "arg",
              "col_offset": 35,
              "end_col_offset": 44,
              "end_lineno": 158,
              "lineno": 158,
              "node_id": 862,
              "src": "4212:9:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 50,
                "end_col_offset": 57,
                "end_lineno": 158,
                "id": "uint256",
                "lineno": 158,
                "node_id": 866,
                "src": "4227:7:5"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 46,
              "end_col_offset": 57,
              "end_lineno": 158,
              "lineno": 158,
              "node_id": 865,
              "src": "4223:11:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 67,
                "end_col_offset": 74,
                "end_lineno": 158,
                "id": "uint256",
                "lineno": 158,
                "node_id": 869,
                "src": "4244:7:5"
              },
              "arg": "min_dy",
              "ast_type": "arg",
              "col_offset": 59,
              "end_col_offset": 74,
              "end_lineno": 158,
              "lineno": 158,
              "node_id": 868,
              "src": "4236:15:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 24,
          "default": null,
          "defaults": [],
          "end_col_offset": 74,
          "end_lineno": 158,
          "lineno": 158,
          "node_id": 858,
          "src": "4201:50:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 55,
            "end_lineno": 159,
            "lineno": 159,
            "msg": null,
            "node_id": 871,
            "src": "4258:51:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 55,
              "end_lineno": 159,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 39,
                "end_lineno": 159,
                "lineno": 159,
                "node_id": 873,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 37,
                  "end_col_offset": 38,
                  "end_lineno": 159,
                  "lineno": 159,
                  "node_id": 878,
                  "src": "4291:1:5",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 37,
                    "end_col_offset": 38,
                    "end_lineno": 159,
                    "lineno": 159,
                    "node_id": 879,
                    "src": "4291:1:5",
                    "value": 0
                  }
                },
                "src": "4265:28:5",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "underlying_coin_list",
                  "col_offset": 11,
                  "end_col_offset": 36,
                  "end_lineno": 159,
                  "lineno": 159,
                  "node_id": 874,
                  "src": "4265:25:5",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 159,
                    "id": "self",
                    "lineno": 159,
                    "node_id": 875,
                    "src": "4265:4:5"
                  }
                }
              },
              "lineno": 159,
              "node_id": 872,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 55,
                "end_lineno": 159,
                "lineno": 159,
                "node_id": 881,
                "src": "4265:44:5"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 43,
                "end_col_offset": 55,
                "end_lineno": 159,
                "id": "ZERO_ADDRESS",
                "lineno": 159,
                "node_id": 882,
                "src": "4297:12:5"
              },
              "src": "4265:44:5"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 161,
              "id": "address",
              "lineno": 161,
              "node_id": 887,
              "src": "4322:7:5"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 49,
            "end_lineno": 161,
            "lineno": 161,
            "node_id": 884,
            "simple": 1,
            "src": "4315:45:5",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 161,
              "id": "_from",
              "lineno": 161,
              "node_id": 885,
              "src": "4315:5:5"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 49,
              "end_lineno": 161,
              "lineno": 161,
              "node_id": 889,
              "slice": {
                "ast_type": "Index",
                "col_offset": 47,
                "end_col_offset": 48,
                "end_lineno": 161,
                "lineno": 161,
                "node_id": 894,
                "src": "4358:1:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 47,
                  "end_col_offset": 48,
                  "end_lineno": 161,
                  "id": "i",
                  "lineno": 161,
                  "node_id": 895,
                  "src": "4358:1:5"
                }
              },
              "src": "4332:28:5",
              "value": {
                "ast_type": "Attribute",
                "attr": "underlying_coin_list",
                "col_offset": 21,
                "end_col_offset": 46,
                "end_lineno": 161,
                "lineno": 161,
                "node_id": 890,
                "src": "4332:25:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 161,
                  "id": "self",
                  "lineno": 161,
                  "node_id": 891,
                  "src": "4332:4:5"
                }
              }
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 30,
                "end_lineno": 163,
                "lineno": 163,
                "msg": null,
                "node_id": 904,
                "src": "4429:22:5",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 30,
                  "end_lineno": 163,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "value",
                    "col_offset": 15,
                    "end_col_offset": 24,
                    "end_lineno": 163,
                    "lineno": 163,
                    "node_id": 906,
                    "src": "4436:9:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 15,
                      "end_col_offset": 18,
                      "end_lineno": 163,
                      "id": "msg",
                      "lineno": 163,
                      "node_id": 907,
                      "src": "4436:3:5"
                    }
                  },
                  "lineno": 163,
                  "node_id": 905,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 30,
                    "end_lineno": 163,
                    "lineno": 163,
                    "node_id": 919,
                    "src": "4436:15:5"
                  },
                  "right": {
                    "ast_type": "Name",
                    "col_offset": 28,
                    "end_col_offset": 30,
                    "end_lineno": 163,
                    "id": "dx",
                    "lineno": 163,
                    "node_id": 911,
                    "src": "4449:2:5"
                  },
                  "src": "4436:15:5"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 165,
            "lineno": 162,
            "node_id": 898,
            "orelse": [
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 29,
                "end_lineno": 165,
                "lineno": 165,
                "msg": null,
                "node_id": 913,
                "src": "4470:21:5",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 29,
                  "end_lineno": 165,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "value",
                    "col_offset": 15,
                    "end_col_offset": 24,
                    "end_lineno": 165,
                    "lineno": 165,
                    "node_id": 915,
                    "src": "4477:9:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 15,
                      "end_col_offset": 18,
                      "end_lineno": 165,
                      "id": "msg",
                      "lineno": 165,
                      "node_id": 916,
                      "src": "4477:3:5"
                    }
                  },
                  "lineno": 165,
                  "node_id": 914,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 29,
                    "end_lineno": 165,
                    "lineno": 165,
                    "node_id": 919,
                    "src": "4477:14:5"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 28,
                    "end_col_offset": 29,
                    "end_lineno": 165,
                    "lineno": 165,
                    "node_id": 920,
                    "src": "4490:1:5",
                    "value": 0
                  },
                  "src": "4477:14:5"
                }
              }
            ],
            "src": "4365:126:5",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 58,
              "end_lineno": 162,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 12,
                "end_lineno": 162,
                "id": "_from",
                "lineno": 162,
                "node_id": 900,
                "src": "4368:5:5"
              },
              "lineno": 162,
              "node_id": 899,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 58,
                "end_lineno": 162,
                "lineno": 162,
                "node_id": 919,
                "src": "4368:51:5"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 16,
                "end_col_offset": 58,
                "end_lineno": 162,
                "lineno": 162,
                "node_id": 903,
                "src": "4377:42:5",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "4368:51:5"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 79,
            "end_lineno": 167,
            "lineno": 167,
            "node_id": 921,
            "src": "4497:75:5",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 167,
                  "lineno": 167,
                  "node_id": 927,
                  "src": "4512:10:5",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 167,
                    "id": "msg",
                    "lineno": 167,
                    "node_id": 928,
                    "src": "4512:3:5"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 36,
                  "end_lineno": 167,
                  "id": "_from",
                  "lineno": 167,
                  "node_id": 931,
                  "src": "4524:5:5"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 38,
                  "end_col_offset": 66,
                  "end_lineno": 167,
                  "lineno": 167,
                  "node_id": 933,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 64,
                    "end_col_offset": 65,
                    "end_lineno": 167,
                    "lineno": 167,
                    "node_id": 938,
                    "src": "4557:1:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 64,
                      "end_col_offset": 65,
                      "end_lineno": 167,
                      "id": "j",
                      "lineno": 167,
                      "node_id": 939,
                      "src": "4557:1:5"
                    }
                  },
                  "src": "4531:28:5",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "underlying_coin_list",
                    "col_offset": 38,
                    "end_col_offset": 63,
                    "end_lineno": 167,
                    "lineno": 167,
                    "node_id": 934,
                    "src": "4531:25:5",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 38,
                      "end_col_offset": 42,
                      "end_lineno": 167,
                      "id": "self",
                      "lineno": 167,
                      "node_id": 935,
                      "src": "4531:4:5"
                    }
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 68,
                  "end_col_offset": 70,
                  "end_lineno": 167,
                  "id": "dx",
                  "lineno": 167,
                  "node_id": 942,
                  "src": "4561:2:5"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 72,
                  "end_col_offset": 78,
                  "end_lineno": 167,
                  "id": "min_dy",
                  "lineno": 167,
                  "node_id": 944,
                  "src": "4565:6:5"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 79,
              "end_lineno": 167,
              "func": {
                "ast_type": "Attribute",
                "attr": "_exchange",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 167,
                "lineno": 167,
                "node_id": 923,
                "src": "4497:14:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 167,
                  "id": "self",
                  "lineno": 167,
                  "node_id": 924,
                  "src": "4497:4:5"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 167,
              "node_id": 922,
              "src": "4497:75:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 155,
            "id": "external",
            "lineno": 155,
            "node_id": 946,
            "src": "4137:8:5"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 156,
            "id": "payable",
            "lineno": 156,
            "node_id": 948,
            "src": "4147:7:5"
          },
          {
            "args": [
              {
                "ast_type": "Str",
                "col_offset": 14,
                "end_col_offset": 20,
                "end_lineno": 157,
                "lineno": 157,
                "node_id": 953,
                "src": "4169:6:5",
                "value": "lock"
              }
            ],
            "ast_type": "Call",
            "col_offset": 1,
            "end_col_offset": 21,
            "end_lineno": 157,
            "func": {
              "ast_type": "Name",
              "col_offset": 1,
              "end_col_offset": 13,
              "end_lineno": 157,
              "id": "nonreentrant",
              "lineno": 157,
              "node_id": 951,
              "src": "4156:12:5"
            },
            "keyword": null,
            "keywords": [],
            "lineno": 157,
            "node_id": 950,
            "src": "4156:20:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 79,
        "end_lineno": 167,
        "lineno": 158,
        "name": "exchange_underlying",
        "node_id": 857,
        "pos": null,
        "returns": null,
        "src": "4177:395:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 15,
                "end_lineno": 174,
                "id": "uint256",
                "lineno": 174,
                "node_id": 957,
                "src": "4626:7:5"
              },
              "arg": "_A",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 174,
              "lineno": 174,
              "node_id": 956,
              "src": "4622:11:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 23,
                "end_lineno": 175,
                "id": "uint256",
                "lineno": 175,
                "node_id": 960,
                "src": "4651:7:5"
              },
              "arg": "_initial_A",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 175,
              "lineno": 175,
              "node_id": 959,
              "src": "4639:19:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 21,
                "end_col_offset": 28,
                "end_lineno": 176,
                "id": "uint256",
                "lineno": 176,
                "node_id": 963,
                "src": "4681:7:5"
              },
              "arg": "_initial_A_time",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 28,
              "end_lineno": 176,
              "lineno": 176,
              "node_id": 962,
              "src": "4664:24:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 15,
                "end_col_offset": 22,
                "end_lineno": 177,
                "id": "uint256",
                "lineno": 177,
                "node_id": 966,
                "src": "4705:7:5"
              },
              "arg": "_future_A",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 22,
              "end_lineno": 177,
              "lineno": 177,
              "node_id": 965,
              "src": "4694:18:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 20,
                "end_col_offset": 27,
                "end_lineno": 178,
                "id": "uint256",
                "lineno": 178,
                "node_id": 969,
                "src": "4734:7:5"
              },
              "arg": "_future_A_time",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 27,
              "end_lineno": 178,
              "lineno": 178,
              "node_id": 968,
              "src": "4718:23:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 4,
          "default": null,
          "defaults": [],
          "end_col_offset": 27,
          "end_lineno": 178,
          "lineno": 174,
          "node_id": 955,
          "src": "4622:119:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 180,
            "lineno": 180,
            "node_id": 971,
            "src": "4749:11:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "A",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 180,
              "lineno": 180,
              "node_id": 972,
              "src": "4749:6:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 180,
                "id": "self",
                "lineno": 180,
                "node_id": 973,
                "src": "4749:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 13,
              "end_col_offset": 15,
              "end_lineno": 180,
              "id": "_A",
              "lineno": 180,
              "node_id": 976,
              "src": "4758:2:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 181,
            "lineno": 181,
            "node_id": 978,
            "src": "4765:27:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "initial_A",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 181,
              "lineno": 181,
              "node_id": 979,
              "src": "4765:14:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 181,
                "id": "self",
                "lineno": 181,
                "node_id": 980,
                "src": "4765:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 31,
              "end_lineno": 181,
              "id": "_initial_A",
              "lineno": 181,
              "node_id": 983,
              "src": "4782:10:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 41,
            "end_lineno": 182,
            "lineno": 182,
            "node_id": 985,
            "src": "4797:37:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "initial_A_time",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 182,
              "lineno": 182,
              "node_id": 986,
              "src": "4797:19:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 182,
                "id": "self",
                "lineno": 182,
                "node_id": 987,
                "src": "4797:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 26,
              "end_col_offset": 41,
              "end_lineno": 182,
              "id": "_initial_A_time",
              "lineno": 182,
              "node_id": 990,
              "src": "4819:15:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 183,
            "lineno": 183,
            "node_id": 992,
            "src": "4839:25:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_A",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 183,
              "lineno": 183,
              "node_id": 993,
              "src": "4839:13:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 183,
                "id": "self",
                "lineno": 183,
                "node_id": 994,
                "src": "4839:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 20,
              "end_col_offset": 29,
              "end_lineno": 183,
              "id": "_future_A",
              "lineno": 183,
              "node_id": 997,
              "src": "4855:9:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 39,
            "end_lineno": 184,
            "lineno": 184,
            "node_id": 999,
            "src": "4869:35:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_A_time",
              "col_offset": 4,
              "end_col_offset": 22,
              "end_lineno": 184,
              "lineno": 184,
              "node_id": 1000,
              "src": "4869:18:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 184,
                "id": "self",
                "lineno": 184,
                "node_id": 1001,
                "src": "4869:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 25,
              "end_col_offset": 39,
              "end_lineno": 184,
              "id": "_future_A_time",
              "lineno": 184,
              "node_id": 1004,
              "src": "4890:14:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 172,
            "id": "external",
            "lineno": 172,
            "node_id": 1006,
            "src": "4597:8:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 39,
        "end_lineno": 184,
        "lineno": 173,
        "name": "_set_A",
        "node_id": 954,
        "pos": null,
        "returns": null,
        "src": "4606:298:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 10,
                "end_col_offset": 17,
                "end_lineno": 189,
                "id": "uint256",
                "lineno": 189,
                "node_id": 1011,
                "src": "4952:7:5"
              },
              "arg": "_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 189,
              "lineno": 189,
              "node_id": 1010,
              "src": "4946:13:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 23,
                "end_lineno": 190,
                "id": "uint256",
                "lineno": 190,
                "node_id": 1014,
                "src": "4977:7:5"
              },
              "arg": "_admin_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 190,
              "lineno": 190,
              "node_id": 1013,
              "src": "4965:19:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 17,
                "end_col_offset": 24,
                "end_lineno": 191,
                "id": "uint256",
                "lineno": 191,
                "node_id": 1017,
                "src": "5003:7:5"
              },
              "arg": "_future_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 24,
              "end_lineno": 191,
              "lineno": 191,
              "node_id": 1016,
              "src": "4990:20:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 192,
                "id": "uint256",
                "lineno": 192,
                "node_id": 1020,
                "src": "5035:7:5"
              },
              "arg": "_future_admin_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 192,
              "lineno": 192,
              "node_id": 1019,
              "src": "5016:26:5"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 193,
                "id": "address",
                "lineno": 193,
                "node_id": 1023,
                "src": "5063:7:5"
              },
              "arg": "_future_owner",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 193,
              "lineno": 193,
              "node_id": 1022,
              "src": "5048:22:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 4,
          "default": null,
          "defaults": [],
          "end_col_offset": 26,
          "end_lineno": 193,
          "lineno": 189,
          "node_id": 1009,
          "src": "4946:124:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 19,
            "end_lineno": 195,
            "lineno": 195,
            "node_id": 1025,
            "src": "5078:15:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "fee",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 195,
              "lineno": 195,
              "node_id": 1026,
              "src": "5078:8:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 195,
                "id": "self",
                "lineno": 195,
                "node_id": 1027,
                "src": "5078:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 15,
              "end_col_offset": 19,
              "end_lineno": 195,
              "id": "_fee",
              "lineno": 195,
              "node_id": 1030,
              "src": "5089:4:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 196,
            "lineno": 196,
            "node_id": 1032,
            "src": "5098:27:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "admin_fee",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 196,
              "lineno": 196,
              "node_id": 1033,
              "src": "5098:14:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 196,
                "id": "self",
                "lineno": 196,
                "node_id": 1034,
                "src": "5098:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 31,
              "end_lineno": 196,
              "id": "_admin_fee",
              "lineno": 196,
              "node_id": 1037,
              "src": "5115:10:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 197,
            "lineno": 197,
            "node_id": 1039,
            "src": "5130:29:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_fee",
              "col_offset": 4,
              "end_col_offset": 19,
              "end_lineno": 197,
              "lineno": 197,
              "node_id": 1040,
              "src": "5130:15:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 197,
                "id": "self",
                "lineno": 197,
                "node_id": 1041,
                "src": "5130:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 22,
              "end_col_offset": 33,
              "end_lineno": 197,
              "id": "_future_fee",
              "lineno": 197,
              "node_id": 1044,
              "src": "5148:11:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 198,
            "lineno": 198,
            "node_id": 1046,
            "src": "5164:41:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_admin_fee",
              "col_offset": 4,
              "end_col_offset": 25,
              "end_lineno": 198,
              "lineno": 198,
              "node_id": 1047,
              "src": "5164:21:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 198,
                "id": "self",
                "lineno": 198,
                "node_id": 1048,
                "src": "5164:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 28,
              "end_col_offset": 45,
              "end_lineno": 198,
              "id": "_future_admin_fee",
              "lineno": 198,
              "node_id": 1051,
              "src": "5188:17:5"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 37,
            "end_lineno": 199,
            "lineno": 199,
            "node_id": 1053,
            "src": "5210:33:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_owner",
              "col_offset": 4,
              "end_col_offset": 21,
              "end_lineno": 199,
              "lineno": 199,
              "node_id": 1054,
              "src": "5210:17:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 199,
                "id": "self",
                "lineno": 199,
                "node_id": 1055,
                "src": "5210:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 37,
              "end_lineno": 199,
              "id": "_future_owner",
              "lineno": 199,
              "node_id": 1058,
              "src": "5230:13:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 187,
            "id": "external",
            "lineno": 187,
            "node_id": 1060,
            "src": "4908:8:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 37,
        "end_lineno": 199,
        "lineno": 188,
        "name": "_set_fees_and_owner",
        "node_id": 1008,
        "pos": null,
        "returns": null,
        "src": "4917:326:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 33,
                "end_col_offset": 43,
                "end_lineno": 203,
                "lineno": 203,
                "node_id": 1065,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 41,
                  "end_col_offset": 42,
                  "end_lineno": 203,
                  "lineno": 203,
                  "node_id": 1068,
                  "src": "5297:1:5",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 41,
                    "end_col_offset": 42,
                    "end_lineno": 203,
                    "lineno": 203,
                    "node_id": 1069,
                    "src": "5297:1:5",
                    "value": 4
                  }
                },
                "src": "5289:10:5",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 40,
                  "end_lineno": 203,
                  "id": "uint256",
                  "lineno": 203,
                  "node_id": 1066,
                  "src": "5289:7:5"
                }
              },
              "arg": "_new_balances",
              "ast_type": "arg",
              "col_offset": 18,
              "end_col_offset": 43,
              "end_lineno": 203,
              "lineno": 203,
              "node_id": 1064,
              "src": "5274:25:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 18,
          "default": null,
          "defaults": [],
          "end_col_offset": 43,
          "end_lineno": 203,
          "lineno": 203,
          "node_id": 1063,
          "src": "5274:25:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 204,
            "lineno": 204,
            "node_id": 1071,
            "src": "5306:30:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "_balances",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 204,
              "lineno": 204,
              "node_id": 1072,
              "src": "5306:14:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 204,
                "id": "self",
                "lineno": 204,
                "node_id": 1073,
                "src": "5306:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 34,
              "end_lineno": 204,
              "id": "_new_balances",
              "lineno": 204,
              "node_id": 1076,
              "src": "5323:13:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 202,
            "id": "external",
            "lineno": 202,
            "node_id": 1078,
            "src": "5247:8:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 34,
        "end_lineno": 204,
        "lineno": 203,
        "name": "_set_balances",
        "node_id": 1062,
        "pos": null,
        "returns": null,
        "src": "5256:80:5"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 38,
                "end_lineno": 208,
                "id": "uint256",
                "lineno": 208,
                "node_id": 1083,
                "src": "5380:7:5"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 23,
              "end_col_offset": 38,
              "end_lineno": 208,
              "lineno": 208,
              "node_id": 1082,
              "src": "5372:15:5"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 23,
          "default": null,
          "defaults": [],
          "end_col_offset": 38,
          "end_lineno": 208,
          "lineno": 208,
          "node_id": 1081,
          "src": "5372:15:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 209,
            "lineno": 209,
            "node_id": 1085,
            "src": "5394:31:5",
            "target": {
              "ast_type": "Attribute",
              "attr": "get_virtual_price",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 209,
              "lineno": 209,
              "node_id": 1086,
              "src": "5394:22:5",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 209,
                "id": "self",
                "lineno": 209,
                "node_id": 1087,
                "src": "5394:4:5"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 29,
              "end_col_offset": 35,
              "end_lineno": 209,
              "id": "_value",
              "lineno": 209,
              "node_id": 1090,
              "src": "5419:6:5"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 207,
            "id": "external",
            "lineno": 207,
            "node_id": 1092,
            "src": "5340:8:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 35,
        "end_lineno": 209,
        "lineno": 208,
        "name": "_set_virtual_price",
        "node_id": 1080,
        "pos": null,
        "returns": null,
        "src": "5349:76:5"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 1,
          "end_lineno": 212,
          "lineno": 212,
          "node_id": 1095,
          "src": "5428:1:5"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Pass",
            "col_offset": 4,
            "end_col_offset": 8,
            "end_lineno": 215,
            "lineno": 215,
            "node_id": 1096,
            "src": "5470:4:5"
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 212,
            "id": "external",
            "lineno": 212,
            "node_id": 1097,
            "src": "5429:8:5"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 213,
            "id": "payable",
            "lineno": 213,
            "node_id": 1099,
            "src": "5439:7:5"
          }
        ],
        "doc_string": null,
        "end_col_offset": 8,
        "end_lineno": 215,
        "lineno": 214,
        "name": "__default__",
        "node_id": 1094,
        "pos": null,
        "returns": null,
        "src": "5447:27:5"
      }
    ],
    "col_offset": 0,
    "doc_string": {
      "ast_type": "DocStr",
      "col_offset": 0,
      "end_col_offset": 3,
      "end_lineno": 4,
      "lineno": 2,
      "node_id": 1101,
      "src": "18:43:5",
      "value": "\n@notice Mock Kagla pool for testing\n"
    },
    "end_col_offset": 8,
    "end_lineno": 215,
    "lineno": 1,
    "name": "contracts/testing/PoolMockV2.vy",
    "node_id": 0,
    "src": "0:5474:5"
  },
  "bytecode": "0x610160610ecc6101403960206020610ecc0160c03960c05160a01c1561002457600080fd5b60206040610ecc0160c03960c05160a01c1561003f57600080fd5b60206060610ecc0160c03960c05160a01c1561005a57600080fd5b60206080610ecc0160c03960c05160a01c1561007557600080fd5b602060a0610ecc0160c03960c05160a01c1561009057600080fd5b602060c0610ecc0160c03960c05160a01c156100ab57600080fd5b602060e0610ecc0160c03960c05160a01c156100c657600080fd5b6020610100610ecc0160c03960c05160a01c156100e257600080fd5b61014051600055600160c052602060c0206101605181556101805160018201556101a05160028201556101c051600382015550600260c052602060c0206101e0518155610200516001820155610220516002820155610240516003820155506102605160035561028051600855670de0b6b3a7640000600d55610eb456600436101561000d5761077a565b600035601c52600051633df0212481141561013b57600f541561002f57600080fd5b6001600f556004358080600081121561004457195b607f1c1561005157600080fd5b9050506024358080600081121561006457195b607f1c1561007157600080fd5b9050506004356004811061008457600080fd5b600160c052602060c02001546101405273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101405114156100c65760443534146100c157600080fd5b6100d1565b34156100d157600080fd5b6101405133610160526101405161018052602435600481106100f257600080fd5b600160c052602060c02001546101a0526044356101c0526064356101e0526101e0516101c0516101a05161018051610160516006580161091a565b610140526000506000600f55005b63a6417ed681141561027757600f541561015457600080fd5b6001600f556004358080600081121561016957195b607f1c1561017657600080fd5b9050506024358080600081121561018957195b607f1c1561019657600080fd5b9050506000600260c052602060c02054186101b057600080fd5b600435600481106101c057600080fd5b600260c052602060c02001546101405273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101405114156102025760443534146101fd57600080fd5b61020d565b341561020d57600080fd5b61014051336101605261014051610180526024356004811061022e57600080fd5b600260c052602060c02001546101a0526044356101c0526064356101e0526101e0516101c0516101a05161018051610160516006580161091a565b610140526000506000600f55005b63c66106578114156102c357341561028e57600080fd5b6000546004351061029e57600080fd5b600435600481106102ae57600080fd5b600160c052602060c020015460005260206000f35b63b9947eb08114156103265734156102da57600080fd5b6000600260c052602060c02054186102f157600080fd5b6000546004351061030157600080fd5b6004356004811061031157600080fd5b600260c052602060c020015460005260206000f35b634903b0d181141561037257341561033d57600080fd5b6000546004351061034d57600080fd5b6004356004811061035d57600080fd5b600e60c052602060c020015460005260206000f35b635e0d443f81141561043657341561038957600080fd5b6004358080600081121561039957195b607f1c156103a657600080fd5b905050602435808060008112156103b957195b607f1c156103c657600080fd5b905050600435600481106103d957600080fd5b600160c052602060c020015461014052602435600481106103f957600080fd5b600160c052602060c020015461016052604435610180526101805161016051610140516006580161077c565b6101e0526101e05160005260206000f35b6307211ef781141561051157341561044d57600080fd5b6004358080600081121561045d57195b607f1c1561046a57600080fd5b9050506024358080600081121561047d57195b607f1c1561048a57600080fd5b9050506000600260c052602060c02054186104a457600080fd5b600435600481106104b457600080fd5b600260c052602060c020015461014052602435600481106104d457600080fd5b600260c052602060c020015461016052604435610180526101805161016051610140516006580161077c565b6101e0526101e05160005260206000f35b63bb8d331d81141561054857341561052857600080fd5b600435600355602435600455604435600555606435600655608435600755005b63eee22abb81141561058f57341561055f57600080fd5b60843560a01c1561056f57600080fd5b600435600855602435600955604435600a55606435600b55608435600c55005b63ab203bc48114156105d85734156105a657600080fd5b600e60c052602060c0206004803582558060200135600183015580604001356002830155806060013560038301555050005b633ba680128114156105f75734156105ef57600080fd5b600435600d55005b63f446c1d081141561061a57341561060e57600080fd5b60035460005260206000f35b635409491a81141561063d57341561063157600080fd5b60045460005260206000f35b632081066c81141561066057341561065457600080fd5b60055460005260206000f35b63b4b577ad81141561068357341561067757600080fd5b60065460005260206000f35b63140522888114156106a657341561069a57600080fd5b60075460005260206000f35b63ddca3f438114156106c95734156106bd57600080fd5b60085460005260206000f35b63fee3f7f98114156106ec5734156106e057600080fd5b60095460005260206000f35b6358680d0b81141561070f57341561070357600080fd5b600a5460005260206000f35b63e382446281141561073257341561072657600080fd5b600b5460005260206000f35b631ec0cdc181141561075557341561074957600080fd5b600c5460005260206000f35b63bb7b8b8081141561077857341561076c57600080fd5b600d5460005260206000f35b505b005b6101a0526101405261016052610180526040366101c03773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101405114156107bd5760126101c0526107f8565b6020610260600463313ce5676102005261021c610140515afa6107df57600080fd5b601f3d116107ec57600080fd5b600050610260516101c0525b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101605114156108225760126101e05261085d565b6020610260600463313ce5676102005261021c610160515afa61084457600080fd5b601f3d1161085157600080fd5b600050610260516101e0525b61018051604e6101e0511061087157600080fd5b6101e051600a0a808202821582848304141761088c57600080fd5b80905090509050604e6101c051106108a357600080fd5b6101c051600a0a80806108b557600080fd5b820490509050610200526102005160085480820282158284830414176108da57600080fd5b809050905090506402540be400808204905090506102205261020051610220518082101561090757600080fd5b808203905090506000526000516101a051565b6101e0526101405261016052610180526101a0526101c0526101405161016051610180516101a0516101c0516101e05161020051610160516102205261018051610240526101a051610260526102605161024051610220516006580161077c565b6102c052610200526101e0526101c0526101a0526101805261016052610140526102c051610200526101c0516102005110151515610a1d576308c379a061022052602061024052602e610260527f45786368616e676520726573756c74656420696e20666577657220636f696e73610280527f207468616e2065787065637465640000000000000000000000000000000000006102a05261026050608461023cfd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610160511815610b8e5760006004610280527f23b872dd000000000000000000000000000000000000000000000000000000006102a0526102806004806020846102e001018260208501600060045af1505080518201915050610140516020826102e0010152602081019050306020826102e00101526020810190506101a0516020826102e0010152602081019050806102e0526102e090508051602001806103a08284600060045af1610ae557600080fd5b505060206104806103a0516103c06000610160515af1610b0457600080fd5b60203d80821115610b155780610b17565b815b90509050610460526104608051602001806102208284600060045af1610b3c57600080fd5b50506000610220511115610b8e57610220806020015160008251806020901315610b6557600080fd5b8091901215610b7357600080fd5b806020036101000a82049050905090501515610b8e57600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610180511415610bce57600060006000600061020051610140516000f1610bc957600080fd5b610d4e565b610180513b610bdc57600080fd5b60006000604463f8c14102610220523061024052610200516102605261023c6000610180515af1610c0c57600080fd5b60006004610280527fa9059cbb000000000000000000000000000000000000000000000000000000006102a0526102806004806020846102e001018260208501600060045af1505080518201915050610140516020826102e0010152602081019050610200516020826102e0010152602081019050806102e0526102e090508051602001806103808284600060045af1610ca557600080fd5b50506020610440610380516103a06000610180515af1610cc457600080fd5b60203d80821115610cd55780610cd7565b815b90509050610420526104208051602001806102208284600060045af1610cfc57600080fd5b50506000610220511115610d4e57610220806020015160008251806020901315610d2557600080fd5b8091901215610d3357600080fd5b806020036101000a82049050905090501515610d4e57600080fd5b6101e051565b610160610eb403610160600039610160610eb4036000f3",
  "bytecodeSha1": "2de575570da5dbe0899ce34276436a14e2a25243",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.2.12"
  },
  "contractName": "PoolMockV2",
  "coverageMap": {
    "branches": {
      "0": {
        "PoolMockV2._exchange": {
          "54": [
            2768,
            2837,
            true
          ],
          "56": [
            2846,
            2897,
            false
          ],
          "58": [
            3232,
            3250,
            false
          ],
          "59": [
            3264,
            3295,
            true
          ],
          "60": [
            3304,
            3353,
            false
          ],
          "65": [
            3721,
            3739,
            false
          ],
          "66": [
            3753,
            3784,
            true
          ]
        },
        "PoolMockV2._get_dy": {
          "43": [
            1804,
            1855,
            false
          ],
          "46": [
            1957,
            2006,
            false
          ]
        },
        "PoolMockV2.balances": {
          "25": [
            1593,
            1616,
            true
          ]
        },
        "PoolMockV2.coins": {
          "17": [
            1246,
            1269,
            true
          ]
        },
        "PoolMockV2.exchange": {
          "1": [
            3940,
            3991,
            false
          ],
          "3": [
            4001,
            4023,
            true
          ],
          "5": [
            4042,
            4063,
            true
          ]
        },
        "PoolMockV2.exchange_underlying": {
          "8": [
            4258,
            4309,
            true
          ],
          "10": [
            4368,
            4419,
            false
          ],
          "12": [
            4429,
            4451,
            true
          ],
          "14": [
            4470,
            4491,
            true
          ]
        },
        "PoolMockV2.get_dy_underlying": {
          "29": [
            2472,
            2523,
            true
          ]
        },
        "PoolMockV2.underlying_coins": {
          "20": [
            1390,
            1441,
            true
          ],
          "22": [
            1446,
            1469,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "PoolMockV2._exchange": {
          "52": [
            2721,
            2763
          ],
          "53": [
            2768,
            2837
          ],
          "55": [
            3264,
            3295
          ],
          "57": [
            2907,
            3220
          ],
          "61": [
            3363,
            3380
          ],
          "62": [
            3753,
            3784
          ],
          "63": [
            3399,
            3441
          ],
          "64": [
            3450,
            3709
          ]
        },
        "PoolMockV2._get_dy": {
          "44": [
            1865,
            1885
          ],
          "45": [
            1904,
            1949
          ],
          "47": [
            2016,
            2034
          ],
          "48": [
            2053,
            2094
          ],
          "49": [
            2100,
            2164
          ],
          "50": [
            2169,
            2215
          ],
          "51": [
            2221,
            2238
          ]
        },
        "PoolMockV2._set_A": {
          "31": [
            4749,
            4760
          ],
          "32": [
            4765,
            4792
          ],
          "33": [
            4797,
            4834
          ],
          "34": [
            4839,
            4864
          ],
          "35": [
            4869,
            4904
          ]
        },
        "PoolMockV2._set_balances": {
          "41": [
            5306,
            5336
          ]
        },
        "PoolMockV2._set_fees_and_owner": {
          "36": [
            5078,
            5093
          ],
          "37": [
            5098,
            5125
          ],
          "38": [
            5130,
            5159
          ],
          "39": [
            5164,
            5205
          ],
          "40": [
            5210,
            5243
          ]
        },
        "PoolMockV2._set_virtual_price": {
          "42": [
            5394,
            5425
          ]
        },
        "PoolMockV2.balances": {
          "24": [
            1593,
            1616
          ],
          "26": [
            1621,
            1645
          ]
        },
        "PoolMockV2.coins": {
          "16": [
            1246,
            1269
          ],
          "18": [
            1298,
            1322
          ]
        },
        "PoolMockV2.exchange": {
          "0": [
            3898,
            3932
          ],
          "2": [
            4001,
            4023
          ],
          "4": [
            4042,
            4063
          ],
          "6": [
            4069,
            4133
          ]
        },
        "PoolMockV2.exchange_underlying": {
          "7": [
            4258,
            4309
          ],
          "9": [
            4315,
            4360
          ],
          "11": [
            4429,
            4451
          ],
          "13": [
            4470,
            4491
          ],
          "15": [
            4497,
            4572
          ]
        },
        "PoolMockV2.get_dy": {
          "27": [
            2319,
            2380
          ]
        },
        "PoolMockV2.get_dy_underlying": {
          "28": [
            2472,
            2523
          ],
          "30": [
            2528,
            2611
          ]
        },
        "PoolMockV2.underlying_coins": {
          "19": [
            1390,
            1441
          ],
          "21": [
            1446,
            1469
          ],
          "23": [
            1498,
            1533
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x600436101561000d5761077a565b600035601c52600051633df0212481141561013b57600f541561002f57600080fd5b6001600f556004358080600081121561004457195b607f1c1561005157600080fd5b9050506024358080600081121561006457195b607f1c1561007157600080fd5b9050506004356004811061008457600080fd5b600160c052602060c02001546101405273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101405114156100c65760443534146100c157600080fd5b6100d1565b34156100d157600080fd5b6101405133610160526101405161018052602435600481106100f257600080fd5b600160c052602060c02001546101a0526044356101c0526064356101e0526101e0516101c0516101a05161018051610160516006580161091a565b610140526000506000600f55005b63a6417ed681141561027757600f541561015457600080fd5b6001600f556004358080600081121561016957195b607f1c1561017657600080fd5b9050506024358080600081121561018957195b607f1c1561019657600080fd5b9050506000600260c052602060c02054186101b057600080fd5b600435600481106101c057600080fd5b600260c052602060c02001546101405273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101405114156102025760443534146101fd57600080fd5b61020d565b341561020d57600080fd5b61014051336101605261014051610180526024356004811061022e57600080fd5b600260c052602060c02001546101a0526044356101c0526064356101e0526101e0516101c0516101a05161018051610160516006580161091a565b610140526000506000600f55005b63c66106578114156102c357341561028e57600080fd5b6000546004351061029e57600080fd5b600435600481106102ae57600080fd5b600160c052602060c020015460005260206000f35b63b9947eb08114156103265734156102da57600080fd5b6000600260c052602060c02054186102f157600080fd5b6000546004351061030157600080fd5b6004356004811061031157600080fd5b600260c052602060c020015460005260206000f35b634903b0d181141561037257341561033d57600080fd5b6000546004351061034d57600080fd5b6004356004811061035d57600080fd5b600e60c052602060c020015460005260206000f35b635e0d443f81141561043657341561038957600080fd5b6004358080600081121561039957195b607f1c156103a657600080fd5b905050602435808060008112156103b957195b607f1c156103c657600080fd5b905050600435600481106103d957600080fd5b600160c052602060c020015461014052602435600481106103f957600080fd5b600160c052602060c020015461016052604435610180526101805161016051610140516006580161077c565b6101e0526101e05160005260206000f35b6307211ef781141561051157341561044d57600080fd5b6004358080600081121561045d57195b607f1c1561046a57600080fd5b9050506024358080600081121561047d57195b607f1c1561048a57600080fd5b9050506000600260c052602060c02054186104a457600080fd5b600435600481106104b457600080fd5b600260c052602060c020015461014052602435600481106104d457600080fd5b600260c052602060c020015461016052604435610180526101805161016051610140516006580161077c565b6101e0526101e05160005260206000f35b63bb8d331d81141561054857341561052857600080fd5b600435600355602435600455604435600555606435600655608435600755005b63eee22abb81141561058f57341561055f57600080fd5b60843560a01c1561056f57600080fd5b600435600855602435600955604435600a55606435600b55608435600c55005b63ab203bc48114156105d85734156105a657600080fd5b600e60c052602060c0206004803582558060200135600183015580604001356002830155806060013560038301555050005b633ba680128114156105f75734156105ef57600080fd5b600435600d55005b63f446c1d081141561061a57341561060e57600080fd5b60035460005260206000f35b635409491a81141561063d57341561063157600080fd5b60045460005260206000f35b632081066c81141561066057341561065457600080fd5b60055460005260206000f35b63b4b577ad81141561068357341561067757600080fd5b60065460005260206000f35b63140522888114156106a657341561069a57600080fd5b60075460005260206000f35b63ddca3f438114156106c95734156106bd57600080fd5b60085460005260206000f35b63fee3f7f98114156106ec5734156106e057600080fd5b60095460005260206000f35b6358680d0b81141561070f57341561070357600080fd5b600a5460005260206000f35b63e382446281141561073257341561072657600080fd5b600b5460005260206000f35b631ec0cdc181141561075557341561074957600080fd5b600c5460005260206000f35b63bb7b8b8081141561077857341561076c57600080fd5b600d5460005260206000f35b505b005b6101a0526101405261016052610180526040366101c03773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101405114156107bd5760126101c0526107f8565b6020610260600463313ce5676102005261021c610140515afa6107df57600080fd5b601f3d116107ec57600080fd5b600050610260516101c0525b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101605114156108225760126101e05261085d565b6020610260600463313ce5676102005261021c610160515afa61084457600080fd5b601f3d1161085157600080fd5b600050610260516101e0525b61018051604e6101e0511061087157600080fd5b6101e051600a0a808202821582848304141761088c57600080fd5b80905090509050604e6101c051106108a357600080fd5b6101c051600a0a80806108b557600080fd5b820490509050610200526102005160085480820282158284830414176108da57600080fd5b809050905090506402540be400808204905090506102205261020051610220518082101561090757600080fd5b808203905090506000526000516101a051565b6101e0526101405261016052610180526101a0526101c0526101405161016051610180516101a0516101c0516101e05161020051610160516102205261018051610240526101a051610260526102605161024051610220516006580161077c565b6102c052610200526101e0526101c0526101a0526101805261016052610140526102c051610200526101c0516102005110151515610a1d576308c379a061022052602061024052602e610260527f45786368616e676520726573756c74656420696e20666577657220636f696e73610280527f207468616e2065787065637465640000000000000000000000000000000000006102a05261026050608461023cfd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610160511815610b8e5760006004610280527f23b872dd000000000000000000000000000000000000000000000000000000006102a0526102806004806020846102e001018260208501600060045af1505080518201915050610140516020826102e0010152602081019050306020826102e00101526020810190506101a0516020826102e0010152602081019050806102e0526102e090508051602001806103a08284600060045af1610ae557600080fd5b505060206104806103a0516103c06000610160515af1610b0457600080fd5b60203d80821115610b155780610b17565b815b90509050610460526104608051602001806102208284600060045af1610b3c57600080fd5b50506000610220511115610b8e57610220806020015160008251806020901315610b6557600080fd5b8091901215610b7357600080fd5b806020036101000a82049050905090501515610b8e57600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610180511415610bce57600060006000600061020051610140516000f1610bc957600080fd5b610d4e565b610180513b610bdc57600080fd5b60006000604463f8c14102610220523061024052610200516102605261023c6000610180515af1610c0c57600080fd5b60006004610280527fa9059cbb000000000000000000000000000000000000000000000000000000006102a0526102806004806020846102e001018260208501600060045af1505080518201915050610140516020826102e0010152602081019050610200516020826102e0010152602081019050806102e0526102e090508051602001806103808284600060045af1610ca557600080fd5b50506020610440610380516103a06000610180515af1610cc457600080fd5b60203d80821115610cd55780610cd7565b815b90509050610420526104208051602001806102208284600060045af1610cfc57600080fd5b50506000610220511115610d4e57610220806020015160008251806020901315610d2557600080fd5b8091901215610d3357600080fd5b806020036101000a82049050905090501515610d4e57600080fd5b6101e05156",
  "deployedSourceMap": "-1:-1:5:-;;;;;:::-;;:::-;:::-;;;;;;;3828:305;;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;3828:305;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;3828:305;;;3930:1;3915:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;3898:34;3828:305;3949:42;3940:5;:51;;3937:126;;:::-;4021:2;4008:15;:9;:15;4001:22;:::-;;;;:::-;4042:21;3937:126::-;:::-;4049:9;:14;4042:21;:::-;;;;:::-;4069:64;;4084:10;-1:-1;;4096:5;-1:-1;;;4118:1;4103:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;;;4122:2;-1:-1;;;4126:6;-1:-1;;;4069:64;;;;;;;;;;;;;;:::i;:::-;;;;;3828:305;;;;:::-;4177:395;;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;4177:395;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;4177:395;;;4297:12;4265:25;:28;;;;;:44;4258:51;;:::-;;;;:::-;4358:1;4332:28;;;;;:::-;;;;:::-;:25;:28;;;;;;-1:-1;4315:45;4177:395;4377:42;4368:5;:51;;4365:126;;:::-;4449:2;4436:15;:9;:15;4429:22;:::-;;;;:::-;4470:21;4365:126::-;:::-;4477:9;:14;4470:21;:::-;;;;:::-;4497:75;;4512:10;-1:-1;;4524:5;-1:-1;;;4557:1;4531:28;;;;;:::-;;;;:::-;:25;:28;;;;;;-1:-1;;;4561:2;-1:-1;;;4565:6;-1:-1;;;4497:75;;;;;;;;;;;;;;:::i;:::-;;;;;4177:395;;;;:::-;1208:114;;;;;:::-;;;;:::-;;;;:::-;1257:12;1253:16;:1;:16;;1246:23;:::-;;;;:::-;1320:1;1305:17;;;;;:::-;;;;:::-;:14;:17;;;;;;1298:24;;;;;;1208:114::-;1341:192;;;;;:::-;;;;:::-;;;;:::-;1429:12;1397:25;:28;;;;;:44;1390:51;;:::-;;;;:::-;1457:12;1453:16;:1;:16;;1446:23;:::-;;;;:::-;1531:1;1505:28;;;;;:::-;;;;:::-;:25;:28;;;;;;1498:35;;;;;;1341:192::-;1552:93;;;;;:::-;;;;:::-;;;;:::-;1604:12;1600:16;:1;:16;;1593:23;:::-;;;;:::-;1643:1;1628:17;;;;;:::-;;;;:::-;:14;:17;;;;;;1621:24;;;;;;1552:93::-;2257:123;;;;;:::-;;;;:::-;;;;:::-;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;2257:123;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;2257:123;;;2354:1;2339:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;;;2373:1;2358:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;;;2377:2;-1:-1;;;2326:54;;;;;;;;;;:::i;:::-;;;;2319:61;;;;;;2257:123::-;2399:212;;;;;:::-;;;;:::-;;;;:::-;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;2399:212;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;2399:212;;;2511:12;2479:25;:28;;;;;:44;2472:51;;:::-;;;;:::-;2574:1;2548:28;;;;;:::-;;;;:::-;:25;:28;;;;;;-1:-1;;;2604:1;2578:28;;;;;:::-;;;;:::-;:25;:28;;;;;;-1:-1;;;2608:2;-1:-1;;;2535:76;;;;;;;;;;:::i;:::-;;;;2528:83;;;;;;2399:212::-;4606:298;;;;;:::-;;;;:::-;;;;:::-;4758:2;-1:-1;4749:6;:11;4782:10;-1:-1;4765:14;:27;4819:15;-1:-1;4797:19;:37;4855:9;-1:-1;4839:13;:25;4890:14;-1:-1;4869:18;:35;4606:298;:::-;4917:326;;;;;:::-;;;;:::-;;;;:::-;-1:-1;;;;;4917:326;:::-;;;;:::-;5089:4;-1:-1;5078:8;:15;5115:10;-1:-1;5098:14;:27;5148:11;-1:-1;5130:15;:29;5188:17;-1:-1;5164:21;:41;5230:13;-1:-1;5210:17;:33;4917:326;:::-;5256:80;;;;;:::-;;;;:::-;;;;:::-;5306:14;-1:-1;;;;;5323:13;5306:30;-1:-1;5306:30;-1:-1;5306:30;;;-1:-1;5306:30;;;-1:-1;5306:30;;;-1:-1;5306:30;;;-1:-1;5306:30;;;-1:-1;5306:30;;;-1:-1;;5306:30;5256:80;:::-;5349:76;;;;;:::-;;;;:::-;;;;:::-;5419:6;-1:-1;5394:22;:31;5349:76;:::-;519:15;;;;;:::-;;;;:::-;;;;:::-;-1:-1;519:15;;;;;;:::-;546;;;;;:::-;;;;:::-;;;;:::-;-1:-1;546:15;;;;;;:::-;578;;;;;:::-;;;;:::-;;;;:::-;-1:-1;578:15;;;;;;:::-;604;;;;;:::-;;;;:::-;;;;:::-;-1:-1;604:15;;;;;;:::-;635;;;;;:::-;;;;:::-;;;;:::-;-1:-1;635:15;;;;;;:::-;657;;;;;:::-;;;;:::-;;;;:::-;-1:-1;657:15;;;;;;:::-;684;;;;;:::-;;;;:::-;;;;:::-;-1:-1;684:15;;;;;;:::-;712;;;;;:::-;;;;:::-;;;;:::-;-1:-1;712:15;;;;;;:::-;746;;;;;:::-;;;;:::-;;;;:::-;-1:-1;746:15;;;;;;:::-;776;;;;;:::-;;;;:::-;;;;:::-;-1:-1;776:15;;;;;;:::-;811;;;;;:::-;;;;:::-;;;;:::-;-1:-1;811:15;;;;;;:::-;-1:-1;:::-;5447:27;1664:574::-;-1:-1;1664:574;-1:-1;;;;;;1664:574;;;;1813:42;1804:5;:51;;1801:148;;:::-;1883:2;1865:15;:20;1801:148;:::-;:::-;1922:27;;;-1:-1;;;;1932:5;1922:27;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;1904:15;:45;1801:148::-;1964:42;1957:3;:49;;1954:140;;:::-;2032:2;2016:13;:18;1954:140;:::-;:::-;2069:25;;;-1:-1;;;;2079:3;2069:25;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;2053:13;:41;1954:140::-;2115:3;:25;2122:17;2126:13;2122:17;;;:::-;;;;:::-;2126:13;2122:17;:2;:17;2115:25;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;2144:19;2148:15;2144:19;;;:::-;;;;:::-;2148:15;2144:19;:2;:19;2115:49;;;:::-;;;;:::-;;;;;;;2100:64;1664:574;2185:3;:14;2191:8;2185:14;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;2202:13;2185:30;;;;;;;2169:46;1664:574;2228:3;:10;2234:4;2228:10;;;-1:-1;;2228:10;:::-;;;;:::-;;;;;;;;2221:17;;;;;;:::o;2624:1160::-;-1:-1;2624:1160;-1:-1;;;;;;;;;;2735:28;;;;;;;;;;;;;;2748:5;-1:-1;;;2755:3;-1:-1;;;2760:2;-1:-1;;;2735:28;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1;2721:42;2624:1160;2781:6;2775:12;:2;:12;-1:-1;;2768:69;;;:::-;;;;;;;2789:48;;;;;;;;;;2768:69;;;;:::-;2855:42;2846:5;:51;2843:452;;3264:31;2843:452::-;2971:210;2995:50;;;;;;;-1:-1;;;;;;;;;;;;;;;;2971:210;-1:-1;2971:210;;;;;;3071:7;3063:25;2971:210;-1:-1;;2971:210;;;;;;;;3106:22;2971:210;-1:-1;;2971:210;;;;;;;;3154:2;3146:20;2971:210;-1:-1;;2971:210;;;;;;;;;;;;;;-1:-1;;;;;2930:290;-1:-1;;;;;;;:::-;;;;:::-;;2930:290;;;;;;3514:236;2952:5;2930:290;;;;:::-;;;;:::-;;;;;;;;:::-;;;:::-;:::-;;:::-;;;;;;;;-1:-1;;;;;2907:313;-1:-1;;;;;;;:::-;;;;:::-;;2907:313;3249:1;3236:9;3232:18;;3229:66;3264:31;3229:66::-;3279:9;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;3271:24;;;;3264:31;:::-;;;;:::-;3311:42;3304:3;:49;;3301:483;;:::-;3363:17;;;;3377:2;3363:17;3368:7;3363:17;;;;:::-;;;;:::-;3753:31;3301:483::-;:::-;3409:3;3399:42;;;:::-;;;;:::-;;;;-1:-1;;;3432:4;-1:-1;;3438:2;-1:-1;;;;3399:42;3409:3;3399:42;;;;:::-;;;;:::-;3512:158;3536:38;;;;;;;-1:-1;;;;;;;;;;;;;;;;3512:158;-1:-1;3512:158;;;;;;3600:7;3592:25;3512:158;-1:-1;;3512:158;;;;;;;;3643:2;3635:20;3512:158;-1:-1;;3512:158;;;;;;;;;;;;;;-1:-1;;;;;3473:236;-1:-1;;;;;;;:::-;;;;:::-;;3473:236;;;;;;3514;3495:3;3473:236;;;;:::-;;;;:::-;;;;;;;;:::-;;;:::-;:::-;;:::-;;;;;;;;-1:-1;;;;;3450:259;-1:-1;;;;;;;:::-;;;;:::-;;3399:42;3738:1;3725:9;3721:18;;3718:66;3753:31;3718:66::-;3768:9;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;3760:24;;;;3753:31;:::-;;;;:::-;2624:1160;;:::o;",
  "language": "Vyper",
  "natspec": {
    "methods": {},
    "notice": "Mock Kagla pool for testing"
  },
  "offset": [
    0,
    5475
  ],
  "opcodes": "PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x0D JUMPI PUSH2 0x77A JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1C MSTORE PUSH1 0x0 MLOAD PUSH4 0x3DF02124 DUP2 EQ ISZERO PUSH2 0x13B JUMPI PUSH1 0xF SLOAD ISZERO PUSH2 0x02F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xF SSTORE PUSH1 0x4 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x044 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x24 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x064 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x140 MLOAD EQ ISZERO PUSH2 0x0C6 JUMPI PUSH1 0x44 CALLDATALOAD CALLVALUE EQ PUSH2 0x0C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x0D1 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x0D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 MLOAD CALLER PUSH2 0x160 MSTORE PUSH2 0x140 MLOAD PUSH2 0x180 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x0F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x1A0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x1C0 MSTORE PUSH1 0x64 CALLDATALOAD PUSH2 0x1E0 MSTORE PUSH2 0x1E0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0x91A JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH1 0x0 PUSH1 0xF SSTORE STOP JUMPDEST PUSH4 0xA6417ED6 DUP2 EQ ISZERO PUSH2 0x277 JUMPI PUSH1 0xF SLOAD ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xF SSTORE PUSH1 0x4 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x169 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x24 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x189 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x0 PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 SLOAD XOR PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x140 MLOAD EQ ISZERO PUSH2 0x22 JUMPI PUSH1 0x44 CALLDATALOAD CALLVALUE EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 MLOAD CALLER PUSH2 0x160 MSTORE PUSH2 0x140 MLOAD PUSH2 0x180 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x1A0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x1C0 MSTORE PUSH1 0x64 CALLDATALOAD PUSH2 0x1E0 MSTORE PUSH2 0x1E0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0x91A JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH1 0x0 PUSH1 0xF SSTORE STOP JUMPDEST PUSH4 0xC661657 DUP2 EQ ISZERO PUSH2 0x2C3 JUMPI CALLVALUE ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xB9947EB0 DUP2 EQ ISZERO PUSH2 0x326 JUMPI CALLVALUE ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 SLOAD XOR PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x493B0D1 DUP2 EQ ISZERO PUSH2 0x372 JUMPI CALLVALUE ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x5ED443F DUP2 EQ ISZERO PUSH2 0x436 JUMPI CALLVALUE ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x399 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x24 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x3B9 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x160 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x77C JUMP JUMPDEST PUSH2 0x1E0 MSTORE PUSH2 0x1E0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x7211EF7 DUP2 EQ ISZERO PUSH2 0x511 JUMPI CALLVALUE ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x45D JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x24 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x47D JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x0 PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 SLOAD XOR PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x160 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x77C JUMP JUMPDEST PUSH2 0x1E0 MSTORE PUSH2 0x1E0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xBB8D331D DUP2 EQ ISZERO PUSH2 0x548 JUMPI CALLVALUE ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x3 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x5 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x6 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x7 SSTORE STOP JUMPDEST PUSH4 0xEEE22ABB DUP2 EQ ISZERO PUSH2 0x58F JUMPI CALLVALUE ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x9 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xA SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xB SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xC SSTORE STOP JUMPDEST PUSH4 0xAB203BC4 DUP2 EQ ISZERO PUSH2 0x5D8 JUMPI CALLVALUE ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH1 0x4 DUP1 CALLDATALOAD DUP3 SSTORE DUP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 DUP4 ADD SSTORE DUP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x2 DUP4 ADD SSTORE DUP1 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x3 DUP4 ADD SSTORE POP POP STOP JUMPDEST PUSH4 0x3BA68012 DUP2 EQ ISZERO PUSH2 0x5F7 JUMPI CALLVALUE ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD SSTORE STOP JUMPDEST PUSH4 0xF446C1D0 DUP2 EQ ISZERO PUSH2 0x61A JUMPI CALLVALUE ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x549491A DUP2 EQ ISZERO PUSH2 0x63D JUMPI CALLVALUE ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x208166C DUP2 EQ ISZERO PUSH2 0x660 JUMPI CALLVALUE ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xB4B577AD DUP2 EQ ISZERO PUSH2 0x683 JUMPI CALLVALUE ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x1452288 DUP2 EQ ISZERO PUSH2 0x6A6 JUMPI CALLVALUE ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xDDCA3F43 DUP2 EQ ISZERO PUSH2 0x6C9 JUMPI CALLVALUE ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xFEE3F7F9 DUP2 EQ ISZERO PUSH2 0x6EC JUMPI CALLVALUE ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x5868DB DUP2 EQ ISZERO PUSH2 0x7F JUMPI CALLVALUE ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xE3824462 DUP2 EQ ISZERO PUSH2 0x732 JUMPI CALLVALUE ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x1EC0CDC1 DUP2 EQ ISZERO PUSH2 0x755 JUMPI CALLVALUE ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xBB7B8B80 DUP2 EQ ISZERO PUSH2 0x778 JUMPI CALLVALUE ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE PUSH1 0x40 CALLDATASIZE PUSH2 0x1C0 CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x140 MLOAD EQ ISZERO PUSH2 0x7BD JUMPI PUSH1 0x12 PUSH2 0x1C0 MSTORE PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x260 PUSH1 0x4 PUSH4 0x313CE567 PUSH2 0x20 MSTORE PUSH2 0x21C PUSH2 0x140 MLOAD GAS STATICCALL PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x260 MLOAD PUSH2 0x1C0 MSTORE JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x160 MLOAD EQ ISZERO PUSH2 0x822 JUMPI PUSH1 0x12 PUSH2 0x1E0 MSTORE PUSH2 0x85D JUMP JUMPDEST PUSH1 0x20 PUSH2 0x260 PUSH1 0x4 PUSH4 0x313CE567 PUSH2 0x20 MSTORE PUSH2 0x21C PUSH2 0x160 MLOAD GAS STATICCALL PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x260 MLOAD PUSH2 0x1E0 MSTORE JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x4E PUSH2 0x1E0 MLOAD LT PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0 MLOAD PUSH1 0xA EXP DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH1 0x4E PUSH2 0x1C0 MLOAD LT PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0 MLOAD PUSH1 0xA EXP DUP1 DUP1 PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x20 MSTORE PUSH2 0x20 MLOAD PUSH1 0x8 SLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x8DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH5 0x254BE40 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x220 MSTORE PUSH2 0x20 MLOAD PUSH2 0x220 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x1A0 MLOAD JUMP JUMPDEST PUSH2 0x1E0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x20 MLOAD PUSH2 0x160 MLOAD PUSH2 0x220 MSTORE PUSH2 0x180 MLOAD PUSH2 0x240 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x260 MSTORE PUSH2 0x260 MLOAD PUSH2 0x240 MLOAD PUSH2 0x220 MLOAD PUSH1 0x6 PC ADD PUSH2 0x77C JUMP JUMPDEST PUSH2 0x2C0 MSTORE PUSH2 0x20 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x2C0 MLOAD PUSH2 0x20 MSTORE PUSH2 0x1C0 MLOAD PUSH2 0x20 MLOAD LT ISZERO ISZERO ISZERO PUSH2 0xA1D JUMPI PUSH4 0x8C379A0 PUSH2 0x220 MSTORE PUSH1 0x20 PUSH2 0x240 MSTORE PUSH1 0x2E PUSH2 0x260 MSTORE PUSH32 0x45786368616E676520726573756C74656420696E20666577657220636F696E73 PUSH2 0x280 MSTORE PUSH32 0x207468616E206578706563746564000000000000000000 PUSH2 0x2A0 MSTORE PUSH2 0x260 POP PUSH1 0x84 PUSH2 0x23C REVERT JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x160 MLOAD XOR ISZERO PUSH2 0xB8E JUMPI PUSH1 0x0 PUSH1 0x4 PUSH2 0x280 MSTORE PUSH32 0x23B872DD0000000000000000000000000000 PUSH2 0x2A0 MSTORE PUSH2 0x280 PUSH1 0x4 DUP1 PUSH1 0x20 DUP5 PUSH2 0x2E0 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP PUSH2 0x140 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP ADDRESS PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A0 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 PUSH2 0x2E0 MSTORE PUSH2 0x2E0 SWAP1 POP DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x3A0 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH2 0x480 PUSH2 0x3A0 MLOAD PUSH2 0x3C0 PUSH1 0x0 PUSH2 0x160 MLOAD GAS CALL PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP1 DUP3 GT ISZERO PUSH2 0xB15 JUMPI DUP1 PUSH2 0xB17 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x460 MSTORE PUSH2 0x460 DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x220 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH2 0x220 MLOAD GT ISZERO PUSH2 0xB8E JUMPI PUSH2 0x220 DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0xB73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP ISZERO ISZERO PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x180 MLOAD EQ ISZERO PUSH2 0xBCE JUMPI PUSH1 0x0 PUSH1 0x0 PUSH1 0x0 PUSH1 0x0 PUSH2 0x20 MLOAD PUSH2 0x140 MLOAD PUSH1 0x0 CALL PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x180 MLOAD EXTCODESIZE PUSH2 0xBDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 PUSH1 0x44 PUSH4 0xF8C1412 PUSH2 0x220 MSTORE ADDRESS PUSH2 0x240 MSTORE PUSH2 0x20 MLOAD PUSH2 0x260 MSTORE PUSH2 0x23C PUSH1 0x0 PUSH2 0x180 MLOAD GAS CALL PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH2 0x280 MSTORE PUSH32 0xA959CBB0000000000000000000000000000 PUSH2 0x2A0 MSTORE PUSH2 0x280 PUSH1 0x4 DUP1 PUSH1 0x20 DUP5 PUSH2 0x2E0 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP PUSH2 0x140 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 PUSH2 0x2E0 MSTORE PUSH2 0x2E0 SWAP1 POP DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x380 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0xCA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH2 0x440 PUSH2 0x380 MLOAD PUSH2 0x3A0 PUSH1 0x0 PUSH2 0x180 MLOAD GAS CALL PUSH2 0xCC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP1 DUP3 GT ISZERO PUSH2 0xCD5 JUMPI DUP1 PUSH2 0xCD7 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x420 MSTORE PUSH2 0x420 DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x220 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0xCFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH2 0x220 MLOAD GT ISZERO PUSH2 0xD4E JUMPI PUSH2 0x220 DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0xD25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP ISZERO ISZERO PUSH2 0xD4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0 MLOAD JUMP",
  "pcMap": {
    "0": {
      "offset": [
        0,
        5474
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "LT"
    },
    "4": {
      "op": "ISZERO"
    },
    "5": {
      "op": "PUSH2",
      "value": "0x0D"
    },
    "8": {
      "op": "JUMPI"
    },
    "9": {
      "op": "PUSH2",
      "value": "0x77A"
    },
    "12": {
      "op": "JUMP"
    },
    "13": {
      "op": "JUMPDEST"
    },
    "14": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16": {
      "op": "CALLDATALOAD"
    },
    "17": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "19": {
      "op": "MSTORE"
    },
    "20": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22": {
      "op": "MLOAD"
    },
    "23": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3DF02124"
    },
    "28": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "DUP2",
      "path": "0"
    },
    "29": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "EQ",
      "path": "0"
    },
    "30": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "31": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "34": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "35": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "37": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "38": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "39": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x02F"
    },
    "42": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "45": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "DUP1",
      "path": "0"
    },
    "46": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "REVERT",
      "path": "0"
    },
    "47": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "48": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "50": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "52": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "53": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "55": {
      "op": "CALLDATALOAD"
    },
    "56": {
      "op": "DUP1"
    },
    "57": {
      "op": "DUP1"
    },
    "58": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "60": {
      "op": "DUP2"
    },
    "61": {
      "op": "SLT"
    },
    "62": {
      "op": "ISZERO"
    },
    "63": {
      "op": "PUSH2",
      "value": "0x044"
    },
    "66": {
      "op": "JUMPI"
    },
    "67": {
      "op": "NOT"
    },
    "68": {
      "op": "JUMPDEST"
    },
    "69": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "71": {
      "op": "SHR"
    },
    "72": {
      "op": "ISZERO"
    },
    "73": {
      "op": "PUSH2",
      "value": "0x051"
    },
    "76": {
      "op": "JUMPI"
    },
    "77": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "79": {
      "op": "DUP1"
    },
    "80": {
      "op": "REVERT"
    },
    "81": {
      "op": "JUMPDEST"
    },
    "82": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "83": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "POP",
      "path": "0"
    },
    "84": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "POP",
      "path": "0"
    },
    "85": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "87": {
      "op": "CALLDATALOAD"
    },
    "88": {
      "op": "DUP1"
    },
    "89": {
      "op": "DUP1"
    },
    "90": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "92": {
      "op": "DUP2"
    },
    "93": {
      "op": "SLT"
    },
    "94": {
      "op": "ISZERO"
    },
    "95": {
      "op": "PUSH2",
      "value": "0x064"
    },
    "98": {
      "op": "JUMPI"
    },
    "99": {
      "op": "NOT"
    },
    "100": {
      "op": "JUMPDEST"
    },
    "101": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "103": {
      "op": "SHR"
    },
    "104": {
      "op": "ISZERO"
    },
    "105": {
      "op": "PUSH2",
      "value": "0x071"
    },
    "108": {
      "op": "JUMPI"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "111": {
      "op": "DUP1"
    },
    "112": {
      "op": "REVERT"
    },
    "113": {
      "op": "JUMPDEST"
    },
    "114": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "115": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "POP",
      "path": "0"
    },
    "116": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "POP",
      "path": "0"
    },
    "117": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3930,
        3931
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x4"
    },
    "119": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "120": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "122": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "DUP2",
      "path": "0"
    },
    "123": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "LT",
      "path": "0"
    },
    "124": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x084"
    },
    "127": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "128": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "130": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "131": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "REVERT",
      "path": "0"
    },
    "132": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "135": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "137": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "138": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "140": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "142": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "SHA3",
      "path": "0"
    },
    "143": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3915,
        3932
      ],
      "op": "ADD",
      "path": "0"
    },
    "144": {
      "op": "SLOAD"
    },
    "145": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3898,
        3932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "148": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "149": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3949,
        3991
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "170": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3940,
        3945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "173": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3940,
        3991
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "174": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3940,
        3991
      ],
      "op": "EQ",
      "path": "0"
    },
    "175": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3937,
        4063
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "176": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3937,
        4063
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0C6"
    },
    "179": {
      "branch": 1,
      "fn": "PoolMockV2.exchange",
      "offset": [
        3937,
        4063
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4021,
        4023
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x44"
    },
    "182": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4008,
        4023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "183": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4008,
        4017
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "184": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4008,
        4023
      ],
      "op": "EQ",
      "path": "0"
    },
    "185": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4001,
        4023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0C1"
    },
    "188": {
      "branch": 3,
      "fn": "PoolMockV2.exchange",
      "offset": [
        4001,
        4023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "189": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4001,
        4023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "191": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4001,
        4023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "192": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4001,
        4023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "193": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4001,
        4023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4042,
        4063
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x0D1"
    },
    "197": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3937,
        4063
      ],
      "op": "JUMP",
      "path": "0"
    },
    "198": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3937,
        4063
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "199": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4049,
        4058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "200": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4049,
        4063
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "201": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4042,
        4063
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0D1"
    },
    "204": {
      "branch": 5,
      "fn": "PoolMockV2.exchange",
      "offset": [
        4042,
        4063
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "205": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4042,
        4063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "207": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4042,
        4063
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4042,
        4063
      ],
      "op": "REVERT",
      "path": "0"
    },
    "209": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4042,
        4063
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "210": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x140"
    },
    "213": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "214": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4084,
        4094
      ],
      "op": "CALLER",
      "path": "0"
    },
    "215": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "218": {
      "op": "MSTORE"
    },
    "219": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4096,
        4101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "222": {
      "op": "MLOAD"
    },
    "223": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "226": {
      "op": "MSTORE"
    },
    "227": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4118,
        4119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "229": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "230": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "232": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "233": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "LT",
      "path": "0"
    },
    "234": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0F2"
    },
    "237": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "238": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "240": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "REVERT",
      "path": "0"
    },
    "242": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "243": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "245": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "247": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "248": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "250": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "252": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "SHA3",
      "path": "0"
    },
    "253": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4103,
        4120
      ],
      "op": "ADD",
      "path": "0"
    },
    "254": {
      "op": "SLOAD"
    },
    "255": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "258": {
      "op": "MSTORE"
    },
    "259": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4122,
        4124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "261": {
      "op": "CALLDATALOAD"
    },
    "262": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "265": {
      "op": "MSTORE"
    },
    "266": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4126,
        4132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "268": {
      "op": "CALLDATALOAD"
    },
    "269": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "272": {
      "op": "MSTORE"
    },
    "273": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "276": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "277": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "280": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "281": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "284": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "285": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "288": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "289": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "292": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "293": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "295": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PC",
      "path": "0"
    },
    "296": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "ADD",
      "path": "0"
    },
    "297": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91A"
    },
    "300": {
      "fn": "PoolMockV2.exchange",
      "jump": "i",
      "offset": [
        4069,
        4133
      ],
      "op": "JUMP",
      "path": "0"
    },
    "301": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "305": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "306": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "308": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        4069,
        4133
      ],
      "op": "POP",
      "path": "0"
    },
    "309": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "311": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "313": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "314": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "STOP",
      "path": "0"
    },
    "315": {
      "fn": "PoolMockV2.exchange",
      "offset": [
        3828,
        4133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA6417ED6"
    },
    "321": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "322": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "EQ",
      "path": "0"
    },
    "323": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "324": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277"
    },
    "327": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "328": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "330": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "331": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "332": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "335": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "336": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "338": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "339": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "REVERT",
      "path": "0"
    },
    "340": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "341": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "343": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "345": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "348": {
      "op": "CALLDATALOAD"
    },
    "349": {
      "op": "DUP1"
    },
    "350": {
      "op": "DUP1"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "353": {
      "op": "DUP2"
    },
    "354": {
      "op": "SLT"
    },
    "355": {
      "op": "ISZERO"
    },
    "356": {
      "op": "PUSH2",
      "value": "0x169"
    },
    "359": {
      "op": "JUMPI"
    },
    "360": {
      "op": "NOT"
    },
    "361": {
      "op": "JUMPDEST"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "364": {
      "op": "SHR"
    },
    "365": {
      "op": "ISZERO"
    },
    "366": {
      "op": "PUSH2",
      "value": "0x176"
    },
    "369": {
      "op": "JUMPI"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "372": {
      "op": "DUP1"
    },
    "373": {
      "op": "REVERT"
    },
    "374": {
      "op": "JUMPDEST"
    },
    "375": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "376": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "POP",
      "path": "0"
    },
    "377": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "POP",
      "path": "0"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "380": {
      "op": "CALLDATALOAD"
    },
    "381": {
      "op": "DUP1"
    },
    "382": {
      "op": "DUP1"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "385": {
      "op": "DUP2"
    },
    "386": {
      "op": "SLT"
    },
    "387": {
      "op": "ISZERO"
    },
    "388": {
      "op": "PUSH2",
      "value": "0x189"
    },
    "391": {
      "op": "JUMPI"
    },
    "392": {
      "op": "NOT"
    },
    "393": {
      "op": "JUMPDEST"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "396": {
      "op": "SHR"
    },
    "397": {
      "op": "ISZERO"
    },
    "398": {
      "op": "PUSH2",
      "value": "0x196"
    },
    "401": {
      "op": "JUMPI"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "404": {
      "op": "DUP1"
    },
    "405": {
      "op": "REVERT"
    },
    "406": {
      "op": "JUMPDEST"
    },
    "407": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "408": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "POP",
      "path": "0"
    },
    "409": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "POP",
      "path": "0"
    },
    "410": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4297,
        4309
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "412": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4265,
        4290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "414": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4265,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "416": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4265,
        4293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "417": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4265,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "419": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4265,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "421": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4265,
        4293
      ],
      "op": "SHA3",
      "path": "0"
    },
    "422": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4265,
        4309
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "423": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4258,
        4309
      ],
      "op": "XOR",
      "path": "0"
    },
    "424": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4258,
        4309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0"
    },
    "427": {
      "branch": 8,
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4258,
        4309
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "428": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4258,
        4309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "430": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4258,
        4309
      ],
      "op": "DUP1",
      "path": "0"
    },
    "431": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4258,
        4309
      ],
      "op": "REVERT",
      "path": "0"
    },
    "432": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4258,
        4309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "433": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4358,
        4359
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x4"
    },
    "435": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "436": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "438": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "DUP2",
      "path": "0"
    },
    "439": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "LT",
      "path": "0"
    },
    "440": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "443": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "444": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "446": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "DUP1",
      "path": "0"
    },
    "447": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "REVERT",
      "path": "0"
    },
    "448": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "449": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "451": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "453": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "454": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "456": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "458": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "SHA3",
      "path": "0"
    },
    "459": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4332,
        4360
      ],
      "op": "ADD",
      "path": "0"
    },
    "460": {
      "op": "SLOAD"
    },
    "461": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4315,
        4360
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "464": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "465": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4377,
        4419
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "486": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4368,
        4373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "489": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4368,
        4419
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "490": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4368,
        4419
      ],
      "op": "EQ",
      "path": "0"
    },
    "491": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4365,
        4491
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "492": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4365,
        4491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22"
    },
    "495": {
      "branch": 10,
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4365,
        4491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "496": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4449,
        4451
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x44"
    },
    "498": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4436,
        4451
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "499": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4436,
        4445
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "500": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4436,
        4451
      ],
      "op": "EQ",
      "path": "0"
    },
    "501": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4429,
        4451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD"
    },
    "504": {
      "branch": 12,
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4429,
        4451
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "505": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4429,
        4451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "507": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4429,
        4451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "508": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4429,
        4451
      ],
      "op": "REVERT",
      "path": "0"
    },
    "509": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4429,
        4451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "510": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4470,
        4491
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x2D"
    },
    "513": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4365,
        4491
      ],
      "op": "JUMP",
      "path": "0"
    },
    "514": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4365,
        4491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "515": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4477,
        4486
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "516": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4477,
        4491
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "517": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4470,
        4491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D"
    },
    "520": {
      "branch": 14,
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4470,
        4491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "521": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4470,
        4491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "523": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4470,
        4491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "524": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4470,
        4491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "525": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4470,
        4491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "526": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x140"
    },
    "529": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "530": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4512,
        4522
      ],
      "op": "CALLER",
      "path": "0"
    },
    "531": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "534": {
      "op": "MSTORE"
    },
    "535": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4524,
        4529
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "538": {
      "op": "MLOAD"
    },
    "539": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "542": {
      "op": "MSTORE"
    },
    "543": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4557,
        4558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "545": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "546": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "548": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "549": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "LT",
      "path": "0"
    },
    "550": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22E"
    },
    "553": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "554": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "556": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "DUP1",
      "path": "0"
    },
    "557": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "REVERT",
      "path": "0"
    },
    "558": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "559": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "561": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "563": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "564": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "566": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "568": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "SHA3",
      "path": "0"
    },
    "569": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4531,
        4559
      ],
      "op": "ADD",
      "path": "0"
    },
    "570": {
      "op": "SLOAD"
    },
    "571": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4561,
        4563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "577": {
      "op": "CALLDATALOAD"
    },
    "578": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "581": {
      "op": "MSTORE"
    },
    "582": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4565,
        4571
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "584": {
      "op": "CALLDATALOAD"
    },
    "585": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "588": {
      "op": "MSTORE"
    },
    "589": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "592": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "593": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "596": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "597": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "600": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "601": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "604": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "605": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "608": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "609": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "611": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PC",
      "path": "0"
    },
    "612": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "ADD",
      "path": "0"
    },
    "613": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91A"
    },
    "616": {
      "fn": "PoolMockV2.exchange_underlying",
      "jump": "i",
      "offset": [
        4497,
        4572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "617": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "618": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "621": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "622": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "624": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4497,
        4572
      ],
      "op": "POP",
      "path": "0"
    },
    "625": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "627": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "629": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "630": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "STOP",
      "path": "0"
    },
    "631": {
      "fn": "PoolMockV2.exchange_underlying",
      "offset": [
        4177,
        4572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "632": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC661657"
    },
    "637": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "638": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "EQ",
      "path": "0"
    },
    "639": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "640": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C3"
    },
    "643": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "644": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "645": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "646": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E"
    },
    "649": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "650": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "652": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "DUP1",
      "path": "0"
    },
    "653": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "REVERT",
      "path": "0"
    },
    "654": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "655": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1257,
        1269
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "657": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1253,
        1269
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "658": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1253,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "660": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1253,
        1269
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "661": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1253,
        1269
      ],
      "op": "LT",
      "path": "0"
    },
    "662": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1246,
        1269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E"
    },
    "665": {
      "branch": 17,
      "fn": "PoolMockV2.coins",
      "offset": [
        1246,
        1269
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "666": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1246,
        1269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "668": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "0"
    },
    "669": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1246,
        1269
      ],
      "op": "REVERT",
      "path": "0"
    },
    "670": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1246,
        1269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "671": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1320,
        1321
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x4"
    },
    "673": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "674": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "676": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "677": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "LT",
      "path": "0"
    },
    "678": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "681": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "682": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "684": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "DUP1",
      "path": "0"
    },
    "685": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "REVERT",
      "path": "0"
    },
    "686": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "689": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "691": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "692": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "694": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "696": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "SHA3",
      "path": "0"
    },
    "697": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1305,
        1322
      ],
      "op": "ADD",
      "path": "0"
    },
    "698": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1298,
        1322
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "699": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1298,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "701": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1298,
        1322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "702": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1298,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "704": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1298,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "706": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1298,
        1322
      ],
      "op": "RETURN",
      "path": "0"
    },
    "707": {
      "fn": "PoolMockV2.coins",
      "offset": [
        1208,
        1322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "708": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB9947EB0"
    },
    "713": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "714": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "EQ",
      "path": "0"
    },
    "715": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "716": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x326"
    },
    "719": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "720": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "721": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "722": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "725": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "726": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "728": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "729": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "REVERT",
      "path": "0"
    },
    "730": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "731": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1429,
        1441
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x0"
    },
    "733": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1397,
        1422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "735": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1397,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "737": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1397,
        1425
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "738": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1397,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "740": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1397,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "742": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1397,
        1425
      ],
      "op": "SHA3",
      "path": "0"
    },
    "743": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1397,
        1441
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "744": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1390,
        1441
      ],
      "op": "XOR",
      "path": "0"
    },
    "745": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1390,
        1441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F1"
    },
    "748": {
      "branch": 20,
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1390,
        1441
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "749": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1390,
        1441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "751": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1390,
        1441
      ],
      "op": "DUP1",
      "path": "0"
    },
    "752": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1390,
        1441
      ],
      "op": "REVERT",
      "path": "0"
    },
    "753": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1390,
        1441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "754": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1457,
        1469
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "756": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1453,
        1469
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "757": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1453,
        1454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "759": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1453,
        1469
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "760": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1453,
        1469
      ],
      "op": "LT",
      "path": "0"
    },
    "761": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1446,
        1469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31"
    },
    "764": {
      "branch": 22,
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1446,
        1469
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "765": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1446,
        1469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "767": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1446,
        1469
      ],
      "op": "DUP1",
      "path": "0"
    },
    "768": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1446,
        1469
      ],
      "op": "REVERT",
      "path": "0"
    },
    "769": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1446,
        1469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "770": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1531,
        1532
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x4"
    },
    "772": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "773": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "775": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "776": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "LT",
      "path": "0"
    },
    "777": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x311"
    },
    "780": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "781": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "783": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "784": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "REVERT",
      "path": "0"
    },
    "785": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "786": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "788": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "790": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "791": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "793": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "795": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "SHA3",
      "path": "0"
    },
    "796": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1505,
        1533
      ],
      "op": "ADD",
      "path": "0"
    },
    "797": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1498,
        1533
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "798": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1498,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "800": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1498,
        1533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "801": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1498,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "803": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1498,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "805": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1498,
        1533
      ],
      "op": "RETURN",
      "path": "0"
    },
    "806": {
      "fn": "PoolMockV2.underlying_coins",
      "offset": [
        1341,
        1533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "807": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x493B0D1"
    },
    "812": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "813": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "EQ",
      "path": "0"
    },
    "814": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "815": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372"
    },
    "818": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "819": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "820": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "821": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33D"
    },
    "824": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "825": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "827": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "828": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "REVERT",
      "path": "0"
    },
    "829": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "830": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1604,
        1616
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x0"
    },
    "832": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1600,
        1616
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "833": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1600,
        1601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "835": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1600,
        1616
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "836": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1600,
        1616
      ],
      "op": "LT",
      "path": "0"
    },
    "837": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1593,
        1616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D"
    },
    "840": {
      "branch": 25,
      "fn": "PoolMockV2.balances",
      "offset": [
        1593,
        1616
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "841": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1593,
        1616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "843": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1593,
        1616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "844": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1593,
        1616
      ],
      "op": "REVERT",
      "path": "0"
    },
    "845": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1593,
        1616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "846": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1643,
        1644
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x4"
    },
    "848": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "849": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "851": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "852": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "LT",
      "path": "0"
    },
    "853": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35D"
    },
    "856": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "857": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "859": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "860": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "REVERT",
      "path": "0"
    },
    "861": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "862": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "864": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "866": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "867": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "869": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "871": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "SHA3",
      "path": "0"
    },
    "872": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1628,
        1645
      ],
      "op": "ADD",
      "path": "0"
    },
    "873": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1621,
        1645
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "874": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1621,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "876": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1621,
        1645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "877": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1621,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "879": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1621,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "881": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1621,
        1645
      ],
      "op": "RETURN",
      "path": "0"
    },
    "882": {
      "fn": "PoolMockV2.balances",
      "offset": [
        1552,
        1645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "883": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5ED443F"
    },
    "888": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "889": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "EQ",
      "path": "0"
    },
    "890": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "891": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x436"
    },
    "894": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "895": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "896": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "897": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x389"
    },
    "900": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "901": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "903": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "904": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "905": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "908": {
      "op": "CALLDATALOAD"
    },
    "909": {
      "op": "DUP1"
    },
    "910": {
      "op": "DUP1"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "913": {
      "op": "DUP2"
    },
    "914": {
      "op": "SLT"
    },
    "915": {
      "op": "ISZERO"
    },
    "916": {
      "op": "PUSH2",
      "value": "0x399"
    },
    "919": {
      "op": "JUMPI"
    },
    "920": {
      "op": "NOT"
    },
    "921": {
      "op": "JUMPDEST"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "924": {
      "op": "SHR"
    },
    "925": {
      "op": "ISZERO"
    },
    "926": {
      "op": "PUSH2",
      "value": "0x3A6"
    },
    "929": {
      "op": "JUMPI"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "932": {
      "op": "DUP1"
    },
    "933": {
      "op": "REVERT"
    },
    "934": {
      "op": "JUMPDEST"
    },
    "935": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "936": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "POP",
      "path": "0"
    },
    "937": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "POP",
      "path": "0"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "940": {
      "op": "CALLDATALOAD"
    },
    "941": {
      "op": "DUP1"
    },
    "942": {
      "op": "DUP1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "945": {
      "op": "DUP2"
    },
    "946": {
      "op": "SLT"
    },
    "947": {
      "op": "ISZERO"
    },
    "948": {
      "op": "PUSH2",
      "value": "0x3B9"
    },
    "951": {
      "op": "JUMPI"
    },
    "952": {
      "op": "NOT"
    },
    "953": {
      "op": "JUMPDEST"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "956": {
      "op": "SHR"
    },
    "957": {
      "op": "ISZERO"
    },
    "958": {
      "op": "PUSH2",
      "value": "0x3C6"
    },
    "961": {
      "op": "JUMPI"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "964": {
      "op": "DUP1"
    },
    "965": {
      "op": "REVERT"
    },
    "966": {
      "op": "JUMPDEST"
    },
    "967": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "968": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "POP",
      "path": "0"
    },
    "969": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "POP",
      "path": "0"
    },
    "970": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2354,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x4"
    },
    "972": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "973": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "975": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "976": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "LT",
      "path": "0"
    },
    "977": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "980": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "981": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "983": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "984": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "REVERT",
      "path": "0"
    },
    "985": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "986": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "988": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "990": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "991": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "993": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "995": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "SHA3",
      "path": "0"
    },
    "996": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2339,
        2356
      ],
      "op": "ADD",
      "path": "0"
    },
    "997": {
      "op": "SLOAD"
    },
    "998": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2373,
        2374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1004": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1005": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1007": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1008": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "LT",
      "path": "0"
    },
    "1009": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "1012": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1013": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1015": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1016": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1017": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1018": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1020": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1022": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1023": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1025": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1027": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1028": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2358,
        2375
      ],
      "op": "ADD",
      "path": "0"
    },
    "1029": {
      "op": "SLOAD"
    },
    "1030": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1033": {
      "op": "MSTORE"
    },
    "1034": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2377,
        2379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1036": {
      "op": "CALLDATALOAD"
    },
    "1037": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1040": {
      "op": "MSTORE"
    },
    "1041": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1044": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1045": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1048": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1049": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "1052": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1053": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1055": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "PC",
      "path": "0"
    },
    "1056": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "ADD",
      "path": "0"
    },
    "1057": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77C"
    },
    "1060": {
      "fn": "PoolMockV2.get_dy",
      "jump": "i",
      "offset": [
        2326,
        2380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1061": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1062": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "1065": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1066": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2326,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "1069": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2319,
        2380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1070": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2319,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1072": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2319,
        2380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1073": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2319,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1075": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2319,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1077": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2319,
        2380
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1078": {
      "fn": "PoolMockV2.get_dy",
      "offset": [
        2257,
        2380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1079": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7211EF7"
    },
    "1084": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1085": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "EQ",
      "path": "0"
    },
    "1086": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1087": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x511"
    },
    "1090": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1091": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1092": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1093": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44D"
    },
    "1096": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1097": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1099": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1100": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1101": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1104": {
      "op": "CALLDATALOAD"
    },
    "1105": {
      "op": "DUP1"
    },
    "1106": {
      "op": "DUP1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1109": {
      "op": "DUP2"
    },
    "1110": {
      "op": "SLT"
    },
    "1111": {
      "op": "ISZERO"
    },
    "1112": {
      "op": "PUSH2",
      "value": "0x45D"
    },
    "1115": {
      "op": "JUMPI"
    },
    "1116": {
      "op": "NOT"
    },
    "1117": {
      "op": "JUMPDEST"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1120": {
      "op": "SHR"
    },
    "1121": {
      "op": "ISZERO"
    },
    "1122": {
      "op": "PUSH2",
      "value": "0x46A"
    },
    "1125": {
      "op": "JUMPI"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1128": {
      "op": "DUP1"
    },
    "1129": {
      "op": "REVERT"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1132": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "POP",
      "path": "0"
    },
    "1133": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "POP",
      "path": "0"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1136": {
      "op": "CALLDATALOAD"
    },
    "1137": {
      "op": "DUP1"
    },
    "1138": {
      "op": "DUP1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1141": {
      "op": "DUP2"
    },
    "1142": {
      "op": "SLT"
    },
    "1143": {
      "op": "ISZERO"
    },
    "1144": {
      "op": "PUSH2",
      "value": "0x47D"
    },
    "1147": {
      "op": "JUMPI"
    },
    "1148": {
      "op": "NOT"
    },
    "1149": {
      "op": "JUMPDEST"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1152": {
      "op": "SHR"
    },
    "1153": {
      "op": "ISZERO"
    },
    "1154": {
      "op": "PUSH2",
      "value": "0x48A"
    },
    "1157": {
      "op": "JUMPI"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1160": {
      "op": "DUP1"
    },
    "1161": {
      "op": "REVERT"
    },
    "1162": {
      "op": "JUMPDEST"
    },
    "1163": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1164": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "POP",
      "path": "0"
    },
    "1165": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "POP",
      "path": "0"
    },
    "1166": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2511,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x0"
    },
    "1168": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2479,
        2504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1170": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2479,
        2507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1172": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2479,
        2507
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1173": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2479,
        2507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1175": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2479,
        2507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1177": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2479,
        2507
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1178": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2479,
        2523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1179": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2472,
        2523
      ],
      "op": "XOR",
      "path": "0"
    },
    "1180": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2472,
        2523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A4"
    },
    "1183": {
      "branch": 29,
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2472,
        2523
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1184": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2472,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1186": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2472,
        2523
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1187": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2472,
        2523
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1188": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2472,
        2523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1189": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2574,
        2575
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x4"
    },
    "1191": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1192": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1194": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1195": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "LT",
      "path": "0"
    },
    "1196": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B4"
    },
    "1199": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1200": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1202": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1203": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1204": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1205": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1207": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1209": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1210": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1212": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1214": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1215": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2548,
        2576
      ],
      "op": "ADD",
      "path": "0"
    },
    "1216": {
      "op": "SLOAD"
    },
    "1217": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1220": {
      "op": "MSTORE"
    },
    "1221": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2604,
        2605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1223": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1224": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1226": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1227": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "LT",
      "path": "0"
    },
    "1228": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D4"
    },
    "1231": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1232": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1234": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1235": {
      "dev": "Index out of range",
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1236": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1237": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2603
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1239": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1241": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1242": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1244": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1246": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1247": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2578,
        2606
      ],
      "op": "ADD",
      "path": "0"
    },
    "1248": {
      "op": "SLOAD"
    },
    "1249": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1252": {
      "op": "MSTORE"
    },
    "1253": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2608,
        2610
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1255": {
      "op": "CALLDATALOAD"
    },
    "1256": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1259": {
      "op": "MSTORE"
    },
    "1260": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1263": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1264": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1267": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1268": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "1271": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1272": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1274": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "PC",
      "path": "0"
    },
    "1275": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "ADD",
      "path": "0"
    },
    "1276": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77C"
    },
    "1279": {
      "fn": "PoolMockV2.get_dy_underlying",
      "jump": "i",
      "offset": [
        2535,
        2611
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1280": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1281": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "1284": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1285": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2535,
        2611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "1288": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2528,
        2611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1289": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2528,
        2611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1291": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2528,
        2611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1292": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2528,
        2611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1294": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2528,
        2611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1296": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2528,
        2611
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1297": {
      "fn": "PoolMockV2.get_dy_underlying",
      "offset": [
        2399,
        2611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1298": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBB8D331D"
    },
    "1303": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1304": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "EQ",
      "path": "0"
    },
    "1305": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1306": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x548"
    },
    "1309": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1310": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1311": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1312": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x528"
    },
    "1315": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1316": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1318": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1319": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1320": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1321": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4758,
        4760
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x4"
    },
    "1323": {
      "op": "CALLDATALOAD"
    },
    "1324": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4749,
        4755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1326": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4749,
        4760
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1327": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4782,
        4792
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x24"
    },
    "1329": {
      "op": "CALLDATALOAD"
    },
    "1330": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4765,
        4779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1332": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4765,
        4792
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1333": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4819,
        4834
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x44"
    },
    "1335": {
      "op": "CALLDATALOAD"
    },
    "1336": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4797,
        4816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1338": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4797,
        4834
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1339": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4855,
        4864
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x64"
    },
    "1341": {
      "op": "CALLDATALOAD"
    },
    "1342": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4839,
        4852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1344": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4839,
        4864
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1345": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4890,
        4904
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x84"
    },
    "1347": {
      "op": "CALLDATALOAD"
    },
    "1348": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4869,
        4887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1350": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4869,
        4904
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1351": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "STOP",
      "path": "0"
    },
    "1352": {
      "fn": "PoolMockV2._set_A",
      "offset": [
        4606,
        4904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1353": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEEE22ABB"
    },
    "1358": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1359": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "EQ",
      "path": "0"
    },
    "1360": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1361": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58F"
    },
    "1364": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1365": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1366": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1367": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55F"
    },
    "1370": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1371": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1373": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1374": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1375": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1378": {
      "op": "CALLDATALOAD"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1381": {
      "op": "SHR"
    },
    "1382": {
      "op": "ISZERO"
    },
    "1383": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56F"
    },
    "1386": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1387": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1389": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1390": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1391": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1392": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5089,
        5093
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x4"
    },
    "1394": {
      "op": "CALLDATALOAD"
    },
    "1395": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5078,
        5086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1397": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5078,
        5093
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1398": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5115,
        5125
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x24"
    },
    "1400": {
      "op": "CALLDATALOAD"
    },
    "1401": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5098,
        5112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1403": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5098,
        5125
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1404": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5148,
        5159
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x44"
    },
    "1406": {
      "op": "CALLDATALOAD"
    },
    "1407": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5130,
        5145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1409": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5130,
        5159
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1410": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5188,
        5205
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x64"
    },
    "1412": {
      "op": "CALLDATALOAD"
    },
    "1413": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5164,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1415": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5164,
        5205
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1416": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5230,
        5243
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x84"
    },
    "1418": {
      "op": "CALLDATALOAD"
    },
    "1419": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5210,
        5227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1421": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        5210,
        5243
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1422": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "STOP",
      "path": "0"
    },
    "1423": {
      "fn": "PoolMockV2._set_fees_and_owner",
      "offset": [
        4917,
        5243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1424": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAB203BC4"
    },
    "1429": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1430": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "EQ",
      "path": "0"
    },
    "1431": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1432": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D8"
    },
    "1435": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1436": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1437": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1438": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A6"
    },
    "1441": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1442": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1444": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1445": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1446": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1447": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5320
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0xE"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1456": {
      "op": "SHA3"
    },
    "1457": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5323,
        5336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1459": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1460": {
      "op": "CALLDATALOAD"
    },
    "1461": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1462": {
      "op": "SSTORE"
    },
    "1463": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1464": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1466": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "ADD",
      "path": "0"
    },
    "1467": {
      "op": "CALLDATALOAD"
    },
    "1468": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1470": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1471": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "ADD",
      "path": "0"
    },
    "1472": {
      "op": "SSTORE"
    },
    "1473": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1474": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1476": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "ADD",
      "path": "0"
    },
    "1477": {
      "op": "CALLDATALOAD"
    },
    "1478": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1480": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1481": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "ADD",
      "path": "0"
    },
    "1482": {
      "op": "SSTORE"
    },
    "1483": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1484": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1486": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "ADD",
      "path": "0"
    },
    "1487": {
      "op": "CALLDATALOAD"
    },
    "1488": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1490": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1491": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "ADD",
      "path": "0"
    },
    "1492": {
      "op": "SSTORE"
    },
    "1493": {
      "op": "POP"
    },
    "1494": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5306,
        5336
      ],
      "op": "POP",
      "path": "0"
    },
    "1495": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "STOP",
      "path": "0"
    },
    "1496": {
      "fn": "PoolMockV2._set_balances",
      "offset": [
        5256,
        5336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1497": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3BA68012"
    },
    "1502": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1503": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "EQ",
      "path": "0"
    },
    "1504": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1505": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F7"
    },
    "1508": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1509": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1510": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1511": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EF"
    },
    "1514": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1515": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1517": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1518": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1519": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1520": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5419,
        5425
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0x4"
    },
    "1522": {
      "op": "CALLDATALOAD"
    },
    "1523": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5394,
        5416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1525": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5394,
        5425
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1526": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "STOP",
      "path": "0"
    },
    "1527": {
      "fn": "PoolMockV2._set_virtual_price",
      "offset": [
        5349,
        5425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1528": {
      "offset": [
        519,
        534
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF446C1D0"
    },
    "1533": {
      "offset": [
        519,
        534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1534": {
      "offset": [
        519,
        534
      ],
      "op": "EQ",
      "path": "0"
    },
    "1535": {
      "offset": [
        519,
        534
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1536": {
      "offset": [
        519,
        534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61A"
    },
    "1539": {
      "offset": [
        519,
        534
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1540": {
      "offset": [
        519,
        534
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1541": {
      "offset": [
        519,
        534
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1542": {
      "offset": [
        519,
        534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E"
    },
    "1545": {
      "offset": [
        519,
        534
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1546": {
      "offset": [
        519,
        534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1548": {
      "offset": [
        519,
        534
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1549": {
      "offset": [
        519,
        534
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1550": {
      "offset": [
        519,
        534
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1553": {
      "offset": [
        519,
        534
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1554": {
      "offset": [
        519,
        534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1556": {
      "offset": [
        519,
        534
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1557": {
      "offset": [
        519,
        534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1559": {
      "offset": [
        519,
        534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1561": {
      "offset": [
        519,
        534
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1562": {
      "offset": [
        519,
        534
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1563": {
      "offset": [
        546,
        561
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x549491A"
    },
    "1568": {
      "offset": [
        546,
        561
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1569": {
      "offset": [
        546,
        561
      ],
      "op": "EQ",
      "path": "0"
    },
    "1570": {
      "offset": [
        546,
        561
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1571": {
      "offset": [
        546,
        561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63D"
    },
    "1574": {
      "offset": [
        546,
        561
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1575": {
      "offset": [
        546,
        561
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1576": {
      "offset": [
        546,
        561
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1577": {
      "offset": [
        546,
        561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x631"
    },
    "1580": {
      "offset": [
        546,
        561
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1581": {
      "offset": [
        546,
        561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1583": {
      "offset": [
        546,
        561
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1584": {
      "offset": [
        546,
        561
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1585": {
      "offset": [
        546,
        561
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1588": {
      "offset": [
        546,
        561
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1589": {
      "offset": [
        546,
        561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1591": {
      "offset": [
        546,
        561
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1592": {
      "offset": [
        546,
        561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1594": {
      "offset": [
        546,
        561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1596": {
      "offset": [
        546,
        561
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1597": {
      "offset": [
        546,
        561
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1598": {
      "offset": [
        578,
        593
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x208166C"
    },
    "1603": {
      "offset": [
        578,
        593
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1604": {
      "offset": [
        578,
        593
      ],
      "op": "EQ",
      "path": "0"
    },
    "1605": {
      "offset": [
        578,
        593
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1606": {
      "offset": [
        578,
        593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x660"
    },
    "1609": {
      "offset": [
        578,
        593
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1610": {
      "offset": [
        578,
        593
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1611": {
      "offset": [
        578,
        593
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1612": {
      "offset": [
        578,
        593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x654"
    },
    "1615": {
      "offset": [
        578,
        593
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1616": {
      "offset": [
        578,
        593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1618": {
      "offset": [
        578,
        593
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1619": {
      "offset": [
        578,
        593
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1620": {
      "offset": [
        578,
        593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1623": {
      "offset": [
        578,
        593
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1624": {
      "offset": [
        578,
        593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1626": {
      "offset": [
        578,
        593
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1627": {
      "offset": [
        578,
        593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1629": {
      "offset": [
        578,
        593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1631": {
      "offset": [
        578,
        593
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1632": {
      "offset": [
        578,
        593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1633": {
      "offset": [
        604,
        619
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB4B577AD"
    },
    "1638": {
      "offset": [
        604,
        619
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1639": {
      "offset": [
        604,
        619
      ],
      "op": "EQ",
      "path": "0"
    },
    "1640": {
      "offset": [
        604,
        619
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1641": {
      "offset": [
        604,
        619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x683"
    },
    "1644": {
      "offset": [
        604,
        619
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1645": {
      "offset": [
        604,
        619
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1646": {
      "offset": [
        604,
        619
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1647": {
      "offset": [
        604,
        619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x677"
    },
    "1650": {
      "offset": [
        604,
        619
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1651": {
      "offset": [
        604,
        619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1653": {
      "offset": [
        604,
        619
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1654": {
      "offset": [
        604,
        619
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1655": {
      "offset": [
        604,
        619
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "1658": {
      "offset": [
        604,
        619
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1659": {
      "offset": [
        604,
        619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1661": {
      "offset": [
        604,
        619
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1662": {
      "offset": [
        604,
        619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1664": {
      "offset": [
        604,
        619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1666": {
      "offset": [
        604,
        619
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1667": {
      "offset": [
        604,
        619
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1668": {
      "offset": [
        635,
        650
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1452288"
    },
    "1673": {
      "offset": [
        635,
        650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1674": {
      "offset": [
        635,
        650
      ],
      "op": "EQ",
      "path": "0"
    },
    "1675": {
      "offset": [
        635,
        650
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1676": {
      "offset": [
        635,
        650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A6"
    },
    "1679": {
      "offset": [
        635,
        650
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1680": {
      "offset": [
        635,
        650
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1681": {
      "offset": [
        635,
        650
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1682": {
      "offset": [
        635,
        650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69A"
    },
    "1685": {
      "offset": [
        635,
        650
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1686": {
      "offset": [
        635,
        650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1688": {
      "offset": [
        635,
        650
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1689": {
      "offset": [
        635,
        650
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1690": {
      "offset": [
        635,
        650
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "1693": {
      "offset": [
        635,
        650
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1694": {
      "offset": [
        635,
        650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1696": {
      "offset": [
        635,
        650
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1697": {
      "offset": [
        635,
        650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1699": {
      "offset": [
        635,
        650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1701": {
      "offset": [
        635,
        650
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1702": {
      "offset": [
        635,
        650
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1703": {
      "offset": [
        657,
        672
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDDCA3F43"
    },
    "1708": {
      "offset": [
        657,
        672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1709": {
      "offset": [
        657,
        672
      ],
      "op": "EQ",
      "path": "0"
    },
    "1710": {
      "offset": [
        657,
        672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1711": {
      "offset": [
        657,
        672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C9"
    },
    "1714": {
      "offset": [
        657,
        672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1715": {
      "offset": [
        657,
        672
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1716": {
      "offset": [
        657,
        672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1717": {
      "offset": [
        657,
        672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BD"
    },
    "1720": {
      "offset": [
        657,
        672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1721": {
      "offset": [
        657,
        672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1723": {
      "offset": [
        657,
        672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1724": {
      "offset": [
        657,
        672
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1725": {
      "offset": [
        657,
        672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "1728": {
      "offset": [
        657,
        672
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1729": {
      "offset": [
        657,
        672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1731": {
      "offset": [
        657,
        672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1732": {
      "offset": [
        657,
        672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1734": {
      "offset": [
        657,
        672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1736": {
      "offset": [
        657,
        672
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1737": {
      "offset": [
        657,
        672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1738": {
      "offset": [
        684,
        699
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFEE3F7F9"
    },
    "1743": {
      "offset": [
        684,
        699
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1744": {
      "offset": [
        684,
        699
      ],
      "op": "EQ",
      "path": "0"
    },
    "1745": {
      "offset": [
        684,
        699
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1746": {
      "offset": [
        684,
        699
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EC"
    },
    "1749": {
      "offset": [
        684,
        699
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1750": {
      "offset": [
        684,
        699
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1751": {
      "offset": [
        684,
        699
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1752": {
      "offset": [
        684,
        699
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E0"
    },
    "1755": {
      "offset": [
        684,
        699
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1756": {
      "offset": [
        684,
        699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1758": {
      "offset": [
        684,
        699
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1759": {
      "offset": [
        684,
        699
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1760": {
      "offset": [
        684,
        699
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "1763": {
      "offset": [
        684,
        699
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1764": {
      "offset": [
        684,
        699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1766": {
      "offset": [
        684,
        699
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1767": {
      "offset": [
        684,
        699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1769": {
      "offset": [
        684,
        699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1771": {
      "offset": [
        684,
        699
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1772": {
      "offset": [
        684,
        699
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1773": {
      "offset": [
        712,
        727
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5868DB"
    },
    "1778": {
      "offset": [
        712,
        727
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1779": {
      "offset": [
        712,
        727
      ],
      "op": "EQ",
      "path": "0"
    },
    "1780": {
      "offset": [
        712,
        727
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1781": {
      "offset": [
        712,
        727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F"
    },
    "1784": {
      "offset": [
        712,
        727
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1785": {
      "offset": [
        712,
        727
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1786": {
      "offset": [
        712,
        727
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1787": {
      "offset": [
        712,
        727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73"
    },
    "1790": {
      "offset": [
        712,
        727
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1791": {
      "offset": [
        712,
        727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1793": {
      "offset": [
        712,
        727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1794": {
      "offset": [
        712,
        727
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1795": {
      "offset": [
        712,
        727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "1798": {
      "offset": [
        712,
        727
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1799": {
      "offset": [
        712,
        727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1801": {
      "offset": [
        712,
        727
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1802": {
      "offset": [
        712,
        727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1804": {
      "offset": [
        712,
        727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1806": {
      "offset": [
        712,
        727
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1807": {
      "offset": [
        712,
        727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1808": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE3824462"
    },
    "1813": {
      "offset": [
        746,
        761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1814": {
      "offset": [
        746,
        761
      ],
      "op": "EQ",
      "path": "0"
    },
    "1815": {
      "offset": [
        746,
        761
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1816": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "1819": {
      "offset": [
        746,
        761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1820": {
      "offset": [
        746,
        761
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1821": {
      "offset": [
        746,
        761
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1822": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "1825": {
      "offset": [
        746,
        761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1826": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1828": {
      "offset": [
        746,
        761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1829": {
      "offset": [
        746,
        761
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1830": {
      "offset": [
        746,
        761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1833": {
      "offset": [
        746,
        761
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1834": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1836": {
      "offset": [
        746,
        761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1837": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1839": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1841": {
      "offset": [
        746,
        761
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1842": {
      "offset": [
        746,
        761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1843": {
      "offset": [
        776,
        791
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1EC0CDC1"
    },
    "1848": {
      "offset": [
        776,
        791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1849": {
      "offset": [
        776,
        791
      ],
      "op": "EQ",
      "path": "0"
    },
    "1850": {
      "offset": [
        776,
        791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1851": {
      "offset": [
        776,
        791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x755"
    },
    "1854": {
      "offset": [
        776,
        791
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1855": {
      "offset": [
        776,
        791
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1856": {
      "offset": [
        776,
        791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1857": {
      "offset": [
        776,
        791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x749"
    },
    "1860": {
      "offset": [
        776,
        791
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1861": {
      "offset": [
        776,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1863": {
      "offset": [
        776,
        791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1864": {
      "offset": [
        776,
        791
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1865": {
      "offset": [
        776,
        791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "1868": {
      "offset": [
        776,
        791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1869": {
      "offset": [
        776,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1871": {
      "offset": [
        776,
        791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1872": {
      "offset": [
        776,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1874": {
      "offset": [
        776,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1876": {
      "offset": [
        776,
        791
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1877": {
      "offset": [
        776,
        791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1878": {
      "offset": [
        811,
        826
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBB7B8B80"
    },
    "1883": {
      "offset": [
        811,
        826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1884": {
      "offset": [
        811,
        826
      ],
      "op": "EQ",
      "path": "0"
    },
    "1885": {
      "offset": [
        811,
        826
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1886": {
      "offset": [
        811,
        826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x778"
    },
    "1889": {
      "offset": [
        811,
        826
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1890": {
      "offset": [
        811,
        826
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1891": {
      "offset": [
        811,
        826
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1892": {
      "offset": [
        811,
        826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76C"
    },
    "1895": {
      "offset": [
        811,
        826
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1896": {
      "offset": [
        811,
        826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1898": {
      "offset": [
        811,
        826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1899": {
      "offset": [
        811,
        826
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1900": {
      "offset": [
        811,
        826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1903": {
      "offset": [
        811,
        826
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1904": {
      "offset": [
        811,
        826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1906": {
      "offset": [
        811,
        826
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1907": {
      "offset": [
        811,
        826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1909": {
      "offset": [
        811,
        826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1911": {
      "offset": [
        811,
        826
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1912": {
      "offset": [
        811,
        826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1913": {
      "op": "POP"
    },
    "1914": {
      "op": "JUMPDEST"
    },
    "1915": {
      "fn": "PoolMockV2.__default__",
      "offset": [
        5447,
        5474
      ],
      "op": "STOP",
      "path": "0"
    },
    "1916": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1664,
        2238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1917": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "1920": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1664,
        2238
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1921": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1924": {
      "op": "MSTORE"
    },
    "1925": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1928": {
      "op": "MSTORE"
    },
    "1929": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1932": {
      "op": "MSTORE"
    },
    "1933": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1664,
        2238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1935": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1664,
        2238
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1936": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1664,
        2238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "1939": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1664,
        2238
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1940": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1813,
        1855
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "1961": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1804,
        1809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "1964": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1804,
        1855
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1965": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1804,
        1855
      ],
      "op": "EQ",
      "path": "0"
    },
    "1966": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1801,
        1949
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1967": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1801,
        1949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BD"
    },
    "1970": {
      "branch": 43,
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1801,
        1949
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1971": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1883,
        1885
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x12"
    },
    "1973": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1865,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "1976": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1865,
        1885
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1977": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1801,
        1949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F8"
    },
    "1980": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1801,
        1949
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1981": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1801,
        1949
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1982": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x20"
    },
    "1984": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "1987": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1989": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "1994": {
      "op": "PUSH2",
      "value": "0x20"
    },
    "1997": {
      "op": "MSTORE"
    },
    "1998": {
      "op": "PUSH2",
      "value": "0x21C"
    },
    "2001": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1932,
        1937
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "2004": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2005": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "GAS",
      "path": "0"
    },
    "2006": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2007": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DF"
    },
    "2010": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2011": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2013": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2014": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2015": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2016": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2018": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2019": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "GT",
      "path": "0"
    },
    "2020": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EC"
    },
    "2023": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2024": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2026": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2027": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2028": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2029": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2031": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "POP",
      "path": "0"
    },
    "2032": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1922,
        1949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2035": {
      "op": "MLOAD"
    },
    "2036": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1904,
        1919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2039": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1904,
        1949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2040": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1801,
        1949
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2041": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1964,
        2006
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "2062": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1957,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2065": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1957,
        2006
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2066": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1957,
        2006
      ],
      "op": "EQ",
      "path": "0"
    },
    "2067": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1954,
        2094
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2068": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1954,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x822"
    },
    "2071": {
      "branch": 46,
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1954,
        2094
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2072": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2032,
        2034
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x12"
    },
    "2074": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2016,
        2029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2077": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2016,
        2034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2078": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1954,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85D"
    },
    "2081": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1954,
        2094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2082": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1954,
        2094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2083": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x20"
    },
    "2085": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2088": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2090": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "2095": {
      "op": "PUSH2",
      "value": "0x20"
    },
    "2098": {
      "op": "MSTORE"
    },
    "2099": {
      "op": "PUSH2",
      "value": "0x21C"
    },
    "2102": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2079,
        2082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2105": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2106": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "GAS",
      "path": "0"
    },
    "2107": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2108": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x844"
    },
    "2111": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2112": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2114": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2115": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2116": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2117": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2119": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2120": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "GT",
      "path": "0"
    },
    "2121": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x851"
    },
    "2124": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2125": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2127": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2128": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2129": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2130": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2132": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "POP",
      "path": "0"
    },
    "2133": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2069,
        2094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2136": {
      "op": "MLOAD"
    },
    "2137": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2053,
        2066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2140": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2053,
        2094
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2141": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1954,
        2094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2142": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2118
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0x180"
    },
    "2145": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2146": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4E"
    },
    "2148": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2126,
        2139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2151": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2152": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "LT",
      "path": "0"
    },
    "2153": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x871"
    },
    "2156": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2157": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2159": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2160": {
      "dev": "Integer overflow",
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2161": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2162": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2126,
        2139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2165": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2166": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2168": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2122,
        2139
      ],
      "op": "EXP",
      "path": "0"
    },
    "2169": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2170": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2171": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "MUL",
      "path": "0"
    },
    "2172": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2173": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2174": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2175": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2176": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2177": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "DIV",
      "path": "0"
    },
    "2178": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "EQ",
      "path": "0"
    },
    "2179": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "OR",
      "path": "0"
    },
    "2180": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88C"
    },
    "2183": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2184": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2186": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2187": {
      "dev": "Integer overflow",
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2188": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2189": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2190": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2191": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "POP",
      "path": "0"
    },
    "2192": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2193": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "POP",
      "path": "0"
    },
    "2194": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2195": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2140
      ],
      "op": "POP",
      "path": "0"
    },
    "2196": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4E"
    },
    "2198": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2148,
        2163
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2201": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2202": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "LT",
      "path": "0"
    },
    "2203": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A3"
    },
    "2206": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2207": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2209": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2210": {
      "dev": "Integer overflow",
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2211": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2212": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2148,
        2163
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2215": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2216": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2218": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2144,
        2163
      ],
      "op": "EXP",
      "path": "0"
    },
    "2219": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2220": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2221": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B5"
    },
    "2224": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2225": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2227": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2228": {
      "dev": "Division by zero",
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2229": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2230": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2231": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "DIV",
      "path": "0"
    },
    "2232": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2233": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "2234": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2235": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2115,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "2236": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2100,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2239": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1664,
        2238
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2240": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2188
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 50,
      "value": "0x20"
    },
    "2243": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2244": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2191,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2246": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2247": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2248": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2249": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "MUL",
      "path": "0"
    },
    "2250": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2251": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2252": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2253": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2254": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2255": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "DIV",
      "path": "0"
    },
    "2256": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "EQ",
      "path": "0"
    },
    "2257": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "OR",
      "path": "0"
    },
    "2258": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DA"
    },
    "2261": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2262": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2264": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2265": {
      "dev": "Integer overflow",
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2266": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2267": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2268": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2269": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "POP",
      "path": "0"
    },
    "2270": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2271": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "POP",
      "path": "0"
    },
    "2272": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2273": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2199
      ],
      "op": "POP",
      "path": "0"
    },
    "2274": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2202,
        2215
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x254BE40"
    },
    "2280": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2215
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2281": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2215
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2282": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2215
      ],
      "op": "DIV",
      "path": "0"
    },
    "2283": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2284": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2215
      ],
      "op": "POP",
      "path": "0"
    },
    "2285": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2286": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2185,
        2215
      ],
      "op": "POP",
      "path": "0"
    },
    "2287": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2169,
        2215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2290": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        1664,
        2238
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2291": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2231
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0x20"
    },
    "2294": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2295": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2234,
        2238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2298": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2299": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2300": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2301": {
      "op": "LT"
    },
    "2302": {
      "op": "ISZERO"
    },
    "2303": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "2306": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2307": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2309": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2310": {
      "dev": "Integer underflow",
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2311": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2312": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2313": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2314": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "SUB",
      "path": "0"
    },
    "2315": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2316": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "POP",
      "path": "0"
    },
    "2317": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2318": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2228,
        2238
      ],
      "op": "POP",
      "path": "0"
    },
    "2319": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2221,
        2238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2321": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2221,
        2238
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2322": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2221,
        2238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2324": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2221,
        2238
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2325": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2221,
        2238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2328": {
      "fn": "PoolMockV2._get_dy",
      "offset": [
        2221,
        2238
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2329": {
      "fn": "PoolMockV2._get_dy",
      "jump": "o",
      "offset": [
        2221,
        2238
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2330": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2624,
        3784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2331": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "2334": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2624,
        3784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2335": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "2338": {
      "op": "MSTORE"
    },
    "2339": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "2342": {
      "op": "MSTORE"
    },
    "2343": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "2346": {
      "op": "MSTORE"
    },
    "2347": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "2350": {
      "op": "MSTORE"
    },
    "2351": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "2354": {
      "op": "MSTORE"
    },
    "2355": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0x140"
    },
    "2358": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2359": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2362": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2363": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2366": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2367": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2370": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2371": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2374": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2375": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2378": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2379": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2382": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2383": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2748,
        2753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2386": {
      "op": "MLOAD"
    },
    "2387": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "2390": {
      "op": "MSTORE"
    },
    "2391": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2755,
        2758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2394": {
      "op": "MLOAD"
    },
    "2395": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "2398": {
      "op": "MSTORE"
    },
    "2399": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2760,
        2762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2402": {
      "op": "MLOAD"
    },
    "2403": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "2406": {
      "op": "MSTORE"
    },
    "2407": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2410": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2411": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "2414": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2415": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2418": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2419": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2421": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PC",
      "path": "0"
    },
    "2422": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "ADD",
      "path": "0"
    },
    "2423": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77C"
    },
    "2426": {
      "fn": "PoolMockV2._exchange",
      "jump": "i",
      "offset": [
        2735,
        2763
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2427": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2428": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C0"
    },
    "2431": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2432": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2435": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2436": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2439": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2440": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2443": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2444": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2447": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2448": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2451": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2452": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2455": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2456": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "2459": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2460": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2735,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C0"
    },
    "2463": {
      "op": "MLOAD"
    },
    "2464": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2721,
        2763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2467": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2624,
        3784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2468": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2781,
        2787
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 53,
      "value": "0x1C0"
    },
    "2471": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2775,
        2787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2472": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2775,
        2777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2475": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2775,
        2787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2476": {
      "op": "LT"
    },
    "2477": {
      "op": "ISZERO"
    },
    "2478": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2479": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2480": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1D"
    },
    "2483": {
      "branch": 54,
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2484": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8C379A0"
    },
    "2489": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2492": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2493": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2495": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "2498": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2499": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2E"
    },
    "2501": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2504": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2505": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x45786368616E676520726573756C74656420696E20666577657220636F696E73"
    },
    "2538": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "2541": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2542": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x207468616E206578706563746564000000000000000000"
    },
    "2575": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "2578": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2579": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2789,
        2837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2582": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "POP",
      "path": "0"
    },
    "2583": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x84"
    },
    "2585": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23C"
    },
    "2588": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2589": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2768,
        2837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2590": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2855,
        2897
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "2611": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2846,
        2851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2614": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2846,
        2897
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2615": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2843,
        3295
      ],
      "op": "XOR",
      "path": "0"
    },
    "2616": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2843,
        3295
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2617": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3264,
        3295
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0xB8E"
    },
    "2620": {
      "branch": 56,
      "fn": "PoolMockV2._exchange",
      "offset": [
        2843,
        3295
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2621": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 57,
      "value": "0x0"
    },
    "2623": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2995,
        3045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2625": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2995,
        3045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "2628": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2995,
        3045
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2629": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2995,
        3045
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x23B872DD0000000000000000000000000000"
    },
    "2662": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2995,
        3045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "2665": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2995,
        3045
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2666": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2995,
        3045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2671": {
      "op": "DUP1"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2674": {
      "op": "DUP5"
    },
    "2675": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "2678": {
      "op": "ADD"
    },
    "2679": {
      "op": "ADD"
    },
    "2680": {
      "op": "DUP3"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2683": {
      "op": "DUP6"
    },
    "2684": {
      "op": "ADD"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2689": {
      "op": "GAS"
    },
    "2690": {
      "op": "CALL"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "POP",
      "path": "0"
    },
    "2693": {
      "op": "DUP1"
    },
    "2694": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2695": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2696": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2697": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2698": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "POP",
      "path": "0"
    },
    "2699": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "POP",
      "path": "0"
    },
    "2700": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3071,
        3078
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "2703": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3063,
        3088
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2704": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2706": {
      "op": "DUP3"
    },
    "2707": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "2710": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2711": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2712": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2713": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2715": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2716": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2717": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2718": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "POP",
      "path": "0"
    },
    "2719": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3106,
        3128
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2720": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2722": {
      "op": "DUP3"
    },
    "2723": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "2726": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2727": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2728": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2729": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2731": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2732": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2733": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2734": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "POP",
      "path": "0"
    },
    "2735": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3154,
        3156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2738": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3146,
        3166
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2739": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2741": {
      "op": "DUP3"
    },
    "2742": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "2745": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2746": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2747": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2748": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2750": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2751": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "ADD",
      "path": "0"
    },
    "2752": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2753": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "POP",
      "path": "0"
    },
    "2754": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2755": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "2758": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2759": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "2762": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2763": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2971,
        3181
      ],
      "op": "POP",
      "path": "0"
    },
    "2764": {
      "op": "DUP1"
    },
    "2765": {
      "op": "MLOAD"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2768": {
      "op": "ADD"
    },
    "2769": {
      "op": "DUP1"
    },
    "2770": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "2773": {
      "op": "DUP3"
    },
    "2774": {
      "op": "DUP5"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2779": {
      "op": "GAS"
    },
    "2780": {
      "op": "CALL"
    },
    "2781": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "2784": {
      "op": "JUMPI"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2787": {
      "op": "DUP1"
    },
    "2788": {
      "op": "REVERT"
    },
    "2789": {
      "op": "JUMPDEST"
    },
    "2790": {
      "op": "POP"
    },
    "2791": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "POP",
      "path": "0"
    },
    "2792": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2794": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x480"
    },
    "2797": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "2800": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2801": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0"
    },
    "2804": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3514,
        3750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2806": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2952,
        2957
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2809": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2810": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "GAS",
      "path": "0"
    },
    "2811": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "CALL",
      "path": "0"
    },
    "2812": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "2815": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2816": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2818": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2819": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2820": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2821": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2823": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2824": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2825": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2826": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "GT",
      "path": "0"
    },
    "2827": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2828": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB15"
    },
    "2831": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2832": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2833": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB17"
    },
    "2836": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2837": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2838": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2839": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2840": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2841": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "POP",
      "path": "0"
    },
    "2842": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2843": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "POP",
      "path": "0"
    },
    "2844": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x460"
    },
    "2847": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2848": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2930,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x460"
    },
    "2851": {
      "op": "DUP1"
    },
    "2852": {
      "op": "MLOAD"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2855": {
      "op": "ADD"
    },
    "2856": {
      "op": "DUP1"
    },
    "2857": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2907,
        3220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2860": {
      "op": "DUP3"
    },
    "2861": {
      "op": "DUP5"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2866": {
      "op": "GAS"
    },
    "2867": {
      "op": "CALL"
    },
    "2868": {
      "op": "PUSH2",
      "value": "0xB3C"
    },
    "2871": {
      "op": "JUMPI"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2874": {
      "op": "DUP1"
    },
    "2875": {
      "op": "REVERT"
    },
    "2876": {
      "op": "JUMPDEST"
    },
    "2877": {
      "op": "POP"
    },
    "2878": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2907,
        3220
      ],
      "op": "POP",
      "path": "0"
    },
    "2879": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3249,
        3250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2881": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3236,
        3245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2884": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3232,
        3250
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2885": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3232,
        3250
      ],
      "op": "GT",
      "path": "0"
    },
    "2886": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3229,
        3295
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2887": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3264,
        3295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "2890": {
      "branch": 58,
      "fn": "PoolMockV2._exchange",
      "offset": [
        3229,
        3295
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2891": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3279,
        3288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2894": {
      "op": "DUP1"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "MLOAD"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2901": {
      "op": "DUP3"
    },
    "2902": {
      "op": "MLOAD"
    },
    "2903": {
      "op": "DUP1"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2906": {
      "op": "SWAP1"
    },
    "2907": {
      "op": "SGT"
    },
    "2908": {
      "op": "ISZERO"
    },
    "2909": {
      "op": "PUSH2",
      "value": "0xB65"
    },
    "2912": {
      "op": "JUMPI"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2915": {
      "op": "DUP1"
    },
    "2916": {
      "op": "REVERT"
    },
    "2917": {
      "op": "JUMPDEST"
    },
    "2918": {
      "op": "DUP1"
    },
    "2919": {
      "op": "SWAP2"
    },
    "2920": {
      "op": "SWAP1"
    },
    "2921": {
      "op": "SLT"
    },
    "2922": {
      "op": "ISZERO"
    },
    "2923": {
      "op": "PUSH2",
      "value": "0xB73"
    },
    "2926": {
      "op": "JUMPI"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2929": {
      "op": "DUP1"
    },
    "2930": {
      "op": "REVERT"
    },
    "2931": {
      "op": "JUMPDEST"
    },
    "2932": {
      "op": "DUP1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2935": {
      "op": "SUB"
    },
    "2936": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "2939": {
      "op": "EXP"
    },
    "2940": {
      "op": "DUP3"
    },
    "2941": {
      "op": "DIV"
    },
    "2942": {
      "op": "SWAP1"
    },
    "2943": {
      "op": "POP"
    },
    "2944": {
      "op": "SWAP1"
    },
    "2945": {
      "op": "POP"
    },
    "2946": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3271,
        3295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2947": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3271,
        3295
      ],
      "op": "POP",
      "path": "0"
    },
    "2948": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3271,
        3295
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2949": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3271,
        3295
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2950": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3264,
        3295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8E"
    },
    "2953": {
      "branch": 59,
      "fn": "PoolMockV2._exchange",
      "offset": [
        3264,
        3295
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2954": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3264,
        3295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2956": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3264,
        3295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2957": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3264,
        3295
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2958": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3264,
        3295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2959": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3311,
        3353
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "2980": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3304,
        3307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2983": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3304,
        3353
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2984": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3304,
        3353
      ],
      "op": "EQ",
      "path": "0"
    },
    "2985": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3301,
        3784
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2986": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3301,
        3784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBCE"
    },
    "2989": {
      "branch": 60,
      "fn": "PoolMockV2._exchange",
      "offset": [
        3301,
        3784
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2990": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x0"
    },
    "2992": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2994": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2996": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2998": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3377,
        3379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "3001": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3002": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3368,
        3375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "3005": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3006": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3008": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "CALL",
      "path": "0"
    },
    "3009": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC9"
    },
    "3012": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3013": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3015": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3016": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3017": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3363,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3018": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3753,
        3784
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 62,
      "value": "0xD4E"
    },
    "3021": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3301,
        3784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3022": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3301,
        3784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3023": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3409,
        3412
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 63,
      "value": "0x180"
    },
    "3026": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3027": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3028": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDC"
    },
    "3031": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3032": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3034": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3035": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3036": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3037": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3039": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3041": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3043": {
      "op": "PUSH4",
      "value": "0xF8C1412"
    },
    "3048": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "3051": {
      "op": "MSTORE"
    },
    "3052": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3432,
        3436
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3053": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "3056": {
      "op": "MSTORE"
    },
    "3057": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3438,
        3440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "3060": {
      "op": "MLOAD"
    },
    "3061": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "3064": {
      "op": "MSTORE"
    },
    "3065": {
      "op": "PUSH2",
      "value": "0x23C"
    },
    "3068": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3070": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3409,
        3412
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "3073": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3074": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "GAS",
      "path": "0"
    },
    "3075": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "CALL",
      "path": "0"
    },
    "3076": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "3079": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3080": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3082": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3083": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3084": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3085": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 64,
      "value": "0x0"
    },
    "3087": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3089": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "3092": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3536,
        3574
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3093": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xA959CBB0000000000000000000000000000"
    },
    "3126": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "3129": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3536,
        3574
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3130": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3135": {
      "op": "DUP1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3138": {
      "op": "DUP5"
    },
    "3139": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3142": {
      "op": "ADD"
    },
    "3143": {
      "op": "ADD"
    },
    "3144": {
      "op": "DUP3"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3147": {
      "op": "DUP6"
    },
    "3148": {
      "op": "ADD"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3153": {
      "op": "GAS"
    },
    "3154": {
      "op": "CALL"
    },
    "3155": {
      "op": "POP"
    },
    "3156": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "POP",
      "path": "0"
    },
    "3157": {
      "op": "DUP1"
    },
    "3158": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3159": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3160": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "ADD",
      "path": "0"
    },
    "3161": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3162": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "POP",
      "path": "0"
    },
    "3163": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "POP",
      "path": "0"
    },
    "3164": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3600,
        3607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "3167": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3592,
        3617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3168": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3170": {
      "op": "DUP3"
    },
    "3171": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3174": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "ADD",
      "path": "0"
    },
    "3175": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "ADD",
      "path": "0"
    },
    "3176": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3177": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3179": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3180": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "ADD",
      "path": "0"
    },
    "3181": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3182": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "POP",
      "path": "0"
    },
    "3183": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3643,
        3645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "3186": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3635,
        3655
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3187": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3189": {
      "op": "DUP3"
    },
    "3190": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3193": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "ADD",
      "path": "0"
    },
    "3194": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "ADD",
      "path": "0"
    },
    "3195": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3196": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3198": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3199": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "ADD",
      "path": "0"
    },
    "3200": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3201": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "POP",
      "path": "0"
    },
    "3202": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3203": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "3206": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3207": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "3210": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3211": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3512,
        3670
      ],
      "op": "POP",
      "path": "0"
    },
    "3212": {
      "op": "DUP1"
    },
    "3213": {
      "op": "MLOAD"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3216": {
      "op": "ADD"
    },
    "3217": {
      "op": "DUP1"
    },
    "3218": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "3221": {
      "op": "DUP3"
    },
    "3222": {
      "op": "DUP5"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3227": {
      "op": "GAS"
    },
    "3228": {
      "op": "CALL"
    },
    "3229": {
      "op": "PUSH2",
      "value": "0xCA5"
    },
    "3232": {
      "op": "JUMPI"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3235": {
      "op": "DUP1"
    },
    "3236": {
      "op": "REVERT"
    },
    "3237": {
      "op": "JUMPDEST"
    },
    "3238": {
      "op": "POP"
    },
    "3239": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "POP",
      "path": "0"
    },
    "3240": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3242": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x440"
    },
    "3245": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "3248": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3249": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "3252": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3514,
        3750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3254": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3495,
        3498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "3257": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3258": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "GAS",
      "path": "0"
    },
    "3259": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "CALL",
      "path": "0"
    },
    "3260": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC4"
    },
    "3263": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3264": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3266": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3267": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3268": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3269": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3271": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3272": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3273": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3274": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "GT",
      "path": "0"
    },
    "3275": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3276": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD5"
    },
    "3279": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3280": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3281": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD7"
    },
    "3284": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3285": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3286": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3287": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3288": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3289": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "POP",
      "path": "0"
    },
    "3290": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3291": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "POP",
      "path": "0"
    },
    "3292": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x420"
    },
    "3295": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3296": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3473,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x420"
    },
    "3299": {
      "op": "DUP1"
    },
    "3300": {
      "op": "MLOAD"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3303": {
      "op": "ADD"
    },
    "3304": {
      "op": "DUP1"
    },
    "3305": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3450,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3308": {
      "op": "DUP3"
    },
    "3309": {
      "op": "DUP5"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3314": {
      "op": "GAS"
    },
    "3315": {
      "op": "CALL"
    },
    "3316": {
      "op": "PUSH2",
      "value": "0xCFC"
    },
    "3319": {
      "op": "JUMPI"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3322": {
      "op": "DUP1"
    },
    "3323": {
      "op": "REVERT"
    },
    "3324": {
      "op": "JUMPDEST"
    },
    "3325": {
      "op": "POP"
    },
    "3326": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3399,
        3441
      ],
      "op": "POP",
      "path": "0"
    },
    "3327": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3738,
        3739
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3329": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3725,
        3734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3332": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3721,
        3739
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3333": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3721,
        3739
      ],
      "op": "GT",
      "path": "0"
    },
    "3334": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3718,
        3784
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3335": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3753,
        3784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4E"
    },
    "3338": {
      "branch": 65,
      "fn": "PoolMockV2._exchange",
      "offset": [
        3718,
        3784
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3339": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3768,
        3777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3342": {
      "op": "DUP1"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3345": {
      "op": "ADD"
    },
    "3346": {
      "op": "MLOAD"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3349": {
      "op": "DUP3"
    },
    "3350": {
      "op": "MLOAD"
    },
    "3351": {
      "op": "DUP1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3354": {
      "op": "SWAP1"
    },
    "3355": {
      "op": "SGT"
    },
    "3356": {
      "op": "ISZERO"
    },
    "3357": {
      "op": "PUSH2",
      "value": "0xD25"
    },
    "3360": {
      "op": "JUMPI"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3363": {
      "op": "DUP1"
    },
    "3364": {
      "op": "REVERT"
    },
    "3365": {
      "op": "JUMPDEST"
    },
    "3366": {
      "op": "DUP1"
    },
    "3367": {
      "op": "SWAP2"
    },
    "3368": {
      "op": "SWAP1"
    },
    "3369": {
      "op": "SLT"
    },
    "3370": {
      "op": "ISZERO"
    },
    "3371": {
      "op": "PUSH2",
      "value": "0xD33"
    },
    "3374": {
      "op": "JUMPI"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3377": {
      "op": "DUP1"
    },
    "3378": {
      "op": "REVERT"
    },
    "3379": {
      "op": "JUMPDEST"
    },
    "3380": {
      "op": "DUP1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3383": {
      "op": "SUB"
    },
    "3384": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "3387": {
      "op": "EXP"
    },
    "3388": {
      "op": "DUP3"
    },
    "3389": {
      "op": "DIV"
    },
    "3390": {
      "op": "SWAP1"
    },
    "3391": {
      "op": "POP"
    },
    "3392": {
      "op": "SWAP1"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3760,
        3784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3395": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3760,
        3784
      ],
      "op": "POP",
      "path": "0"
    },
    "3396": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3760,
        3784
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3397": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3760,
        3784
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3398": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3753,
        3784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4E"
    },
    "3401": {
      "branch": 66,
      "fn": "PoolMockV2._exchange",
      "offset": [
        3753,
        3784
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3402": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3753,
        3784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3404": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3753,
        3784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3405": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3753,
        3784
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3406": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        3753,
        3784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3407": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2624,
        3784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "3410": {
      "fn": "PoolMockV2._exchange",
      "offset": [
        2624,
        3784
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3411": {
      "fn": "PoolMockV2._exchange",
      "jump": "o",
      "offset": [
        2624,
        3784
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "a8bd229113136a004bf496c992c10aef5e73874c",
  "source": "# @version ^0.2.0\n\"\"\"\n@notice Mock Kagla pool for testing\n\"\"\"\n\nFEE_PRECISION: constant(uint256) = 10**10\n\ninterface ERC20Mock:\n    def decimals() -> uint256: view\n    def balanceOf(_addr: address) -> uint256: view\n    def transfer(_to: address, _amount: uint256) -> bool: nonpayable\n    def transferFrom(_from: address, _to: address, _amount: uint256) -> bool: nonpayable\n    def _mint_for_testing(_to: address, _amount: uint256): nonpayable\n\nn_coins: uint256\ncoin_list: address[4]\nunderlying_coin_list: address[4]\n\nA: public(uint256)\ninitial_A: public(uint256)\ninitial_A_time: public(uint256)\nfuture_A: public(uint256)\nfuture_A_time: public(uint256)\n\nfee: public(uint256)\nadmin_fee: public(uint256)\nfuture_fee: public(uint256)\nfuture_admin_fee: public(uint256)\nfuture_owner: public(address)\nget_virtual_price: public(uint256)\n\n_balances: uint256[4]\n\n@external\ndef __init__(\n    _n_coins: uint256,\n    _coin_list: address[4],\n    _underlying_coin_list: address[4],\n    _A: uint256,\n    _fee: uint256,\n):\n    self.n_coins = _n_coins\n    self.coin_list = _coin_list\n    self.underlying_coin_list = _underlying_coin_list\n    self.A = _A\n    self.fee = _fee\n    self.get_virtual_price = 10**18\n\n\n@external\n@view\ndef coins(i: uint256) -> address:\n    assert i < self.n_coins  # dev: exceeds n_coins\n    return self.coin_list[i]\n\n\n@external\n@view\ndef underlying_coins(i: uint256) -> address:\n    assert self.underlying_coin_list[0] != ZERO_ADDRESS\n    assert i < self.n_coins  # dev: exceeds n_coins\n    return self.underlying_coin_list[i]\n\n\n@external\n@view\ndef balances(i: uint256) -> uint256:\n    assert i < self.n_coins\n    return self._balances[i]\n\n\n@internal\n@view\ndef _get_dy(_from: address, _to: address, _dx: uint256) -> uint256:\n    _from_precision: uint256 = 0\n    _to_precision: uint256 = 0\n\n    if _from == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        _from_precision = 18\n    else:\n        _from_precision = ERC20Mock(_from).decimals()\n    if _to == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        _to_precision = 18\n    else:\n        _to_precision = ERC20Mock(_to).decimals()\n\n    _dy: uint256 = _dx * (10**_to_precision) / (10**_from_precision)\n    _fee: uint256 = _dy * self.fee / FEE_PRECISION\n\n    return _dy - _fee\n\n\n@external\n@view\ndef get_dy(i: int128, j: int128, dx: uint256) -> uint256:\n    return self._get_dy(self.coin_list[i], self.coin_list[j], dx)\n\n\n@external\n@view\ndef get_dy_underlying(i: int128, j: int128, dx: uint256) -> uint256:\n    assert self.underlying_coin_list[0] != ZERO_ADDRESS\n    return self._get_dy(self.underlying_coin_list[i], self.underlying_coin_list[j], dx)\n\n\n@internal\ndef _exchange(_sender: address, _from: address, _to: address, dx: uint256, min_dy: uint256):\n    dy: uint256 = self._get_dy(_from, _to, dx)\n    assert dy >= min_dy, \"Exchange resulted in fewer coins than expected\"\n\n    if _from != 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        _response: Bytes[32] = raw_call(\n            _from,\n            concat(\n                method_id(\"transferFrom(address,address,uint256)\"),\n                convert(_sender, bytes32),\n                convert(self, bytes32),\n                convert(dx, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(_response) > 0:\n            assert convert(_response, bool)\n\n    if _to == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        send(_sender, dy)\n    else:\n        ERC20Mock(_to)._mint_for_testing(self, dy)\n        _response: Bytes[32] = raw_call(\n            _to,\n            concat(\n                method_id(\"transfer(address,uint256)\"),\n                convert(_sender, bytes32),\n                convert(dy, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(_response) > 0:\n            assert convert(_response, bool)\n\n\n@external\n@payable\n@nonreentrant('lock')\ndef exchange(i: int128, j: int128, dx: uint256, min_dy: uint256):\n    _from: address = self.coin_list[i]\n    if _from == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        assert msg.value == dx\n    else:\n        assert msg.value == 0\n\n    self._exchange(msg.sender, _from, self.coin_list[j], dx, min_dy)\n\n\n@external\n@payable\n@nonreentrant('lock')\ndef exchange_underlying(i: int128, j: int128, dx: uint256, min_dy: uint256):\n    assert self.underlying_coin_list[0] != ZERO_ADDRESS\n\n    _from: address = self.underlying_coin_list[i]\n    if _from == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        assert msg.value == dx\n    else:\n        assert msg.value == 0\n\n    self._exchange(msg.sender, _from, self.underlying_coin_list[j], dx, min_dy)\n\n\n# testing functions\n\n@external\ndef _set_A(\n    _A: uint256,\n    _initial_A: uint256,\n    _initial_A_time: uint256,\n    _future_A: uint256,\n    _future_A_time: uint256\n):\n    self.A = _A\n    self.initial_A = _initial_A\n    self.initial_A_time = _initial_A_time\n    self.future_A = _future_A\n    self.future_A_time = _future_A_time\n\n\n@external\ndef _set_fees_and_owner(\n    _fee: uint256,\n    _admin_fee: uint256,\n    _future_fee: uint256,\n    _future_admin_fee: uint256,\n    _future_owner: address\n):\n    self.fee = _fee\n    self.admin_fee = _admin_fee\n    self.future_fee = _future_fee\n    self.future_admin_fee = _future_admin_fee\n    self.future_owner = _future_owner\n\n\n@external\ndef _set_balances(_new_balances: uint256[4]):\n    self._balances = _new_balances\n\n\n@external\ndef _set_virtual_price(_value: uint256):\n    self.get_virtual_price = _value\n\n\n@external\n@payable\ndef __default__():\n    pass\n",
  "sourceMap": "",
  "sourcePath": "contracts/testing/PoolMockV2.vy",
  "type": "contract"
}
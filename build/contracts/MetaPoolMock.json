{
  "abi": [
    {
      "inputs": [
        {
          "name": "_n_coins",
          "type": "uint256"
        },
        {
          "name": "_n_coins_underlying",
          "type": "uint256"
        },
        {
          "name": "_base_pool",
          "type": "address"
        },
        {
          "name": "_coin_list",
          "type": "address[4]"
        },
        {
          "name": "_base_coin_list",
          "type": "address[4]"
        },
        {
          "name": "_A",
          "type": "uint256"
        },
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "gas": 2184,
      "inputs": [
        {
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "coins",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2214,
      "inputs": [
        {
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "base_coins",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2244,
      "inputs": [
        {
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 7251,
      "inputs": [
        {
          "name": "i",
          "type": "int128"
        },
        {
          "name": "j",
          "type": "int128"
        },
        {
          "name": "dx",
          "type": "uint256"
        }
      ],
      "name": "get_dy",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 8977,
      "inputs": [
        {
          "name": "i",
          "type": "int128"
        },
        {
          "name": "j",
          "type": "int128"
        },
        {
          "name": "dx",
          "type": "uint256"
        }
      ],
      "name": "get_dy_underlying",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 107714,
      "inputs": [
        {
          "name": "i",
          "type": "int128"
        },
        {
          "name": "j",
          "type": "int128"
        },
        {
          "name": "dx",
          "type": "uint256"
        },
        {
          "name": "min_dy",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "gas": 109399,
      "inputs": [
        {
          "name": "i",
          "type": "int128"
        },
        {
          "name": "j",
          "type": "int128"
        },
        {
          "name": "dx",
          "type": "uint256"
        },
        {
          "name": "min_dy",
          "type": "uint256"
        }
      ],
      "name": "exchange_underlying",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "gas": 175588,
      "inputs": [
        {
          "name": "_A",
          "type": "uint256"
        },
        {
          "name": "_initial_A",
          "type": "uint256"
        },
        {
          "name": "_initial_A_time",
          "type": "uint256"
        },
        {
          "name": "_future_A",
          "type": "uint256"
        },
        {
          "name": "_future_A_time",
          "type": "uint256"
        }
      ],
      "name": "_set_A",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 175718,
      "inputs": [
        {
          "name": "_fee",
          "type": "uint256"
        },
        {
          "name": "_admin_fee",
          "type": "uint256"
        },
        {
          "name": "_future_fee",
          "type": "uint256"
        },
        {
          "name": "_future_admin_fee",
          "type": "uint256"
        },
        {
          "name": "_future_owner",
          "type": "address"
        }
      ],
      "name": "_set_fees_and_owner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 140807,
      "inputs": [
        {
          "name": "_new_balances",
          "type": "uint256[4]"
        }
      ],
      "name": "_set_balances",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 35642,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "_set_virtual_price",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "gas": 1508,
      "inputs": [],
      "name": "n_coins",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1538,
      "inputs": [],
      "name": "A",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1568,
      "inputs": [],
      "name": "initial_A",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1598,
      "inputs": [],
      "name": "initial_A_time",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1628,
      "inputs": [],
      "name": "future_A",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1658,
      "inputs": [],
      "name": "future_A_time",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1688,
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1718,
      "inputs": [],
      "name": "admin_fee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1748,
      "inputs": [],
      "name": "future_fee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1778,
      "inputs": [],
      "name": "future_admin_fee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1808,
      "inputs": [],
      "name": "future_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1838,
      "inputs": [],
      "name": "base_pool",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1868,
      "inputs": [],
      "name": "get_virtual_price",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/testing/MetaPoolMock.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 31,
              "end_lineno": 6,
              "id": "uint256",
              "lineno": 6,
              "node_id": 9,
              "src": "91:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 15,
          "end_col_offset": 32,
          "end_lineno": 6,
          "func": {
            "ast_type": "Name",
            "col_offset": 15,
            "end_col_offset": 23,
            "end_lineno": 6,
            "id": "constant",
            "lineno": 6,
            "node_id": 7,
            "src": "82:8:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 6,
          "node_id": 6,
          "src": "82:17:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 41,
        "end_lineno": 6,
        "lineno": 6,
        "node_id": 3,
        "simple": 1,
        "src": "67:41:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 13,
          "end_lineno": 6,
          "id": "FEE_PRECISION",
          "lineno": 6,
          "node_id": 4,
          "src": "67:13:3"
        },
        "value": {
          "ast_type": "BinOp",
          "col_offset": 35,
          "end_col_offset": 41,
          "end_lineno": 6,
          "left": {
            "ast_type": "Int",
            "col_offset": 35,
            "end_col_offset": 37,
            "end_lineno": 6,
            "lineno": 6,
            "node_id": 12,
            "src": "102:2:3",
            "value": 10
          },
          "lineno": 6,
          "node_id": 11,
          "op": {
            "ast_type": "Pow",
            "col_offset": 35,
            "end_col_offset": 41,
            "end_lineno": 6,
            "lineno": 6,
            "node_id": 473,
            "src": "102:6:3"
          },
          "right": {
            "ast_type": "Int",
            "col_offset": 39,
            "end_col_offset": 41,
            "end_lineno": 6,
            "lineno": 6,
            "node_id": 14,
            "src": "106:2:3",
            "value": 10
          },
          "src": "102:6:3"
        }
      },
      {
        "ast_type": "InterfaceDef",
        "body": [
          {
            "args": {
              "args": [],
              "ast_type": "arguments",
              "col_offset": 4,
              "default": null,
              "defaults": [],
              "end_col_offset": 7,
              "end_lineno": 9,
              "lineno": 9,
              "node_id": 17,
              "src": "135:3:3"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 31,
                "end_col_offset": 35,
                "end_lineno": 9,
                "lineno": 9,
                "node_id": 18,
                "src": "162:4:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 35,
                  "end_lineno": 9,
                  "id": "view",
                  "lineno": 9,
                  "node_id": 19,
                  "src": "162:4:3"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 35,
            "end_lineno": 9,
            "lineno": 9,
            "name": "decimals",
            "node_id": 16,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 22,
              "end_col_offset": 29,
              "end_lineno": 9,
              "id": "uint256",
              "lineno": 9,
              "node_id": 21,
              "src": "153:7:3"
            },
            "src": "135:31:3"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 25,
                    "end_col_offset": 32,
                    "end_lineno": 10,
                    "id": "address",
                    "lineno": 10,
                    "node_id": 26,
                    "src": "192:7:3"
                  },
                  "arg": "_addr",
                  "ast_type": "arg",
                  "col_offset": 18,
                  "end_col_offset": 32,
                  "end_lineno": 10,
                  "lineno": 10,
                  "node_id": 25,
                  "src": "185:14:3"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 18,
              "default": null,
              "defaults": [],
              "end_col_offset": 32,
              "end_lineno": 10,
              "lineno": 10,
              "node_id": 24,
              "src": "185:14:3"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 46,
                "end_col_offset": 50,
                "end_lineno": 10,
                "lineno": 10,
                "node_id": 28,
                "src": "213:4:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 46,
                  "end_col_offset": 50,
                  "end_lineno": 10,
                  "id": "view",
                  "lineno": 10,
                  "node_id": 29,
                  "src": "213:4:3"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 50,
            "end_lineno": 10,
            "lineno": 10,
            "name": "balanceOf",
            "node_id": 23,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 37,
              "end_col_offset": 44,
              "end_lineno": 10,
              "id": "uint256",
              "lineno": 10,
              "node_id": 31,
              "src": "204:7:3"
            },
            "src": "171:46:3"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 22,
                    "end_col_offset": 29,
                    "end_lineno": 11,
                    "id": "address",
                    "lineno": 11,
                    "node_id": 36,
                    "src": "240:7:3"
                  },
                  "arg": "_to",
                  "ast_type": "arg",
                  "col_offset": 17,
                  "end_col_offset": 29,
                  "end_lineno": 11,
                  "lineno": 11,
                  "node_id": 35,
                  "src": "235:12:3"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 40,
                    "end_col_offset": 47,
                    "end_lineno": 11,
                    "id": "uint256",
                    "lineno": 11,
                    "node_id": 39,
                    "src": "258:7:3"
                  },
                  "arg": "_amount",
                  "ast_type": "arg",
                  "col_offset": 31,
                  "end_col_offset": 47,
                  "end_lineno": 11,
                  "lineno": 11,
                  "node_id": 38,
                  "src": "249:16:3"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 17,
              "default": null,
              "defaults": [],
              "end_col_offset": 47,
              "end_lineno": 11,
              "lineno": 11,
              "node_id": 34,
              "src": "235:30:3"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 58,
                "end_col_offset": 68,
                "end_lineno": 11,
                "lineno": 11,
                "node_id": 41,
                "src": "276:10:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 58,
                  "end_col_offset": 68,
                  "end_lineno": 11,
                  "id": "nonpayable",
                  "lineno": 11,
                  "node_id": 42,
                  "src": "276:10:3"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 68,
            "end_lineno": 11,
            "lineno": 11,
            "name": "transfer",
            "node_id": 33,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 52,
              "end_col_offset": 56,
              "end_lineno": 11,
              "id": "bool",
              "lineno": 11,
              "node_id": 44,
              "src": "270:4:3"
            },
            "src": "222:64:3"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 28,
                    "end_col_offset": 35,
                    "end_lineno": 12,
                    "id": "address",
                    "lineno": 12,
                    "node_id": 49,
                    "src": "315:7:3"
                  },
                  "arg": "_from",
                  "ast_type": "arg",
                  "col_offset": 21,
                  "end_col_offset": 35,
                  "end_lineno": 12,
                  "lineno": 12,
                  "node_id": 48,
                  "src": "308:14:3"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 42,
                    "end_col_offset": 49,
                    "end_lineno": 12,
                    "id": "address",
                    "lineno": 12,
                    "node_id": 52,
                    "src": "329:7:3"
                  },
                  "arg": "_to",
                  "ast_type": "arg",
                  "col_offset": 37,
                  "end_col_offset": 49,
                  "end_lineno": 12,
                  "lineno": 12,
                  "node_id": 51,
                  "src": "324:12:3"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 60,
                    "end_col_offset": 67,
                    "end_lineno": 12,
                    "id": "uint256",
                    "lineno": 12,
                    "node_id": 55,
                    "src": "347:7:3"
                  },
                  "arg": "_amount",
                  "ast_type": "arg",
                  "col_offset": 51,
                  "end_col_offset": 67,
                  "end_lineno": 12,
                  "lineno": 12,
                  "node_id": 54,
                  "src": "338:16:3"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 21,
              "default": null,
              "defaults": [],
              "end_col_offset": 67,
              "end_lineno": 12,
              "lineno": 12,
              "node_id": 47,
              "src": "308:46:3"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 78,
                "end_col_offset": 88,
                "end_lineno": 12,
                "lineno": 12,
                "node_id": 57,
                "src": "365:10:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 78,
                  "end_col_offset": 88,
                  "end_lineno": 12,
                  "id": "nonpayable",
                  "lineno": 12,
                  "node_id": 58,
                  "src": "365:10:3"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 88,
            "end_lineno": 12,
            "lineno": 12,
            "name": "transferFrom",
            "node_id": 46,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 72,
              "end_col_offset": 76,
              "end_lineno": 12,
              "id": "bool",
              "lineno": 12,
              "node_id": 60,
              "src": "359:4:3"
            },
            "src": "291:84:3"
          },
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 31,
                    "end_col_offset": 38,
                    "end_lineno": 13,
                    "id": "address",
                    "lineno": 13,
                    "node_id": 65,
                    "src": "407:7:3"
                  },
                  "arg": "_to",
                  "ast_type": "arg",
                  "col_offset": 26,
                  "end_col_offset": 38,
                  "end_lineno": 13,
                  "lineno": 13,
                  "node_id": 64,
                  "src": "402:12:3"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 49,
                    "end_col_offset": 56,
                    "end_lineno": 13,
                    "id": "uint256",
                    "lineno": 13,
                    "node_id": 68,
                    "src": "425:7:3"
                  },
                  "arg": "_amount",
                  "ast_type": "arg",
                  "col_offset": 40,
                  "end_col_offset": 56,
                  "end_lineno": 13,
                  "lineno": 13,
                  "node_id": 67,
                  "src": "416:16:3"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 26,
              "default": null,
              "defaults": [],
              "end_col_offset": 56,
              "end_lineno": 13,
              "lineno": 13,
              "node_id": 63,
              "src": "402:30:3"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 59,
                "end_col_offset": 69,
                "end_lineno": 13,
                "lineno": 13,
                "node_id": 70,
                "src": "435:10:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 59,
                  "end_col_offset": 69,
                  "end_lineno": 13,
                  "id": "nonpayable",
                  "lineno": 13,
                  "node_id": 71,
                  "src": "435:10:3"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 69,
            "end_lineno": 13,
            "lineno": 13,
            "name": "_mint_for_testing",
            "node_id": 62,
            "pos": null,
            "returns": null,
            "src": "380:65:3"
          }
        ],
        "col_offset": 0,
        "end_col_offset": 69,
        "end_lineno": 13,
        "lineno": 8,
        "name": "ERC20Mock",
        "node_id": 15,
        "src": "110:335:3"
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 16,
              "end_col_offset": 23,
              "end_lineno": 15,
              "id": "uint256",
              "lineno": 15,
              "node_id": 79,
              "src": "463:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 9,
          "end_col_offset": 24,
          "end_lineno": 15,
          "func": {
            "ast_type": "Name",
            "col_offset": 9,
            "end_col_offset": 15,
            "end_lineno": 15,
            "id": "public",
            "lineno": 15,
            "node_id": 77,
            "src": "456:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 15,
          "node_id": 76,
          "src": "456:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 24,
        "end_lineno": 15,
        "lineno": 15,
        "node_id": 73,
        "simple": 1,
        "src": "447:24:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 7,
          "end_lineno": 15,
          "id": "n_coins",
          "lineno": 15,
          "node_id": 74,
          "src": "447:7:3"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 20,
          "end_col_offset": 27,
          "end_lineno": 16,
          "id": "uint256",
          "lineno": 16,
          "node_id": 84,
          "src": "492:7:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 27,
        "end_lineno": 16,
        "lineno": 16,
        "node_id": 81,
        "simple": 1,
        "src": "472:27:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 18,
          "end_lineno": 16,
          "id": "n_coins_underlying",
          "lineno": 16,
          "node_id": 82,
          "src": "472:18:3"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 11,
          "end_col_offset": 21,
          "end_lineno": 17,
          "lineno": 17,
          "node_id": 89,
          "slice": {
            "ast_type": "Index",
            "col_offset": 19,
            "end_col_offset": 20,
            "end_lineno": 17,
            "lineno": 17,
            "node_id": 92,
            "src": "519:1:3",
            "value": {
              "ast_type": "Int",
              "col_offset": 19,
              "end_col_offset": 20,
              "end_lineno": 17,
              "lineno": 17,
              "node_id": 93,
              "src": "519:1:3",
              "value": 4
            }
          },
          "src": "511:10:3",
          "value": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 18,
            "end_lineno": 17,
            "id": "address",
            "lineno": 17,
            "node_id": 90,
            "src": "511:7:3"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 21,
        "end_lineno": 17,
        "lineno": 17,
        "node_id": 86,
        "simple": 1,
        "src": "500:21:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 17,
          "id": "coin_list",
          "lineno": 17,
          "node_id": 87,
          "src": "500:9:3"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 16,
          "end_col_offset": 26,
          "end_lineno": 18,
          "lineno": 18,
          "node_id": 98,
          "slice": {
            "ast_type": "Index",
            "col_offset": 24,
            "end_col_offset": 25,
            "end_lineno": 18,
            "lineno": 18,
            "node_id": 101,
            "src": "546:1:3",
            "value": {
              "ast_type": "Int",
              "col_offset": 24,
              "end_col_offset": 25,
              "end_lineno": 18,
              "lineno": 18,
              "node_id": 102,
              "src": "546:1:3",
              "value": 4
            }
          },
          "src": "538:10:3",
          "value": {
            "ast_type": "Name",
            "col_offset": 16,
            "end_col_offset": 23,
            "end_lineno": 18,
            "id": "address",
            "lineno": 18,
            "node_id": 99,
            "src": "538:7:3"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 18,
        "lineno": 18,
        "node_id": 95,
        "simple": 1,
        "src": "522:26:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 14,
          "end_lineno": 18,
          "id": "base_coin_list",
          "lineno": 18,
          "node_id": 96,
          "src": "522:14:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 10,
              "end_col_offset": 17,
              "end_lineno": 20,
              "id": "uint256",
              "lineno": 20,
              "node_id": 110,
              "src": "560:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 3,
          "end_col_offset": 18,
          "end_lineno": 20,
          "func": {
            "ast_type": "Name",
            "col_offset": 3,
            "end_col_offset": 9,
            "end_lineno": 20,
            "id": "public",
            "lineno": 20,
            "node_id": 108,
            "src": "553:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 20,
          "node_id": 107,
          "src": "553:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 20,
        "lineno": 20,
        "node_id": 104,
        "simple": 1,
        "src": "550:18:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 1,
          "end_lineno": 20,
          "id": "A",
          "lineno": 20,
          "node_id": 105,
          "src": "550:1:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 18,
              "end_col_offset": 25,
              "end_lineno": 21,
              "id": "uint256",
              "lineno": 21,
              "node_id": 118,
              "src": "587:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 11,
          "end_col_offset": 26,
          "end_lineno": 21,
          "func": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 17,
            "end_lineno": 21,
            "id": "public",
            "lineno": 21,
            "node_id": 116,
            "src": "580:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 21,
          "node_id": 115,
          "src": "580:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 21,
        "lineno": 21,
        "node_id": 112,
        "simple": 1,
        "src": "569:26:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 21,
          "id": "initial_A",
          "lineno": 21,
          "node_id": 113,
          "src": "569:9:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 23,
              "end_col_offset": 30,
              "end_lineno": 22,
              "id": "uint256",
              "lineno": 22,
              "node_id": 126,
              "src": "619:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 16,
          "end_col_offset": 31,
          "end_lineno": 22,
          "func": {
            "ast_type": "Name",
            "col_offset": 16,
            "end_col_offset": 22,
            "end_lineno": 22,
            "id": "public",
            "lineno": 22,
            "node_id": 124,
            "src": "612:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 22,
          "node_id": 123,
          "src": "612:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 31,
        "end_lineno": 22,
        "lineno": 22,
        "node_id": 120,
        "simple": 1,
        "src": "596:31:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 14,
          "end_lineno": 22,
          "id": "initial_A_time",
          "lineno": 22,
          "node_id": 121,
          "src": "596:14:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 17,
              "end_col_offset": 24,
              "end_lineno": 23,
              "id": "uint256",
              "lineno": 23,
              "node_id": 134,
              "src": "645:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 10,
          "end_col_offset": 25,
          "end_lineno": 23,
          "func": {
            "ast_type": "Name",
            "col_offset": 10,
            "end_col_offset": 16,
            "end_lineno": 23,
            "id": "public",
            "lineno": 23,
            "node_id": 132,
            "src": "638:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 23,
          "node_id": 131,
          "src": "638:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 25,
        "end_lineno": 23,
        "lineno": 23,
        "node_id": 128,
        "simple": 1,
        "src": "628:25:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 23,
          "id": "future_A",
          "lineno": 23,
          "node_id": 129,
          "src": "628:8:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 22,
              "end_col_offset": 29,
              "end_lineno": 24,
              "id": "uint256",
              "lineno": 24,
              "node_id": 142,
              "src": "676:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 15,
          "end_col_offset": 30,
          "end_lineno": 24,
          "func": {
            "ast_type": "Name",
            "col_offset": 15,
            "end_col_offset": 21,
            "end_lineno": 24,
            "id": "public",
            "lineno": 24,
            "node_id": 140,
            "src": "669:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 24,
          "node_id": 139,
          "src": "669:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 30,
        "end_lineno": 24,
        "lineno": 24,
        "node_id": 136,
        "simple": 1,
        "src": "654:30:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 13,
          "end_lineno": 24,
          "id": "future_A_time",
          "lineno": 24,
          "node_id": 137,
          "src": "654:13:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 12,
              "end_col_offset": 19,
              "end_lineno": 26,
              "id": "uint256",
              "lineno": 26,
              "node_id": 150,
              "src": "698:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 5,
          "end_col_offset": 20,
          "end_lineno": 26,
          "func": {
            "ast_type": "Name",
            "col_offset": 5,
            "end_col_offset": 11,
            "end_lineno": 26,
            "id": "public",
            "lineno": 26,
            "node_id": 148,
            "src": "691:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 26,
          "node_id": 147,
          "src": "691:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 20,
        "end_lineno": 26,
        "lineno": 26,
        "node_id": 144,
        "simple": 1,
        "src": "686:20:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 3,
          "end_lineno": 26,
          "id": "fee",
          "lineno": 26,
          "node_id": 145,
          "src": "686:3:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 18,
              "end_col_offset": 25,
              "end_lineno": 27,
              "id": "uint256",
              "lineno": 27,
              "node_id": 158,
              "src": "725:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 11,
          "end_col_offset": 26,
          "end_lineno": 27,
          "func": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 17,
            "end_lineno": 27,
            "id": "public",
            "lineno": 27,
            "node_id": 156,
            "src": "718:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 27,
          "node_id": 155,
          "src": "718:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 27,
        "lineno": 27,
        "node_id": 152,
        "simple": 1,
        "src": "707:26:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 27,
          "id": "admin_fee",
          "lineno": 27,
          "node_id": 153,
          "src": "707:9:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 26,
              "end_lineno": 28,
              "id": "uint256",
              "lineno": 28,
              "node_id": 166,
              "src": "753:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 12,
          "end_col_offset": 27,
          "end_lineno": 28,
          "func": {
            "ast_type": "Name",
            "col_offset": 12,
            "end_col_offset": 18,
            "end_lineno": 28,
            "id": "public",
            "lineno": 28,
            "node_id": 164,
            "src": "746:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 28,
          "node_id": 163,
          "src": "746:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 27,
        "end_lineno": 28,
        "lineno": 28,
        "node_id": 160,
        "simple": 1,
        "src": "734:27:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 28,
          "id": "future_fee",
          "lineno": 28,
          "node_id": 161,
          "src": "734:10:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 25,
              "end_col_offset": 32,
              "end_lineno": 29,
              "id": "uint256",
              "lineno": 29,
              "node_id": 174,
              "src": "787:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 18,
          "end_col_offset": 33,
          "end_lineno": 29,
          "func": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 24,
            "end_lineno": 29,
            "id": "public",
            "lineno": 29,
            "node_id": 172,
            "src": "780:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 29,
          "node_id": 171,
          "src": "780:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 33,
        "end_lineno": 29,
        "lineno": 29,
        "node_id": 168,
        "simple": 1,
        "src": "762:33:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 16,
          "end_lineno": 29,
          "id": "future_admin_fee",
          "lineno": 29,
          "node_id": 169,
          "src": "762:16:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 28,
              "end_lineno": 30,
              "id": "address",
              "lineno": 30,
              "node_id": 182,
              "src": "817:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 14,
          "end_col_offset": 29,
          "end_lineno": 30,
          "func": {
            "ast_type": "Name",
            "col_offset": 14,
            "end_col_offset": 20,
            "end_lineno": 30,
            "id": "public",
            "lineno": 30,
            "node_id": 180,
            "src": "810:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 30,
          "node_id": 179,
          "src": "810:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 29,
        "end_lineno": 30,
        "lineno": 30,
        "node_id": 176,
        "simple": 1,
        "src": "796:29:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 12,
          "end_lineno": 30,
          "id": "future_owner",
          "lineno": 30,
          "node_id": 177,
          "src": "796:12:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 18,
              "end_col_offset": 25,
              "end_lineno": 32,
              "id": "address",
              "lineno": 32,
              "node_id": 190,
              "src": "845:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 11,
          "end_col_offset": 26,
          "end_lineno": 32,
          "func": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 17,
            "end_lineno": 32,
            "id": "public",
            "lineno": 32,
            "node_id": 188,
            "src": "838:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 32,
          "node_id": 187,
          "src": "838:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 32,
        "lineno": 32,
        "node_id": 184,
        "simple": 1,
        "src": "827:26:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 32,
          "id": "base_pool",
          "lineno": 32,
          "node_id": 185,
          "src": "827:9:3"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 26,
              "end_col_offset": 33,
              "end_lineno": 33,
              "id": "uint256",
              "lineno": 33,
              "node_id": 198,
              "src": "880:7:3"
            }
          ],
          "ast_type": "Call",
          "col_offset": 19,
          "end_col_offset": 34,
          "end_lineno": 33,
          "func": {
            "ast_type": "Name",
            "col_offset": 19,
            "end_col_offset": 25,
            "end_lineno": 33,
            "id": "public",
            "lineno": 33,
            "node_id": 196,
            "src": "873:6:3"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 33,
          "node_id": 195,
          "src": "873:15:3"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 34,
        "end_lineno": 33,
        "lineno": 33,
        "node_id": 192,
        "simple": 1,
        "src": "854:34:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 17,
          "end_lineno": 33,
          "id": "get_virtual_price",
          "lineno": 33,
          "node_id": 193,
          "src": "854:17:3"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 11,
          "end_col_offset": 21,
          "end_lineno": 35,
          "lineno": 35,
          "node_id": 203,
          "slice": {
            "ast_type": "Index",
            "col_offset": 19,
            "end_col_offset": 20,
            "end_lineno": 35,
            "lineno": 35,
            "node_id": 206,
            "src": "909:1:3",
            "value": {
              "ast_type": "Int",
              "col_offset": 19,
              "end_col_offset": 20,
              "end_lineno": 35,
              "lineno": 35,
              "node_id": 207,
              "src": "909:1:3",
              "value": 4
            }
          },
          "src": "901:10:3",
          "value": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 18,
            "end_lineno": 35,
            "id": "uint256",
            "lineno": 35,
            "node_id": 204,
            "src": "901:7:3"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 21,
        "end_lineno": 35,
        "lineno": 35,
        "node_id": 200,
        "simple": 1,
        "src": "890:21:3",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 35,
          "id": "_balances",
          "lineno": 35,
          "node_id": 201,
          "src": "890:9:3"
        },
        "value": null
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 39,
                "id": "uint256",
                "lineno": 39,
                "node_id": 212,
                "src": "951:7:3"
              },
              "arg": "_n_coins",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 21,
              "end_lineno": 39,
              "lineno": 39,
              "node_id": 211,
              "src": "941:17:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 32,
                "end_lineno": 40,
                "id": "uint256",
                "lineno": 40,
                "node_id": 215,
                "src": "985:7:3"
              },
              "arg": "_n_coins_underlying",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 32,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 214,
              "src": "964:28:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 23,
                "end_lineno": 41,
                "id": "address",
                "lineno": 41,
                "node_id": 218,
                "src": "1010:7:3"
              },
              "arg": "_base_pool",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 41,
              "lineno": 41,
              "node_id": 217,
              "src": "998:19:3"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 16,
                "end_col_offset": 26,
                "end_lineno": 42,
                "lineno": 42,
                "node_id": 221,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 24,
                  "end_col_offset": 25,
                  "end_lineno": 42,
                  "lineno": 42,
                  "node_id": 224,
                  "src": "1043:1:3",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 24,
                    "end_col_offset": 25,
                    "end_lineno": 42,
                    "lineno": 42,
                    "node_id": 225,
                    "src": "1043:1:3",
                    "value": 4
                  }
                },
                "src": "1035:10:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 16,
                  "end_col_offset": 23,
                  "end_lineno": 42,
                  "id": "address",
                  "lineno": 42,
                  "node_id": 222,
                  "src": "1035:7:3"
                }
              },
              "arg": "_coin_list",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 42,
              "lineno": 42,
              "node_id": 220,
              "src": "1023:22:3"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 21,
                "end_col_offset": 31,
                "end_lineno": 43,
                "lineno": 43,
                "node_id": 228,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 29,
                  "end_col_offset": 30,
                  "end_lineno": 43,
                  "lineno": 43,
                  "node_id": 231,
                  "src": "1076:1:3",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 29,
                    "end_col_offset": 30,
                    "end_lineno": 43,
                    "lineno": 43,
                    "node_id": 232,
                    "src": "1076:1:3",
                    "value": 4
                  }
                },
                "src": "1068:10:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 28,
                  "end_lineno": 43,
                  "id": "address",
                  "lineno": 43,
                  "node_id": 229,
                  "src": "1068:7:3"
                }
              },
              "arg": "_base_coin_list",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 31,
              "end_lineno": 43,
              "lineno": 43,
              "node_id": 227,
              "src": "1051:27:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 15,
                "end_lineno": 44,
                "id": "uint256",
                "lineno": 44,
                "node_id": 235,
                "src": "1088:7:3"
              },
              "arg": "_A",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 44,
              "lineno": 44,
              "node_id": 234,
              "src": "1084:11:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 10,
                "end_col_offset": 17,
                "end_lineno": 45,
                "id": "uint256",
                "lineno": 45,
                "node_id": 238,
                "src": "1107:7:3"
              },
              "arg": "_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 45,
              "lineno": 45,
              "node_id": 237,
              "src": "1101:13:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 4,
          "default": null,
          "defaults": [],
          "end_col_offset": 17,
          "end_lineno": 45,
          "lineno": 39,
          "node_id": 210,
          "src": "941:173:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 47,
            "lineno": 47,
            "node_id": 240,
            "src": "1123:23:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "n_coins",
              "col_offset": 4,
              "end_col_offset": 16,
              "end_lineno": 47,
              "lineno": 47,
              "node_id": 241,
              "src": "1123:12:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 47,
                "id": "self",
                "lineno": 47,
                "node_id": 242,
                "src": "1123:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 27,
              "end_lineno": 47,
              "id": "_n_coins",
              "lineno": 47,
              "node_id": 245,
              "src": "1138:8:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 49,
            "end_lineno": 48,
            "lineno": 48,
            "node_id": 247,
            "src": "1151:45:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "n_coins_underlying",
              "col_offset": 4,
              "end_col_offset": 27,
              "end_lineno": 48,
              "lineno": 48,
              "node_id": 248,
              "src": "1151:23:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 48,
                "id": "self",
                "lineno": 48,
                "node_id": 249,
                "src": "1151:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 30,
              "end_col_offset": 49,
              "end_lineno": 48,
              "id": "_n_coins_underlying",
              "lineno": 48,
              "node_id": 252,
              "src": "1177:19:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 49,
            "lineno": 49,
            "node_id": 254,
            "src": "1201:27:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "base_pool",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 49,
              "lineno": 49,
              "node_id": 255,
              "src": "1201:14:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 49,
                "id": "self",
                "lineno": 49,
                "node_id": 256,
                "src": "1201:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 31,
              "end_lineno": 49,
              "id": "_base_pool",
              "lineno": 49,
              "node_id": 259,
              "src": "1218:10:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 50,
            "lineno": 50,
            "node_id": 261,
            "src": "1233:27:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "coin_list",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 50,
              "lineno": 50,
              "node_id": 262,
              "src": "1233:14:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 50,
                "id": "self",
                "lineno": 50,
                "node_id": 263,
                "src": "1233:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 31,
              "end_lineno": 50,
              "id": "_coin_list",
              "lineno": 50,
              "node_id": 266,
              "src": "1250:10:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 41,
            "end_lineno": 51,
            "lineno": 51,
            "node_id": 268,
            "src": "1265:37:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "base_coin_list",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 51,
              "lineno": 51,
              "node_id": 269,
              "src": "1265:19:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 51,
                "id": "self",
                "lineno": 51,
                "node_id": 270,
                "src": "1265:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 26,
              "end_col_offset": 41,
              "end_lineno": 51,
              "id": "_base_coin_list",
              "lineno": 51,
              "node_id": 273,
              "src": "1287:15:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 52,
            "lineno": 52,
            "node_id": 275,
            "src": "1307:11:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "A",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 52,
              "lineno": 52,
              "node_id": 276,
              "src": "1307:6:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 52,
                "id": "self",
                "lineno": 52,
                "node_id": 277,
                "src": "1307:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 13,
              "end_col_offset": 15,
              "end_lineno": 52,
              "id": "_A",
              "lineno": 52,
              "node_id": 280,
              "src": "1316:2:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 19,
            "end_lineno": 53,
            "lineno": 53,
            "node_id": 282,
            "src": "1323:15:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "fee",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 53,
              "lineno": 53,
              "node_id": 283,
              "src": "1323:8:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 53,
                "id": "self",
                "lineno": 53,
                "node_id": 284,
                "src": "1323:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 15,
              "end_col_offset": 19,
              "end_lineno": 53,
              "id": "_fee",
              "lineno": 53,
              "node_id": 287,
              "src": "1334:4:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 54,
            "lineno": 54,
            "node_id": 289,
            "src": "1343:31:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "get_virtual_price",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 54,
              "lineno": 54,
              "node_id": 290,
              "src": "1343:22:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 54,
                "id": "self",
                "lineno": 54,
                "node_id": 291,
                "src": "1343:4:3"
              }
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 29,
              "end_col_offset": 35,
              "end_lineno": 54,
              "left": {
                "ast_type": "Int",
                "col_offset": 29,
                "end_col_offset": 31,
                "end_lineno": 54,
                "lineno": 54,
                "node_id": 295,
                "src": "1368:2:3",
                "value": 10
              },
              "lineno": 54,
              "node_id": 294,
              "op": {
                "ast_type": "Pow",
                "col_offset": 29,
                "end_col_offset": 35,
                "end_lineno": 54,
                "lineno": 54,
                "node_id": 473,
                "src": "1368:6:3"
              },
              "right": {
                "ast_type": "Int",
                "col_offset": 33,
                "end_col_offset": 35,
                "end_lineno": 54,
                "lineno": 54,
                "node_id": 297,
                "src": "1372:2:3",
                "value": 18
              },
              "src": "1368:6:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 37,
            "id": "external",
            "lineno": 37,
            "node_id": 298,
            "src": "914:8:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 35,
        "end_lineno": 54,
        "lineno": 38,
        "name": "__init__",
        "node_id": 209,
        "pos": null,
        "returns": null,
        "src": "923:451:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 59,
                "id": "uint256",
                "lineno": 59,
                "node_id": 303,
                "src": "1406:7:3"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 10,
              "end_col_offset": 20,
              "end_lineno": 59,
              "lineno": 59,
              "node_id": 302,
              "src": "1403:10:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 10,
          "default": null,
          "defaults": [],
          "end_col_offset": 20,
          "end_lineno": 59,
          "lineno": 59,
          "node_id": 301,
          "src": "1403:10:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 60,
            "lineno": 60,
            "msg": null,
            "node_id": 305,
            "src": "1431:23:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 60,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 12,
                "end_lineno": 60,
                "id": "i",
                "lineno": 60,
                "node_id": 307,
                "src": "1438:1:3"
              },
              "lineno": 60,
              "node_id": 306,
              "op": {
                "ast_type": "Lt",
                "col_offset": 11,
                "end_col_offset": 27,
                "end_lineno": 60,
                "lineno": 60,
                "node_id": 1038,
                "src": "1438:16:3"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "n_coins",
                "col_offset": 15,
                "end_col_offset": 27,
                "end_lineno": 60,
                "lineno": 60,
                "node_id": 310,
                "src": "1442:12:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 19,
                  "end_lineno": 60,
                  "id": "self",
                  "lineno": 60,
                  "node_id": 311,
                  "src": "1442:4:3"
                }
              },
              "src": "1438:16:3"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 61,
            "lineno": 61,
            "node_id": 314,
            "src": "1483:24:3",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 28,
              "end_lineno": 61,
              "lineno": 61,
              "node_id": 315,
              "slice": {
                "ast_type": "Index",
                "col_offset": 26,
                "end_col_offset": 27,
                "end_lineno": 61,
                "lineno": 61,
                "node_id": 320,
                "src": "1505:1:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 27,
                  "end_lineno": 61,
                  "id": "i",
                  "lineno": 61,
                  "node_id": 321,
                  "src": "1505:1:3"
                }
              },
              "src": "1490:17:3",
              "value": {
                "ast_type": "Attribute",
                "attr": "coin_list",
                "col_offset": 11,
                "end_col_offset": 25,
                "end_lineno": 61,
                "lineno": 61,
                "node_id": 316,
                "src": "1490:14:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 61,
                  "id": "self",
                  "lineno": 61,
                  "node_id": 317,
                  "src": "1490:4:3"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 57,
            "id": "external",
            "lineno": 57,
            "node_id": 324,
            "src": "1378:8:3"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 58,
            "id": "view",
            "lineno": 58,
            "node_id": 326,
            "src": "1388:4:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 28,
        "end_lineno": 61,
        "lineno": 59,
        "name": "coins",
        "node_id": 300,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 25,
          "end_col_offset": 32,
          "end_lineno": 59,
          "id": "address",
          "lineno": 59,
          "node_id": 328,
          "src": "1418:7:3"
        },
        "src": "1393:114:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 25,
                "end_lineno": 66,
                "id": "uint256",
                "lineno": 66,
                "node_id": 333,
                "src": "1544:7:3"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 15,
              "end_col_offset": 25,
              "end_lineno": 66,
              "lineno": 66,
              "node_id": 332,
              "src": "1541:10:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 15,
          "default": null,
          "defaults": [],
          "end_col_offset": 25,
          "end_lineno": 66,
          "lineno": 66,
          "node_id": 331,
          "src": "1541:10:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 67,
            "lineno": 67,
            "msg": null,
            "node_id": 335,
            "src": "1569:34:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 38,
              "end_lineno": 67,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 12,
                "end_lineno": 67,
                "id": "i",
                "lineno": 67,
                "node_id": 337,
                "src": "1576:1:3"
              },
              "lineno": 67,
              "node_id": 336,
              "op": {
                "ast_type": "Lt",
                "col_offset": 11,
                "end_col_offset": 38,
                "end_lineno": 67,
                "lineno": 67,
                "node_id": 1038,
                "src": "1576:27:3"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "n_coins_underlying",
                "col_offset": 15,
                "end_col_offset": 38,
                "end_lineno": 67,
                "lineno": 67,
                "node_id": 340,
                "src": "1580:23:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 19,
                  "end_lineno": 67,
                  "id": "self",
                  "lineno": 67,
                  "node_id": 341,
                  "src": "1580:4:3"
                }
              },
              "src": "1576:27:3"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 68,
            "lineno": 68,
            "node_id": 344,
            "src": "1632:29:3",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 33,
              "end_lineno": 68,
              "lineno": 68,
              "node_id": 345,
              "slice": {
                "ast_type": "Index",
                "col_offset": 31,
                "end_col_offset": 32,
                "end_lineno": 68,
                "lineno": 68,
                "node_id": 350,
                "src": "1659:1:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 32,
                  "end_lineno": 68,
                  "id": "i",
                  "lineno": 68,
                  "node_id": 351,
                  "src": "1659:1:3"
                }
              },
              "src": "1639:22:3",
              "value": {
                "ast_type": "Attribute",
                "attr": "base_coin_list",
                "col_offset": 11,
                "end_col_offset": 30,
                "end_lineno": 68,
                "lineno": 68,
                "node_id": 346,
                "src": "1639:19:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 68,
                  "id": "self",
                  "lineno": 68,
                  "node_id": 347,
                  "src": "1639:4:3"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 64,
            "id": "external",
            "lineno": 64,
            "node_id": 354,
            "src": "1511:8:3"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 65,
            "id": "view",
            "lineno": 65,
            "node_id": 356,
            "src": "1521:4:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 33,
        "end_lineno": 68,
        "lineno": 66,
        "name": "base_coins",
        "node_id": 330,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 30,
          "end_col_offset": 37,
          "end_lineno": 66,
          "id": "address",
          "lineno": 66,
          "node_id": 358,
          "src": "1556:7:3"
        },
        "src": "1526:135:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 23,
                "end_lineno": 73,
                "id": "uint256",
                "lineno": 73,
                "node_id": 363,
                "src": "1696:7:3"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 23,
              "end_lineno": 73,
              "lineno": 73,
              "node_id": 362,
              "src": "1693:10:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 23,
          "end_lineno": 73,
          "lineno": 73,
          "node_id": 361,
          "src": "1693:10:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 74,
            "lineno": 74,
            "msg": null,
            "node_id": 365,
            "src": "1721:23:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 74,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 12,
                "end_lineno": 74,
                "id": "i",
                "lineno": 74,
                "node_id": 367,
                "src": "1728:1:3"
              },
              "lineno": 74,
              "node_id": 366,
              "op": {
                "ast_type": "Lt",
                "col_offset": 11,
                "end_col_offset": 27,
                "end_lineno": 74,
                "lineno": 74,
                "node_id": 1038,
                "src": "1728:16:3"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "n_coins",
                "col_offset": 15,
                "end_col_offset": 27,
                "end_lineno": 74,
                "lineno": 74,
                "node_id": 370,
                "src": "1732:12:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 19,
                  "end_lineno": 74,
                  "id": "self",
                  "lineno": 74,
                  "node_id": 371,
                  "src": "1732:4:3"
                }
              },
              "src": "1728:16:3"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 75,
            "lineno": 75,
            "node_id": 374,
            "src": "1749:24:3",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 28,
              "end_lineno": 75,
              "lineno": 75,
              "node_id": 375,
              "slice": {
                "ast_type": "Index",
                "col_offset": 26,
                "end_col_offset": 27,
                "end_lineno": 75,
                "lineno": 75,
                "node_id": 380,
                "src": "1771:1:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 27,
                  "end_lineno": 75,
                  "id": "i",
                  "lineno": 75,
                  "node_id": 381,
                  "src": "1771:1:3"
                }
              },
              "src": "1756:17:3",
              "value": {
                "ast_type": "Attribute",
                "attr": "_balances",
                "col_offset": 11,
                "end_col_offset": 25,
                "end_lineno": 75,
                "lineno": 75,
                "node_id": 376,
                "src": "1756:14:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 75,
                  "id": "self",
                  "lineno": 75,
                  "node_id": 377,
                  "src": "1756:4:3"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 71,
            "id": "external",
            "lineno": 71,
            "node_id": 384,
            "src": "1665:8:3"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 72,
            "id": "view",
            "lineno": 72,
            "node_id": 386,
            "src": "1675:4:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 28,
        "end_lineno": 75,
        "lineno": 73,
        "name": "balances",
        "node_id": 360,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 28,
          "end_col_offset": 35,
          "end_lineno": 73,
          "id": "uint256",
          "lineno": 73,
          "node_id": 388,
          "src": "1708:7:3"
        },
        "src": "1680:93:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 80,
                "id": "address",
                "lineno": 80,
                "node_id": 393,
                "src": "1811:7:3"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 26,
              "end_lineno": 80,
              "lineno": 80,
              "node_id": 392,
              "src": "1804:14:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 33,
                "end_col_offset": 40,
                "end_lineno": 80,
                "id": "address",
                "lineno": 80,
                "node_id": 396,
                "src": "1825:7:3"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 28,
              "end_col_offset": 40,
              "end_lineno": 80,
              "lineno": 80,
              "node_id": 395,
              "src": "1820:12:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 47,
                "end_col_offset": 54,
                "end_lineno": 80,
                "id": "uint256",
                "lineno": 80,
                "node_id": 399,
                "src": "1839:7:3"
              },
              "arg": "_dx",
              "ast_type": "arg",
              "col_offset": 42,
              "end_col_offset": 54,
              "end_lineno": 80,
              "lineno": 80,
              "node_id": 398,
              "src": "1834:12:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 54,
          "end_lineno": 80,
          "lineno": 80,
          "node_id": 391,
          "src": "1804:42:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 28,
              "end_lineno": 81,
              "id": "uint256",
              "lineno": 81,
              "node_id": 404,
              "src": "1881:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 81,
            "lineno": 81,
            "node_id": 401,
            "simple": 1,
            "src": "1864:28:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 19,
              "end_lineno": 81,
              "id": "_from_precision",
              "lineno": 81,
              "node_id": 402,
              "src": "1864:15:3"
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 31,
              "end_col_offset": 32,
              "end_lineno": 81,
              "lineno": 81,
              "node_id": 406,
              "src": "1891:1:3",
              "value": 0
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 26,
              "end_lineno": 82,
              "id": "uint256",
              "lineno": 82,
              "node_id": 410,
              "src": "1912:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 82,
            "lineno": 82,
            "node_id": 407,
            "simple": 1,
            "src": "1897:26:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 82,
              "id": "_to_precision",
              "lineno": 82,
              "node_id": 408,
              "src": "1897:13:3"
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 29,
              "end_col_offset": 30,
              "end_lineno": 82,
              "lineno": 82,
              "node_id": 412,
              "src": "1922:1:3",
              "value": 0
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 28,
                "end_lineno": 85,
                "lineno": 85,
                "node_id": 419,
                "src": "1993:20:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 23,
                  "end_lineno": 85,
                  "id": "_from_precision",
                  "lineno": 85,
                  "node_id": 420,
                  "src": "1993:15:3"
                },
                "value": {
                  "ast_type": "Int",
                  "col_offset": 26,
                  "end_col_offset": 28,
                  "end_lineno": 85,
                  "lineno": 85,
                  "node_id": 422,
                  "src": "2011:2:3",
                  "value": 18
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 53,
            "end_lineno": 87,
            "lineno": 84,
            "node_id": 413,
            "orelse": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 53,
                "end_lineno": 87,
                "lineno": 87,
                "node_id": 423,
                "src": "2032:45:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 23,
                  "end_lineno": 87,
                  "id": "_from_precision",
                  "lineno": 87,
                  "node_id": 424,
                  "src": "2032:15:3"
                },
                "value": {
                  "args": [],
                  "ast_type": "Call",
                  "col_offset": 26,
                  "end_col_offset": 53,
                  "end_lineno": 87,
                  "func": {
                    "ast_type": "Attribute",
                    "attr": "decimals",
                    "col_offset": 26,
                    "end_col_offset": 51,
                    "end_lineno": 87,
                    "lineno": 87,
                    "node_id": 427,
                    "src": "2050:25:3",
                    "value": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 36,
                          "end_col_offset": 41,
                          "end_lineno": 87,
                          "id": "_from",
                          "lineno": 87,
                          "node_id": 431,
                          "src": "2060:5:3"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 26,
                      "end_col_offset": 42,
                      "end_lineno": 87,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 26,
                        "end_col_offset": 35,
                        "end_lineno": 87,
                        "id": "ERC20Mock",
                        "lineno": 87,
                        "node_id": 429,
                        "src": "2050:9:3"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 87,
                      "node_id": 428,
                      "src": "2050:16:3"
                    }
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 87,
                  "node_id": 426,
                  "src": "2050:27:3"
                }
              }
            ],
            "src": "1929:148:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 58,
              "end_lineno": 84,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 12,
                "end_lineno": 84,
                "id": "_from",
                "lineno": 84,
                "node_id": 415,
                "src": "1932:5:3"
              },
              "lineno": 84,
              "node_id": 414,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 58,
                "end_lineno": 84,
                "lineno": 84,
                "node_id": 1090,
                "src": "1932:51:3"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 16,
                "end_col_offset": 58,
                "end_lineno": 84,
                "lineno": 84,
                "node_id": 418,
                "src": "1941:42:3",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "1932:51:3"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 26,
                "end_lineno": 89,
                "lineno": 89,
                "node_id": 440,
                "src": "2144:18:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 21,
                  "end_lineno": 89,
                  "id": "_to_precision",
                  "lineno": 89,
                  "node_id": 441,
                  "src": "2144:13:3"
                },
                "value": {
                  "ast_type": "Int",
                  "col_offset": 24,
                  "end_col_offset": 26,
                  "end_lineno": 89,
                  "lineno": 89,
                  "node_id": 443,
                  "src": "2160:2:3",
                  "value": 18
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 49,
            "end_lineno": 91,
            "lineno": 88,
            "node_id": 434,
            "orelse": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 49,
                "end_lineno": 91,
                "lineno": 91,
                "node_id": 444,
                "src": "2181:41:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 21,
                  "end_lineno": 91,
                  "id": "_to_precision",
                  "lineno": 91,
                  "node_id": 445,
                  "src": "2181:13:3"
                },
                "value": {
                  "args": [],
                  "ast_type": "Call",
                  "col_offset": 24,
                  "end_col_offset": 49,
                  "end_lineno": 91,
                  "func": {
                    "ast_type": "Attribute",
                    "attr": "decimals",
                    "col_offset": 24,
                    "end_col_offset": 47,
                    "end_lineno": 91,
                    "lineno": 91,
                    "node_id": 448,
                    "src": "2197:23:3",
                    "value": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 34,
                          "end_col_offset": 37,
                          "end_lineno": 91,
                          "id": "_to",
                          "lineno": 91,
                          "node_id": 452,
                          "src": "2207:3:3"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 24,
                      "end_col_offset": 38,
                      "end_lineno": 91,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 24,
                        "end_col_offset": 33,
                        "end_lineno": 91,
                        "id": "ERC20Mock",
                        "lineno": 91,
                        "node_id": 450,
                        "src": "2197:9:3"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 91,
                      "node_id": 449,
                      "src": "2197:14:3"
                    }
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 91,
                  "node_id": 447,
                  "src": "2197:25:3"
                }
              }
            ],
            "src": "2082:140:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 56,
              "end_lineno": 88,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 10,
                "end_lineno": 88,
                "id": "_to",
                "lineno": 88,
                "node_id": 436,
                "src": "2085:3:3"
              },
              "lineno": 88,
              "node_id": 435,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 56,
                "end_lineno": 88,
                "lineno": 88,
                "node_id": 1090,
                "src": "2085:49:3"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 14,
                "end_col_offset": 56,
                "end_lineno": 88,
                "lineno": 88,
                "node_id": 439,
                "src": "2092:42:3",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "2085:49:3"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 9,
              "end_col_offset": 16,
              "end_lineno": 93,
              "id": "uint256",
              "lineno": 93,
              "node_id": 458,
              "src": "2233:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 68,
            "end_lineno": 93,
            "lineno": 93,
            "node_id": 455,
            "simple": 1,
            "src": "2228:64:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 7,
              "end_lineno": 93,
              "id": "_dy",
              "lineno": 93,
              "node_id": 456,
              "src": "2228:3:3"
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 19,
              "end_col_offset": 68,
              "end_lineno": 93,
              "left": {
                "ast_type": "BinOp",
                "col_offset": 19,
                "end_col_offset": 44,
                "end_lineno": 93,
                "left": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 93,
                  "id": "_dx",
                  "lineno": 93,
                  "node_id": 462,
                  "src": "2243:3:3"
                },
                "lineno": 93,
                "node_id": 461,
                "op": {
                  "ast_type": "Mult",
                  "col_offset": 19,
                  "end_col_offset": 44,
                  "end_lineno": 93,
                  "lineno": 93,
                  "node_id": 485,
                  "src": "2243:25:3"
                },
                "right": {
                  "ast_type": "BinOp",
                  "col_offset": 26,
                  "end_col_offset": 43,
                  "end_lineno": 93,
                  "left": {
                    "ast_type": "Int",
                    "col_offset": 26,
                    "end_col_offset": 28,
                    "end_lineno": 93,
                    "lineno": 93,
                    "node_id": 466,
                    "src": "2250:2:3",
                    "value": 10
                  },
                  "lineno": 93,
                  "node_id": 465,
                  "op": {
                    "ast_type": "Pow",
                    "col_offset": 26,
                    "end_col_offset": 43,
                    "end_lineno": 93,
                    "lineno": 93,
                    "node_id": 473,
                    "src": "2250:17:3"
                  },
                  "right": {
                    "ast_type": "Name",
                    "col_offset": 30,
                    "end_col_offset": 43,
                    "end_lineno": 93,
                    "id": "_to_precision",
                    "lineno": 93,
                    "node_id": 468,
                    "src": "2254:13:3"
                  },
                  "src": "2250:17:3"
                },
                "src": "2243:25:3"
              },
              "lineno": 93,
              "node_id": 460,
              "op": {
                "ast_type": "Div",
                "col_offset": 19,
                "end_col_offset": 68,
                "end_lineno": 93,
                "lineno": 93,
                "node_id": 490,
                "src": "2243:49:3"
              },
              "right": {
                "ast_type": "BinOp",
                "col_offset": 48,
                "end_col_offset": 67,
                "end_lineno": 93,
                "left": {
                  "ast_type": "Int",
                  "col_offset": 48,
                  "end_col_offset": 50,
                  "end_lineno": 93,
                  "lineno": 93,
                  "node_id": 472,
                  "src": "2272:2:3",
                  "value": 10
                },
                "lineno": 93,
                "node_id": 471,
                "op": {
                  "ast_type": "Pow",
                  "col_offset": 48,
                  "end_col_offset": 67,
                  "end_lineno": 93,
                  "lineno": 93,
                  "node_id": 473,
                  "src": "2272:19:3"
                },
                "right": {
                  "ast_type": "Name",
                  "col_offset": 52,
                  "end_col_offset": 67,
                  "end_lineno": 93,
                  "id": "_from_precision",
                  "lineno": 93,
                  "node_id": 474,
                  "src": "2276:15:3"
                },
                "src": "2272:19:3"
              },
              "src": "2243:49:3"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 10,
              "end_col_offset": 17,
              "end_lineno": 94,
              "id": "uint256",
              "lineno": 94,
              "node_id": 479,
              "src": "2303:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 50,
            "end_lineno": 94,
            "lineno": 94,
            "node_id": 476,
            "simple": 1,
            "src": "2297:46:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 8,
              "end_lineno": 94,
              "id": "_fee",
              "lineno": 94,
              "node_id": 477,
              "src": "2297:4:3"
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 20,
              "end_col_offset": 50,
              "end_lineno": 94,
              "left": {
                "ast_type": "BinOp",
                "col_offset": 20,
                "end_col_offset": 34,
                "end_lineno": 94,
                "left": {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 23,
                  "end_lineno": 94,
                  "id": "_dy",
                  "lineno": 94,
                  "node_id": 483,
                  "src": "2313:3:3"
                },
                "lineno": 94,
                "node_id": 482,
                "op": {
                  "ast_type": "Mult",
                  "col_offset": 20,
                  "end_col_offset": 34,
                  "end_lineno": 94,
                  "lineno": 94,
                  "node_id": 485,
                  "src": "2313:14:3"
                },
                "right": {
                  "ast_type": "Attribute",
                  "attr": "fee",
                  "col_offset": 26,
                  "end_col_offset": 34,
                  "end_lineno": 94,
                  "lineno": 94,
                  "node_id": 486,
                  "src": "2319:8:3",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 30,
                    "end_lineno": 94,
                    "id": "self",
                    "lineno": 94,
                    "node_id": 487,
                    "src": "2319:4:3"
                  }
                },
                "src": "2313:14:3"
              },
              "lineno": 94,
              "node_id": 481,
              "op": {
                "ast_type": "Div",
                "col_offset": 20,
                "end_col_offset": 50,
                "end_lineno": 94,
                "lineno": 94,
                "node_id": 490,
                "src": "2313:30:3"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 37,
                "end_col_offset": 50,
                "end_lineno": 94,
                "id": "FEE_PRECISION",
                "lineno": 94,
                "node_id": 491,
                "src": "2330:13:3"
              },
              "src": "2313:30:3"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 21,
            "end_lineno": 96,
            "lineno": 96,
            "node_id": 493,
            "src": "2349:17:3",
            "value": {
              "ast_type": "BinOp",
              "col_offset": 11,
              "end_col_offset": 21,
              "end_lineno": 96,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 96,
                "id": "_dy",
                "lineno": 96,
                "node_id": 495,
                "src": "2356:3:3"
              },
              "lineno": 96,
              "node_id": 494,
              "op": {
                "ast_type": "Sub",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 96,
                "lineno": 96,
                "node_id": 1065,
                "src": "2356:10:3"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 17,
                "end_col_offset": 21,
                "end_lineno": 96,
                "id": "_fee",
                "lineno": 96,
                "node_id": 498,
                "src": "2362:4:3"
              },
              "src": "2356:10:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 78,
            "id": "internal",
            "lineno": 78,
            "node_id": 500,
            "src": "1777:8:3"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 79,
            "id": "view",
            "lineno": 79,
            "node_id": 502,
            "src": "1787:4:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 21,
        "end_lineno": 96,
        "lineno": 80,
        "name": "_get_dy",
        "node_id": 390,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 59,
          "end_col_offset": 66,
          "end_lineno": 80,
          "id": "uint256",
          "lineno": 80,
          "node_id": 504,
          "src": "1851:7:3"
        },
        "src": "1792:574:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 20,
                "end_lineno": 101,
                "id": "int128",
                "lineno": 101,
                "node_id": 509,
                "src": "2399:6:3"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 11,
              "end_col_offset": 20,
              "end_lineno": 101,
              "lineno": 101,
              "node_id": 508,
              "src": "2396:9:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 31,
                "end_lineno": 101,
                "id": "int128",
                "lineno": 101,
                "node_id": 512,
                "src": "2410:6:3"
              },
              "arg": "j",
              "ast_type": "arg",
              "col_offset": 22,
              "end_col_offset": 31,
              "end_lineno": 101,
              "lineno": 101,
              "node_id": 511,
              "src": "2407:9:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 37,
                "end_col_offset": 44,
                "end_lineno": 101,
                "id": "uint256",
                "lineno": 101,
                "node_id": 515,
                "src": "2422:7:3"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 33,
              "end_col_offset": 44,
              "end_lineno": 101,
              "lineno": 101,
              "node_id": 514,
              "src": "2418:11:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 11,
          "default": null,
          "defaults": [],
          "end_col_offset": 44,
          "end_lineno": 101,
          "lineno": 101,
          "node_id": 507,
          "src": "2396:33:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 65,
            "end_lineno": 102,
            "lineno": 102,
            "node_id": 517,
            "src": "2447:61:3",
            "value": {
              "args": [
                {
                  "ast_type": "Subscript",
                  "col_offset": 24,
                  "end_col_offset": 41,
                  "end_lineno": 102,
                  "lineno": 102,
                  "node_id": 523,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 39,
                    "end_col_offset": 40,
                    "end_lineno": 102,
                    "lineno": 102,
                    "node_id": 528,
                    "src": "2482:1:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 39,
                      "end_col_offset": 40,
                      "end_lineno": 102,
                      "id": "i",
                      "lineno": 102,
                      "node_id": 529,
                      "src": "2482:1:3"
                    }
                  },
                  "src": "2467:17:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 24,
                    "end_col_offset": 38,
                    "end_lineno": 102,
                    "lineno": 102,
                    "node_id": 524,
                    "src": "2467:14:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 24,
                      "end_col_offset": 28,
                      "end_lineno": 102,
                      "id": "self",
                      "lineno": 102,
                      "node_id": 525,
                      "src": "2467:4:3"
                    }
                  }
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 43,
                  "end_col_offset": 60,
                  "end_lineno": 102,
                  "lineno": 102,
                  "node_id": 532,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 58,
                    "end_col_offset": 59,
                    "end_lineno": 102,
                    "lineno": 102,
                    "node_id": 537,
                    "src": "2501:1:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 58,
                      "end_col_offset": 59,
                      "end_lineno": 102,
                      "id": "j",
                      "lineno": 102,
                      "node_id": 538,
                      "src": "2501:1:3"
                    }
                  },
                  "src": "2486:17:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 43,
                    "end_col_offset": 57,
                    "end_lineno": 102,
                    "lineno": 102,
                    "node_id": 533,
                    "src": "2486:14:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 43,
                      "end_col_offset": 47,
                      "end_lineno": 102,
                      "id": "self",
                      "lineno": 102,
                      "node_id": 534,
                      "src": "2486:4:3"
                    }
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 62,
                  "end_col_offset": 64,
                  "end_lineno": 102,
                  "id": "dx",
                  "lineno": 102,
                  "node_id": 541,
                  "src": "2505:2:3"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 65,
              "end_lineno": 102,
              "func": {
                "ast_type": "Attribute",
                "attr": "_get_dy",
                "col_offset": 11,
                "end_col_offset": 23,
                "end_lineno": 102,
                "lineno": 102,
                "node_id": 519,
                "src": "2454:12:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 102,
                  "id": "self",
                  "lineno": 102,
                  "node_id": 520,
                  "src": "2454:4:3"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 102,
              "node_id": 518,
              "src": "2454:54:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 99,
            "id": "external",
            "lineno": 99,
            "node_id": 543,
            "src": "2370:8:3"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 100,
            "id": "view",
            "lineno": 100,
            "node_id": 545,
            "src": "2380:4:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 65,
        "end_lineno": 102,
        "lineno": 101,
        "name": "get_dy",
        "node_id": 506,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 49,
          "end_col_offset": 56,
          "end_lineno": 101,
          "id": "uint256",
          "lineno": 101,
          "node_id": 547,
          "src": "2434:7:3"
        },
        "src": "2385:123:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 31,
                "end_lineno": 107,
                "id": "int128",
                "lineno": 107,
                "node_id": 552,
                "src": "2552:6:3"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 22,
              "end_col_offset": 31,
              "end_lineno": 107,
              "lineno": 107,
              "node_id": 551,
              "src": "2549:9:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 36,
                "end_col_offset": 42,
                "end_lineno": 107,
                "id": "int128",
                "lineno": 107,
                "node_id": 555,
                "src": "2563:6:3"
              },
              "arg": "j",
              "ast_type": "arg",
              "col_offset": 33,
              "end_col_offset": 42,
              "end_lineno": 107,
              "lineno": 107,
              "node_id": 554,
              "src": "2560:9:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 48,
                "end_col_offset": 55,
                "end_lineno": 107,
                "id": "uint256",
                "lineno": 107,
                "node_id": 558,
                "src": "2575:7:3"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 44,
              "end_col_offset": 55,
              "end_lineno": 107,
              "lineno": 107,
              "node_id": 557,
              "src": "2571:11:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 22,
          "default": null,
          "defaults": [],
          "end_col_offset": 55,
          "end_lineno": 107,
          "lineno": 107,
          "node_id": 550,
          "src": "2549:33:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 108,
              "id": "address",
              "lineno": 108,
              "node_id": 563,
              "src": "2607:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 108,
            "lineno": 108,
            "node_id": 560,
            "simple": 1,
            "src": "2600:29:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 108,
              "id": "_from",
              "lineno": 108,
              "node_id": 561,
              "src": "2600:5:3"
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 33,
              "end_lineno": 108,
              "id": "ZERO_ADDRESS",
              "lineno": 108,
              "node_id": 565,
              "src": "2617:12:3"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 9,
              "end_col_offset": 16,
              "end_lineno": 109,
              "id": "address",
              "lineno": 109,
              "node_id": 570,
              "src": "2639:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 109,
            "lineno": 109,
            "node_id": 567,
            "simple": 1,
            "src": "2634:27:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 7,
              "end_lineno": 109,
              "id": "_to",
              "lineno": 109,
              "node_id": 568,
              "src": "2634:3:3"
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 31,
              "end_lineno": 109,
              "id": "ZERO_ADDRESS",
              "lineno": 109,
              "node_id": 572,
              "src": "2649:12:3"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 25,
              "end_lineno": 111,
              "id": "int128",
              "lineno": 111,
              "node_id": 577,
              "src": "2682:6:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 61,
            "end_lineno": 111,
            "lineno": 111,
            "node_id": 574,
            "simple": 1,
            "src": "2667:57:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 111,
              "id": "max_base_coin",
              "lineno": 111,
              "node_id": 575,
              "src": "2667:13:3"
            },
            "value": {
              "args": [
                {
                  "ast_type": "BinOp",
                  "col_offset": 36,
                  "end_col_offset": 52,
                  "end_lineno": 111,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "n_coins",
                    "col_offset": 36,
                    "end_col_offset": 48,
                    "end_lineno": 111,
                    "lineno": 111,
                    "node_id": 583,
                    "src": "2699:12:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 36,
                      "end_col_offset": 40,
                      "end_lineno": 111,
                      "id": "self",
                      "lineno": 111,
                      "node_id": 584,
                      "src": "2699:4:3"
                    }
                  },
                  "lineno": 111,
                  "node_id": 582,
                  "op": {
                    "ast_type": "Sub",
                    "col_offset": 36,
                    "end_col_offset": 52,
                    "end_lineno": 111,
                    "lineno": 111,
                    "node_id": 1065,
                    "src": "2699:16:3"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 51,
                    "end_col_offset": 52,
                    "end_lineno": 111,
                    "lineno": 111,
                    "node_id": 588,
                    "src": "2714:1:3",
                    "value": 1
                  },
                  "src": "2699:16:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 54,
                  "end_col_offset": 60,
                  "end_lineno": 111,
                  "id": "int128",
                  "lineno": 111,
                  "node_id": 589,
                  "src": "2717:6:3"
                }
              ],
              "ast_type": "Call",
              "col_offset": 28,
              "end_col_offset": 61,
              "end_lineno": 111,
              "func": {
                "ast_type": "Name",
                "col_offset": 28,
                "end_col_offset": 35,
                "end_lineno": 111,
                "id": "convert",
                "lineno": 111,
                "node_id": 580,
                "src": "2691:7:3"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 111,
              "node_id": 579,
              "src": "2691:33:3"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 33,
                "end_lineno": 113,
                "lineno": 113,
                "node_id": 598,
                "src": "2760:25:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 13,
                  "end_lineno": 113,
                  "id": "_from",
                  "lineno": 113,
                  "node_id": 599,
                  "src": "2760:5:3"
                },
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 16,
                  "end_col_offset": 33,
                  "end_lineno": 113,
                  "lineno": 113,
                  "node_id": 601,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 31,
                    "end_col_offset": 32,
                    "end_lineno": 113,
                    "lineno": 113,
                    "node_id": 606,
                    "src": "2783:1:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 31,
                      "end_col_offset": 32,
                      "end_lineno": 113,
                      "id": "i",
                      "lineno": 113,
                      "node_id": 607,
                      "src": "2783:1:3"
                    }
                  },
                  "src": "2768:17:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 16,
                    "end_col_offset": 30,
                    "end_lineno": 113,
                    "lineno": 113,
                    "node_id": 602,
                    "src": "2768:14:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 16,
                      "end_col_offset": 20,
                      "end_lineno": 113,
                      "id": "self",
                      "lineno": 113,
                      "node_id": 603,
                      "src": "2768:4:3"
                    }
                  }
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 52,
            "end_lineno": 115,
            "lineno": 112,
            "node_id": 591,
            "orelse": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 52,
                "end_lineno": 115,
                "lineno": 115,
                "node_id": 610,
                "src": "2804:44:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 13,
                  "end_lineno": 115,
                  "id": "_from",
                  "lineno": 115,
                  "node_id": 611,
                  "src": "2804:5:3"
                },
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 16,
                  "end_col_offset": 52,
                  "end_lineno": 115,
                  "lineno": 115,
                  "node_id": 613,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 36,
                    "end_col_offset": 51,
                    "end_lineno": 115,
                    "lineno": 115,
                    "node_id": 618,
                    "src": "2832:15:3",
                    "value": {
                      "ast_type": "BinOp",
                      "col_offset": 36,
                      "end_col_offset": 51,
                      "end_lineno": 115,
                      "left": {
                        "ast_type": "Name",
                        "col_offset": 36,
                        "end_col_offset": 37,
                        "end_lineno": 115,
                        "id": "i",
                        "lineno": 115,
                        "node_id": 620,
                        "src": "2832:1:3"
                      },
                      "lineno": 115,
                      "node_id": 619,
                      "op": {
                        "ast_type": "Sub",
                        "col_offset": 36,
                        "end_col_offset": 51,
                        "end_lineno": 115,
                        "lineno": 115,
                        "node_id": 1065,
                        "src": "2832:15:3"
                      },
                      "right": {
                        "ast_type": "Name",
                        "col_offset": 38,
                        "end_col_offset": 51,
                        "end_lineno": 115,
                        "id": "max_base_coin",
                        "lineno": 115,
                        "node_id": 623,
                        "src": "2834:13:3"
                      },
                      "src": "2832:15:3"
                    }
                  },
                  "src": "2812:36:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "base_coin_list",
                    "col_offset": 16,
                    "end_col_offset": 35,
                    "end_lineno": 115,
                    "lineno": 115,
                    "node_id": 614,
                    "src": "2812:19:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 16,
                      "end_col_offset": 20,
                      "end_lineno": 115,
                      "id": "self",
                      "lineno": 115,
                      "node_id": 615,
                      "src": "2812:4:3"
                    }
                  }
                }
              }
            ],
            "src": "2729:119:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 25,
              "end_lineno": 112,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 8,
                "end_lineno": 112,
                "id": "i",
                "lineno": 112,
                "node_id": 593,
                "src": "2732:1:3"
              },
              "lineno": 112,
              "node_id": 592,
              "op": {
                "ast_type": "LtE",
                "col_offset": 7,
                "end_col_offset": 25,
                "end_lineno": 112,
                "lineno": 112,
                "node_id": 630,
                "src": "2732:18:3"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 25,
                "end_lineno": 112,
                "id": "max_base_coin",
                "lineno": 112,
                "node_id": 596,
                "src": "2737:13:3"
              },
              "src": "2732:18:3"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 31,
                "end_lineno": 117,
                "lineno": 117,
                "node_id": 633,
                "src": "2884:23:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 11,
                  "end_lineno": 117,
                  "id": "_to",
                  "lineno": 117,
                  "node_id": 634,
                  "src": "2884:3:3"
                },
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 14,
                  "end_col_offset": 31,
                  "end_lineno": 117,
                  "lineno": 117,
                  "node_id": 636,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 29,
                    "end_col_offset": 30,
                    "end_lineno": 117,
                    "lineno": 117,
                    "node_id": 641,
                    "src": "2905:1:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 29,
                      "end_col_offset": 30,
                      "end_lineno": 117,
                      "id": "j",
                      "lineno": 117,
                      "node_id": 642,
                      "src": "2905:1:3"
                    }
                  },
                  "src": "2890:17:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 14,
                    "end_col_offset": 28,
                    "end_lineno": 117,
                    "lineno": 117,
                    "node_id": 637,
                    "src": "2890:14:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 14,
                      "end_col_offset": 18,
                      "end_lineno": 117,
                      "id": "self",
                      "lineno": 117,
                      "node_id": 638,
                      "src": "2890:4:3"
                    }
                  }
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 50,
            "end_lineno": 119,
            "lineno": 116,
            "node_id": 626,
            "orelse": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 50,
                "end_lineno": 119,
                "lineno": 119,
                "node_id": 645,
                "src": "2926:42:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 11,
                  "end_lineno": 119,
                  "id": "_to",
                  "lineno": 119,
                  "node_id": 646,
                  "src": "2926:3:3"
                },
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 14,
                  "end_col_offset": 50,
                  "end_lineno": 119,
                  "lineno": 119,
                  "node_id": 648,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 34,
                    "end_col_offset": 49,
                    "end_lineno": 119,
                    "lineno": 119,
                    "node_id": 653,
                    "src": "2952:15:3",
                    "value": {
                      "ast_type": "BinOp",
                      "col_offset": 34,
                      "end_col_offset": 49,
                      "end_lineno": 119,
                      "left": {
                        "ast_type": "Name",
                        "col_offset": 34,
                        "end_col_offset": 35,
                        "end_lineno": 119,
                        "id": "j",
                        "lineno": 119,
                        "node_id": 655,
                        "src": "2952:1:3"
                      },
                      "lineno": 119,
                      "node_id": 654,
                      "op": {
                        "ast_type": "Sub",
                        "col_offset": 34,
                        "end_col_offset": 49,
                        "end_lineno": 119,
                        "lineno": 119,
                        "node_id": 1065,
                        "src": "2952:15:3"
                      },
                      "right": {
                        "ast_type": "Name",
                        "col_offset": 36,
                        "end_col_offset": 49,
                        "end_lineno": 119,
                        "id": "max_base_coin",
                        "lineno": 119,
                        "node_id": 658,
                        "src": "2954:13:3"
                      },
                      "src": "2952:15:3"
                    }
                  },
                  "src": "2932:36:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "base_coin_list",
                    "col_offset": 14,
                    "end_col_offset": 33,
                    "end_lineno": 119,
                    "lineno": 119,
                    "node_id": 649,
                    "src": "2932:19:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 14,
                      "end_col_offset": 18,
                      "end_lineno": 119,
                      "id": "self",
                      "lineno": 119,
                      "node_id": 650,
                      "src": "2932:4:3"
                    }
                  }
                }
              }
            ],
            "src": "2853:115:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 25,
              "end_lineno": 116,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 8,
                "end_lineno": 116,
                "id": "j",
                "lineno": 116,
                "node_id": 628,
                "src": "2856:1:3"
              },
              "lineno": 116,
              "node_id": 627,
              "op": {
                "ast_type": "LtE",
                "col_offset": 7,
                "end_col_offset": 25,
                "end_lineno": 116,
                "lineno": 116,
                "node_id": 630,
                "src": "2856:18:3"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 25,
                "end_lineno": 116,
                "id": "max_base_coin",
                "lineno": 116,
                "node_id": 631,
                "src": "2861:13:3"
              },
              "src": "2856:18:3"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 39,
            "end_lineno": 121,
            "lineno": 121,
            "node_id": 661,
            "src": "2974:35:3",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 29,
                  "end_lineno": 121,
                  "id": "_from",
                  "lineno": 121,
                  "node_id": 667,
                  "src": "2994:5:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 34,
                  "end_lineno": 121,
                  "id": "_to",
                  "lineno": 121,
                  "node_id": 669,
                  "src": "3001:3:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 38,
                  "end_lineno": 121,
                  "id": "dx",
                  "lineno": 121,
                  "node_id": 671,
                  "src": "3006:2:3"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 39,
              "end_lineno": 121,
              "func": {
                "ast_type": "Attribute",
                "attr": "_get_dy",
                "col_offset": 11,
                "end_col_offset": 23,
                "end_lineno": 121,
                "lineno": 121,
                "node_id": 663,
                "src": "2981:12:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 121,
                  "id": "self",
                  "lineno": 121,
                  "node_id": 664,
                  "src": "2981:4:3"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 121,
              "node_id": 662,
              "src": "2981:28:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 105,
            "id": "external",
            "lineno": 105,
            "node_id": 673,
            "src": "2512:8:3"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 106,
            "id": "view",
            "lineno": 106,
            "node_id": 675,
            "src": "2522:4:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 39,
        "end_lineno": 121,
        "lineno": 107,
        "name": "get_dy_underlying",
        "node_id": 549,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 60,
          "end_col_offset": 67,
          "end_lineno": 107,
          "id": "uint256",
          "lineno": 107,
          "node_id": 677,
          "src": "2587:7:3"
        },
        "src": "2527:482:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 125,
                "id": "address",
                "lineno": 125,
                "node_id": 682,
                "src": "3045:7:3"
              },
              "arg": "_sender",
              "ast_type": "arg",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 125,
              "lineno": 125,
              "node_id": 681,
              "src": "3036:16:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 46,
                "end_lineno": 125,
                "id": "address",
                "lineno": 125,
                "node_id": 685,
                "src": "3061:7:3"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 46,
              "end_lineno": 125,
              "lineno": 125,
              "node_id": 684,
              "src": "3054:14:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 53,
                "end_col_offset": 60,
                "end_lineno": 125,
                "id": "address",
                "lineno": 125,
                "node_id": 688,
                "src": "3075:7:3"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 48,
              "end_col_offset": 60,
              "end_lineno": 125,
              "lineno": 125,
              "node_id": 687,
              "src": "3070:12:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 66,
                "end_col_offset": 73,
                "end_lineno": 125,
                "id": "uint256",
                "lineno": 125,
                "node_id": 691,
                "src": "3088:7:3"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 62,
              "end_col_offset": 73,
              "end_lineno": 125,
              "lineno": 125,
              "node_id": 690,
              "src": "3084:11:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 83,
                "end_col_offset": 90,
                "end_lineno": 125,
                "id": "uint256",
                "lineno": 125,
                "node_id": 694,
                "src": "3105:7:3"
              },
              "arg": "min_dy",
              "ast_type": "arg",
              "col_offset": 75,
              "end_col_offset": 90,
              "end_lineno": 125,
              "lineno": 125,
              "node_id": 693,
              "src": "3097:15:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 14,
          "default": null,
          "defaults": [],
          "end_col_offset": 90,
          "end_lineno": 125,
          "lineno": 125,
          "node_id": 680,
          "src": "3036:76:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 8,
              "end_col_offset": 15,
              "end_lineno": 126,
              "id": "uint256",
              "lineno": 126,
              "node_id": 699,
              "src": "3123:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 46,
            "end_lineno": 126,
            "lineno": 126,
            "node_id": 696,
            "simple": 1,
            "src": "3119:42:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 6,
              "end_lineno": 126,
              "id": "dy",
              "lineno": 126,
              "node_id": 697,
              "src": "3119:2:3"
            },
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 36,
                  "end_lineno": 126,
                  "id": "_from",
                  "lineno": 126,
                  "node_id": 706,
                  "src": "3146:5:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 41,
                  "end_lineno": 126,
                  "id": "_to",
                  "lineno": 126,
                  "node_id": 708,
                  "src": "3153:3:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 43,
                  "end_col_offset": 45,
                  "end_lineno": 126,
                  "id": "dx",
                  "lineno": 126,
                  "node_id": 710,
                  "src": "3158:2:3"
                }
              ],
              "ast_type": "Call",
              "col_offset": 18,
              "end_col_offset": 46,
              "end_lineno": 126,
              "func": {
                "ast_type": "Attribute",
                "attr": "_get_dy",
                "col_offset": 18,
                "end_col_offset": 30,
                "end_lineno": 126,
                "lineno": 126,
                "node_id": 702,
                "src": "3133:12:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 22,
                  "end_lineno": 126,
                  "id": "self",
                  "lineno": 126,
                  "node_id": 703,
                  "src": "3133:4:3"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 126,
              "node_id": 701,
              "src": "3133:28:3"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 73,
            "end_lineno": 127,
            "lineno": 127,
            "msg": {
              "ast_type": "Str",
              "col_offset": 25,
              "end_col_offset": 73,
              "end_lineno": 127,
              "lineno": 127,
              "node_id": 719,
              "src": "3187:48:3",
              "value": "Exchange resulted in fewer coins than expected"
            },
            "node_id": 712,
            "src": "3166:69:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 23,
              "end_lineno": 127,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 13,
                "end_lineno": 127,
                "id": "dy",
                "lineno": 127,
                "node_id": 714,
                "src": "3173:2:3"
              },
              "lineno": 127,
              "node_id": 713,
              "op": {
                "ast_type": "GtE",
                "col_offset": 11,
                "end_col_offset": 23,
                "end_lineno": 127,
                "lineno": 127,
                "node_id": 716,
                "src": "3173:12:3"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 17,
                "end_col_offset": 23,
                "end_lineno": 127,
                "id": "min_dy",
                "lineno": 127,
                "node_id": 717,
                "src": "3179:6:3"
              },
              "src": "3173:12:3"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "annotation": {
                  "ast_type": "Subscript",
                  "col_offset": 19,
                  "end_col_offset": 28,
                  "end_lineno": 130,
                  "lineno": 130,
                  "node_id": 729,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 25,
                    "end_col_offset": 27,
                    "end_lineno": 130,
                    "lineno": 130,
                    "node_id": 732,
                    "src": "3322:2:3",
                    "value": {
                      "ast_type": "Int",
                      "col_offset": 25,
                      "end_col_offset": 27,
                      "end_lineno": 130,
                      "lineno": 130,
                      "node_id": 733,
                      "src": "3322:2:3",
                      "value": 32
                    }
                  },
                  "src": "3316:9:3",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 24,
                    "end_lineno": 130,
                    "id": "Bytes",
                    "lineno": 130,
                    "node_id": 730,
                    "src": "3316:5:3"
                  }
                },
                "ast_type": "AnnAssign",
                "col_offset": 8,
                "end_col_offset": 9,
                "end_lineno": 139,
                "lineno": 130,
                "node_id": 726,
                "simple": 1,
                "src": "3305:313:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 17,
                  "end_lineno": 130,
                  "id": "_response",
                  "lineno": 130,
                  "node_id": 727,
                  "src": "3305:9:3"
                },
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 12,
                      "end_col_offset": 17,
                      "end_lineno": 131,
                      "id": "_from",
                      "lineno": 131,
                      "node_id": 738,
                      "src": "3350:5:3"
                    },
                    {
                      "args": [
                        {
                          "args": [
                            {
                              "ast_type": "Str",
                              "col_offset": 26,
                              "end_col_offset": 65,
                              "end_lineno": 133,
                              "lineno": 133,
                              "node_id": 746,
                              "src": "3403:39:3",
                              "value": "transferFrom(address,address,uint256)"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 66,
                          "end_lineno": 133,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 25,
                            "end_lineno": 133,
                            "id": "method_id",
                            "lineno": 133,
                            "node_id": 744,
                            "src": "3393:9:3"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 133,
                          "node_id": 743,
                          "src": "3393:50:3"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 31,
                              "end_lineno": 134,
                              "id": "_sender",
                              "lineno": 134,
                              "node_id": 750,
                              "src": "3469:7:3"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 33,
                              "end_col_offset": 40,
                              "end_lineno": 134,
                              "id": "bytes32",
                              "lineno": 134,
                              "node_id": 752,
                              "src": "3478:7:3"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 41,
                          "end_lineno": 134,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 134,
                            "id": "convert",
                            "lineno": 134,
                            "node_id": 748,
                            "src": "3461:7:3"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 134,
                          "node_id": 747,
                          "src": "3461:25:3"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 28,
                              "end_lineno": 135,
                              "id": "self",
                              "lineno": 135,
                              "node_id": 757,
                              "src": "3512:4:3"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 30,
                              "end_col_offset": 37,
                              "end_lineno": 135,
                              "id": "bytes32",
                              "lineno": 135,
                              "node_id": 759,
                              "src": "3518:7:3"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 38,
                          "end_lineno": 135,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 135,
                            "id": "convert",
                            "lineno": 135,
                            "node_id": 755,
                            "src": "3504:7:3"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 135,
                          "node_id": 754,
                          "src": "3504:22:3"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 26,
                              "end_lineno": 136,
                              "id": "dx",
                              "lineno": 136,
                              "node_id": 764,
                              "src": "3552:2:3"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 28,
                              "end_col_offset": 35,
                              "end_lineno": 136,
                              "id": "bytes32",
                              "lineno": 136,
                              "node_id": 766,
                              "src": "3556:7:3"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 36,
                          "end_lineno": 136,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 136,
                            "id": "convert",
                            "lineno": 136,
                            "node_id": 762,
                            "src": "3544:7:3"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 136,
                          "node_id": 761,
                          "src": "3544:20:3"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 12,
                      "end_col_offset": 13,
                      "end_lineno": 137,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 12,
                        "end_col_offset": 18,
                        "end_lineno": 132,
                        "id": "concat",
                        "lineno": 132,
                        "node_id": 741,
                        "src": "3369:6:3"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 132,
                      "node_id": 740,
                      "src": "3369:210:3"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 31,
                  "end_col_offset": 9,
                  "end_lineno": 139,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 31,
                    "end_col_offset": 39,
                    "end_lineno": 130,
                    "id": "raw_call",
                    "lineno": 130,
                    "node_id": 736,
                    "src": "3328:8:3"
                  },
                  "keyword": null,
                  "keywords": [
                    {
                      "arg": "max_outsize",
                      "ast_type": "keyword",
                      "col_offset": 12,
                      "end_col_offset": 26,
                      "end_lineno": 138,
                      "lineno": 138,
                      "node_id": 768,
                      "src": "3593:14:3",
                      "value": {
                        "ast_type": "Int",
                        "col_offset": 24,
                        "end_col_offset": 26,
                        "end_lineno": 138,
                        "lineno": 138,
                        "node_id": 769,
                        "src": "3605:2:3",
                        "value": 32
                      }
                    }
                  ],
                  "lineno": 130,
                  "node_id": 735,
                  "src": "3328:290:3"
                }
              },
              {
                "ast_type": "If",
                "body": [
                  {
                    "ast_type": "Assert",
                    "col_offset": 12,
                    "end_col_offset": 43,
                    "end_lineno": 141,
                    "lineno": 141,
                    "msg": null,
                    "node_id": 779,
                    "src": "3662:31:3",
                    "test": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 27,
                          "end_col_offset": 36,
                          "end_lineno": 141,
                          "id": "_response",
                          "lineno": 141,
                          "node_id": 783,
                          "src": "3677:9:3"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 38,
                          "end_col_offset": 42,
                          "end_lineno": 141,
                          "id": "bool",
                          "lineno": 141,
                          "node_id": 785,
                          "src": "3688:4:3"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 19,
                      "end_col_offset": 43,
                      "end_lineno": 141,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 19,
                        "end_col_offset": 26,
                        "end_lineno": 141,
                        "id": "convert",
                        "lineno": 141,
                        "node_id": 781,
                        "src": "3669:7:3"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 141,
                      "node_id": 780,
                      "src": "3669:24:3"
                    }
                  }
                ],
                "col_offset": 8,
                "end_col_offset": 43,
                "end_lineno": 141,
                "lineno": 140,
                "node_id": 770,
                "orelse": [],
                "src": "3627:66:3",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 11,
                  "end_col_offset": 29,
                  "end_lineno": 140,
                  "left": {
                    "args": [
                      {
                        "ast_type": "Name",
                        "col_offset": 15,
                        "end_col_offset": 24,
                        "end_lineno": 140,
                        "id": "_response",
                        "lineno": 140,
                        "node_id": 775,
                        "src": "3634:9:3"
                      }
                    ],
                    "ast_type": "Call",
                    "col_offset": 11,
                    "end_col_offset": 25,
                    "end_lineno": 140,
                    "func": {
                      "ast_type": "Name",
                      "col_offset": 11,
                      "end_col_offset": 14,
                      "end_lineno": 140,
                      "id": "len",
                      "lineno": 140,
                      "node_id": 773,
                      "src": "3630:3:3"
                    },
                    "keyword": null,
                    "keywords": [],
                    "lineno": 140,
                    "node_id": 772,
                    "src": "3630:14:3"
                  },
                  "lineno": 140,
                  "node_id": 771,
                  "op": {
                    "ast_type": "Gt",
                    "col_offset": 11,
                    "end_col_offset": 29,
                    "end_lineno": 140,
                    "lineno": 140,
                    "node_id": 858,
                    "src": "3630:18:3"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 28,
                    "end_col_offset": 29,
                    "end_lineno": 140,
                    "lineno": 140,
                    "node_id": 778,
                    "src": "3647:1:3",
                    "value": 0
                  },
                  "src": "3630:18:3"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 43,
            "end_lineno": 141,
            "lineno": 129,
            "node_id": 720,
            "orelse": [],
            "src": "3241:452:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 58,
              "end_lineno": 129,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 12,
                "end_lineno": 129,
                "id": "_from",
                "lineno": 129,
                "node_id": 722,
                "src": "3244:5:3"
              },
              "lineno": 129,
              "node_id": 721,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 7,
                "end_col_offset": 58,
                "end_lineno": 129,
                "lineno": 129,
                "node_id": 724,
                "src": "3244:51:3"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 16,
                "end_col_offset": 58,
                "end_lineno": 129,
                "lineno": 129,
                "node_id": 725,
                "src": "3253:42:3",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "3244:51:3"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 8,
                "end_col_offset": 25,
                "end_lineno": 144,
                "lineno": 144,
                "node_id": 793,
                "src": "3761:17:3",
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 13,
                      "end_col_offset": 20,
                      "end_lineno": 144,
                      "id": "_sender",
                      "lineno": 144,
                      "node_id": 797,
                      "src": "3766:7:3"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 22,
                      "end_col_offset": 24,
                      "end_lineno": 144,
                      "id": "dy",
                      "lineno": 144,
                      "node_id": 799,
                      "src": "3775:2:3"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 8,
                  "end_col_offset": 25,
                  "end_lineno": 144,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 8,
                    "end_col_offset": 12,
                    "end_lineno": 144,
                    "id": "send",
                    "lineno": 144,
                    "node_id": 795,
                    "src": "3761:4:3"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 144,
                  "node_id": 794,
                  "src": "3761:17:3"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 43,
            "end_lineno": 157,
            "lineno": 143,
            "node_id": 787,
            "orelse": [
              {
                "ast_type": "Expr",
                "col_offset": 8,
                "end_col_offset": 50,
                "end_lineno": 146,
                "lineno": 146,
                "node_id": 801,
                "src": "3797:42:3",
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 41,
                      "end_col_offset": 45,
                      "end_lineno": 146,
                      "id": "self",
                      "lineno": 146,
                      "node_id": 810,
                      "src": "3830:4:3"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 47,
                      "end_col_offset": 49,
                      "end_lineno": 146,
                      "id": "dy",
                      "lineno": 146,
                      "node_id": 812,
                      "src": "3836:2:3"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 8,
                  "end_col_offset": 50,
                  "end_lineno": 146,
                  "func": {
                    "ast_type": "Attribute",
                    "attr": "_mint_for_testing",
                    "col_offset": 8,
                    "end_col_offset": 40,
                    "end_lineno": 146,
                    "lineno": 146,
                    "node_id": 803,
                    "src": "3797:32:3",
                    "value": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 18,
                          "end_col_offset": 21,
                          "end_lineno": 146,
                          "id": "_to",
                          "lineno": 146,
                          "node_id": 807,
                          "src": "3807:3:3"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 8,
                      "end_col_offset": 22,
                      "end_lineno": 146,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 8,
                        "end_col_offset": 17,
                        "end_lineno": 146,
                        "id": "ERC20Mock",
                        "lineno": 146,
                        "node_id": 805,
                        "src": "3797:9:3"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 146,
                      "node_id": 804,
                      "src": "3797:14:3"
                    }
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 146,
                  "node_id": 802,
                  "src": "3797:42:3"
                }
              },
              {
                "annotation": {
                  "ast_type": "Subscript",
                  "col_offset": 19,
                  "end_col_offset": 28,
                  "end_lineno": 147,
                  "lineno": 147,
                  "node_id": 817,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 25,
                    "end_col_offset": 27,
                    "end_lineno": 147,
                    "lineno": 147,
                    "node_id": 820,
                    "src": "3865:2:3",
                    "value": {
                      "ast_type": "Int",
                      "col_offset": 25,
                      "end_col_offset": 27,
                      "end_lineno": 147,
                      "lineno": 147,
                      "node_id": 821,
                      "src": "3865:2:3",
                      "value": 32
                    }
                  },
                  "src": "3859:9:3",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 24,
                    "end_lineno": 147,
                    "id": "Bytes",
                    "lineno": 147,
                    "node_id": 818,
                    "src": "3859:5:3"
                  }
                },
                "ast_type": "AnnAssign",
                "col_offset": 8,
                "end_col_offset": 9,
                "end_lineno": 155,
                "lineno": 147,
                "node_id": 814,
                "simple": 1,
                "src": "3848:259:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 17,
                  "end_lineno": 147,
                  "id": "_response",
                  "lineno": 147,
                  "node_id": 815,
                  "src": "3848:9:3"
                },
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 12,
                      "end_col_offset": 15,
                      "end_lineno": 148,
                      "id": "_to",
                      "lineno": 148,
                      "node_id": 826,
                      "src": "3893:3:3"
                    },
                    {
                      "args": [
                        {
                          "args": [
                            {
                              "ast_type": "Str",
                              "col_offset": 26,
                              "end_col_offset": 53,
                              "end_lineno": 150,
                              "lineno": 150,
                              "node_id": 834,
                              "src": "3944:27:3",
                              "value": "transfer(address,uint256)"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 54,
                          "end_lineno": 150,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 25,
                            "end_lineno": 150,
                            "id": "method_id",
                            "lineno": 150,
                            "node_id": 832,
                            "src": "3934:9:3"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 150,
                          "node_id": 831,
                          "src": "3934:38:3"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 31,
                              "end_lineno": 151,
                              "id": "_sender",
                              "lineno": 151,
                              "node_id": 838,
                              "src": "3998:7:3"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 33,
                              "end_col_offset": 40,
                              "end_lineno": 151,
                              "id": "bytes32",
                              "lineno": 151,
                              "node_id": 840,
                              "src": "4007:7:3"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 41,
                          "end_lineno": 151,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 151,
                            "id": "convert",
                            "lineno": 151,
                            "node_id": 836,
                            "src": "3990:7:3"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 151,
                          "node_id": 835,
                          "src": "3990:25:3"
                        },
                        {
                          "args": [
                            {
                              "ast_type": "Name",
                              "col_offset": 24,
                              "end_col_offset": 26,
                              "end_lineno": 152,
                              "id": "dy",
                              "lineno": 152,
                              "node_id": 845,
                              "src": "4041:2:3"
                            },
                            {
                              "ast_type": "Name",
                              "col_offset": 28,
                              "end_col_offset": 35,
                              "end_lineno": 152,
                              "id": "bytes32",
                              "lineno": 152,
                              "node_id": 847,
                              "src": "4045:7:3"
                            }
                          ],
                          "ast_type": "Call",
                          "col_offset": 16,
                          "end_col_offset": 36,
                          "end_lineno": 152,
                          "func": {
                            "ast_type": "Name",
                            "col_offset": 16,
                            "end_col_offset": 23,
                            "end_lineno": 152,
                            "id": "convert",
                            "lineno": 152,
                            "node_id": 843,
                            "src": "4033:7:3"
                          },
                          "keyword": null,
                          "keywords": [],
                          "lineno": 152,
                          "node_id": 842,
                          "src": "4033:20:3"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 12,
                      "end_col_offset": 13,
                      "end_lineno": 153,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 12,
                        "end_col_offset": 18,
                        "end_lineno": 149,
                        "id": "concat",
                        "lineno": 149,
                        "node_id": 829,
                        "src": "3910:6:3"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 149,
                      "node_id": 828,
                      "src": "3910:158:3"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 31,
                  "end_col_offset": 9,
                  "end_lineno": 155,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 31,
                    "end_col_offset": 39,
                    "end_lineno": 147,
                    "id": "raw_call",
                    "lineno": 147,
                    "node_id": 824,
                    "src": "3871:8:3"
                  },
                  "keyword": null,
                  "keywords": [
                    {
                      "arg": "max_outsize",
                      "ast_type": "keyword",
                      "col_offset": 12,
                      "end_col_offset": 26,
                      "end_lineno": 154,
                      "lineno": 154,
                      "node_id": 849,
                      "src": "4082:14:3",
                      "value": {
                        "ast_type": "Int",
                        "col_offset": 24,
                        "end_col_offset": 26,
                        "end_lineno": 154,
                        "lineno": 154,
                        "node_id": 850,
                        "src": "4094:2:3",
                        "value": 32
                      }
                    }
                  ],
                  "lineno": 147,
                  "node_id": 823,
                  "src": "3871:236:3"
                }
              },
              {
                "ast_type": "If",
                "body": [
                  {
                    "ast_type": "Assert",
                    "col_offset": 12,
                    "end_col_offset": 43,
                    "end_lineno": 157,
                    "lineno": 157,
                    "msg": null,
                    "node_id": 860,
                    "src": "4151:31:3",
                    "test": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 27,
                          "end_col_offset": 36,
                          "end_lineno": 157,
                          "id": "_response",
                          "lineno": 157,
                          "node_id": 864,
                          "src": "4166:9:3"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 38,
                          "end_col_offset": 42,
                          "end_lineno": 157,
                          "id": "bool",
                          "lineno": 157,
                          "node_id": 866,
                          "src": "4177:4:3"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 19,
                      "end_col_offset": 43,
                      "end_lineno": 157,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 19,
                        "end_col_offset": 26,
                        "end_lineno": 157,
                        "id": "convert",
                        "lineno": 157,
                        "node_id": 862,
                        "src": "4158:7:3"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 157,
                      "node_id": 861,
                      "src": "4158:24:3"
                    }
                  }
                ],
                "col_offset": 8,
                "end_col_offset": 43,
                "end_lineno": 157,
                "lineno": 156,
                "node_id": 851,
                "orelse": [],
                "src": "4116:66:3",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 11,
                  "end_col_offset": 29,
                  "end_lineno": 156,
                  "left": {
                    "args": [
                      {
                        "ast_type": "Name",
                        "col_offset": 15,
                        "end_col_offset": 24,
                        "end_lineno": 156,
                        "id": "_response",
                        "lineno": 156,
                        "node_id": 856,
                        "src": "4123:9:3"
                      }
                    ],
                    "ast_type": "Call",
                    "col_offset": 11,
                    "end_col_offset": 25,
                    "end_lineno": 156,
                    "func": {
                      "ast_type": "Name",
                      "col_offset": 11,
                      "end_col_offset": 14,
                      "end_lineno": 156,
                      "id": "len",
                      "lineno": 156,
                      "node_id": 854,
                      "src": "4119:3:3"
                    },
                    "keyword": null,
                    "keywords": [],
                    "lineno": 156,
                    "node_id": 853,
                    "src": "4119:14:3"
                  },
                  "lineno": 156,
                  "node_id": 852,
                  "op": {
                    "ast_type": "Gt",
                    "col_offset": 11,
                    "end_col_offset": 29,
                    "end_lineno": 156,
                    "lineno": 156,
                    "node_id": 858,
                    "src": "4119:18:3"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 28,
                    "end_col_offset": 29,
                    "end_lineno": 156,
                    "lineno": 156,
                    "node_id": 859,
                    "src": "4136:1:3",
                    "value": 0
                  },
                  "src": "4119:18:3"
                }
              }
            ],
            "src": "3699:483:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 56,
              "end_lineno": 143,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 10,
                "end_lineno": 143,
                "id": "_to",
                "lineno": 143,
                "node_id": 789,
                "src": "3702:3:3"
              },
              "lineno": 143,
              "node_id": 788,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 56,
                "end_lineno": 143,
                "lineno": 143,
                "node_id": 1090,
                "src": "3702:49:3"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 14,
                "end_col_offset": 56,
                "end_lineno": 143,
                "lineno": 143,
                "node_id": 792,
                "src": "3709:42:3",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "3702:49:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 124,
            "id": "internal",
            "lineno": 124,
            "node_id": 868,
            "src": "3013:8:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 43,
        "end_lineno": 157,
        "lineno": 125,
        "name": "_exchange",
        "node_id": 679,
        "pos": null,
        "returns": null,
        "src": "3022:1160:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 22,
                "end_lineno": 163,
                "id": "int128",
                "lineno": 163,
                "node_id": 873,
                "src": "4242:6:3"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 22,
              "end_lineno": 163,
              "lineno": 163,
              "node_id": 872,
              "src": "4239:9:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 33,
                "end_lineno": 163,
                "id": "int128",
                "lineno": 163,
                "node_id": 876,
                "src": "4253:6:3"
              },
              "arg": "j",
              "ast_type": "arg",
              "col_offset": 24,
              "end_col_offset": 33,
              "end_lineno": 163,
              "lineno": 163,
              "node_id": 875,
              "src": "4250:9:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 46,
                "end_lineno": 163,
                "id": "uint256",
                "lineno": 163,
                "node_id": 879,
                "src": "4265:7:3"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 35,
              "end_col_offset": 46,
              "end_lineno": 163,
              "lineno": 163,
              "node_id": 878,
              "src": "4261:11:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 56,
                "end_col_offset": 63,
                "end_lineno": 163,
                "id": "uint256",
                "lineno": 163,
                "node_id": 882,
                "src": "4282:7:3"
              },
              "arg": "min_dy",
              "ast_type": "arg",
              "col_offset": 48,
              "end_col_offset": 63,
              "end_lineno": 163,
              "lineno": 163,
              "node_id": 881,
              "src": "4274:15:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 63,
          "end_lineno": 163,
          "lineno": 163,
          "node_id": 871,
          "src": "4239:50:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 164,
              "id": "address",
              "lineno": 164,
              "node_id": 887,
              "src": "4303:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 164,
            "lineno": 164,
            "node_id": 884,
            "simple": 1,
            "src": "4296:34:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 164,
              "id": "_from",
              "lineno": 164,
              "node_id": 885,
              "src": "4296:5:3"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 38,
              "end_lineno": 164,
              "lineno": 164,
              "node_id": 889,
              "slice": {
                "ast_type": "Index",
                "col_offset": 36,
                "end_col_offset": 37,
                "end_lineno": 164,
                "lineno": 164,
                "node_id": 894,
                "src": "4328:1:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 37,
                  "end_lineno": 164,
                  "id": "i",
                  "lineno": 164,
                  "node_id": 895,
                  "src": "4328:1:3"
                }
              },
              "src": "4313:17:3",
              "value": {
                "ast_type": "Attribute",
                "attr": "coin_list",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 164,
                "lineno": 164,
                "node_id": 890,
                "src": "4313:14:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 164,
                  "id": "self",
                  "lineno": 164,
                  "node_id": 891,
                  "src": "4313:4:3"
                }
              }
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 30,
                "end_lineno": 166,
                "lineno": 166,
                "msg": null,
                "node_id": 904,
                "src": "4399:22:3",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 30,
                  "end_lineno": 166,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "value",
                    "col_offset": 15,
                    "end_col_offset": 24,
                    "end_lineno": 166,
                    "lineno": 166,
                    "node_id": 906,
                    "src": "4406:9:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 15,
                      "end_col_offset": 18,
                      "end_lineno": 166,
                      "id": "msg",
                      "lineno": 166,
                      "node_id": 907,
                      "src": "4406:3:3"
                    }
                  },
                  "lineno": 166,
                  "node_id": 905,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 30,
                    "end_lineno": 166,
                    "lineno": 166,
                    "node_id": 1090,
                    "src": "4406:15:3"
                  },
                  "right": {
                    "ast_type": "Name",
                    "col_offset": 28,
                    "end_col_offset": 30,
                    "end_lineno": 166,
                    "id": "dx",
                    "lineno": 166,
                    "node_id": 911,
                    "src": "4419:2:3"
                  },
                  "src": "4406:15:3"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 168,
            "lineno": 165,
            "node_id": 898,
            "orelse": [
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 29,
                "end_lineno": 168,
                "lineno": 168,
                "msg": null,
                "node_id": 913,
                "src": "4440:21:3",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 29,
                  "end_lineno": 168,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "value",
                    "col_offset": 15,
                    "end_col_offset": 24,
                    "end_lineno": 168,
                    "lineno": 168,
                    "node_id": 915,
                    "src": "4447:9:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 15,
                      "end_col_offset": 18,
                      "end_lineno": 168,
                      "id": "msg",
                      "lineno": 168,
                      "node_id": 916,
                      "src": "4447:3:3"
                    }
                  },
                  "lineno": 168,
                  "node_id": 914,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 29,
                    "end_lineno": 168,
                    "lineno": 168,
                    "node_id": 1090,
                    "src": "4447:14:3"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 28,
                    "end_col_offset": 29,
                    "end_lineno": 168,
                    "lineno": 168,
                    "node_id": 920,
                    "src": "4460:1:3",
                    "value": 0
                  },
                  "src": "4447:14:3"
                }
              }
            ],
            "src": "4335:126:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 58,
              "end_lineno": 165,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 12,
                "end_lineno": 165,
                "id": "_from",
                "lineno": 165,
                "node_id": 900,
                "src": "4338:5:3"
              },
              "lineno": 165,
              "node_id": 899,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 58,
                "end_lineno": 165,
                "lineno": 165,
                "node_id": 1090,
                "src": "4338:51:3"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 16,
                "end_col_offset": 58,
                "end_lineno": 165,
                "lineno": 165,
                "node_id": 903,
                "src": "4347:42:3",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "4338:51:3"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 68,
            "end_lineno": 170,
            "lineno": 170,
            "node_id": 921,
            "src": "4467:64:3",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 170,
                  "lineno": 170,
                  "node_id": 927,
                  "src": "4482:10:3",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 170,
                    "id": "msg",
                    "lineno": 170,
                    "node_id": 928,
                    "src": "4482:3:3"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 36,
                  "end_lineno": 170,
                  "id": "_from",
                  "lineno": 170,
                  "node_id": 931,
                  "src": "4494:5:3"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 38,
                  "end_col_offset": 55,
                  "end_lineno": 170,
                  "lineno": 170,
                  "node_id": 933,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 53,
                    "end_col_offset": 54,
                    "end_lineno": 170,
                    "lineno": 170,
                    "node_id": 938,
                    "src": "4516:1:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 53,
                      "end_col_offset": 54,
                      "end_lineno": 170,
                      "id": "j",
                      "lineno": 170,
                      "node_id": 939,
                      "src": "4516:1:3"
                    }
                  },
                  "src": "4501:17:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 38,
                    "end_col_offset": 52,
                    "end_lineno": 170,
                    "lineno": 170,
                    "node_id": 934,
                    "src": "4501:14:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 38,
                      "end_col_offset": 42,
                      "end_lineno": 170,
                      "id": "self",
                      "lineno": 170,
                      "node_id": 935,
                      "src": "4501:4:3"
                    }
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 57,
                  "end_col_offset": 59,
                  "end_lineno": 170,
                  "id": "dx",
                  "lineno": 170,
                  "node_id": 942,
                  "src": "4520:2:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 61,
                  "end_col_offset": 67,
                  "end_lineno": 170,
                  "id": "min_dy",
                  "lineno": 170,
                  "node_id": 944,
                  "src": "4524:6:3"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 68,
              "end_lineno": 170,
              "func": {
                "ast_type": "Attribute",
                "attr": "_exchange",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 170,
                "lineno": 170,
                "node_id": 923,
                "src": "4467:14:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 170,
                  "id": "self",
                  "lineno": 170,
                  "node_id": 924,
                  "src": "4467:4:3"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 170,
              "node_id": 922,
              "src": "4467:64:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 160,
            "id": "external",
            "lineno": 160,
            "node_id": 946,
            "src": "4186:8:3"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 161,
            "id": "payable",
            "lineno": 161,
            "node_id": 948,
            "src": "4196:7:3"
          },
          {
            "args": [
              {
                "ast_type": "Str",
                "col_offset": 14,
                "end_col_offset": 20,
                "end_lineno": 162,
                "lineno": 162,
                "node_id": 953,
                "src": "4218:6:3",
                "value": "lock"
              }
            ],
            "ast_type": "Call",
            "col_offset": 1,
            "end_col_offset": 21,
            "end_lineno": 162,
            "func": {
              "ast_type": "Name",
              "col_offset": 1,
              "end_col_offset": 13,
              "end_lineno": 162,
              "id": "nonreentrant",
              "lineno": 162,
              "node_id": 951,
              "src": "4205:12:3"
            },
            "keyword": null,
            "keywords": [],
            "lineno": 162,
            "node_id": 950,
            "src": "4205:20:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 68,
        "end_lineno": 170,
        "lineno": 163,
        "name": "exchange",
        "node_id": 870,
        "pos": null,
        "returns": null,
        "src": "4226:305:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 33,
                "end_lineno": 176,
                "id": "int128",
                "lineno": 176,
                "node_id": 957,
                "src": "4602:6:3"
              },
              "arg": "i",
              "ast_type": "arg",
              "col_offset": 24,
              "end_col_offset": 33,
              "end_lineno": 176,
              "lineno": 176,
              "node_id": 956,
              "src": "4599:9:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 38,
                "end_col_offset": 44,
                "end_lineno": 176,
                "id": "int128",
                "lineno": 176,
                "node_id": 960,
                "src": "4613:6:3"
              },
              "arg": "j",
              "ast_type": "arg",
              "col_offset": 35,
              "end_col_offset": 44,
              "end_lineno": 176,
              "lineno": 176,
              "node_id": 959,
              "src": "4610:9:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 50,
                "end_col_offset": 57,
                "end_lineno": 176,
                "id": "uint256",
                "lineno": 176,
                "node_id": 963,
                "src": "4625:7:3"
              },
              "arg": "dx",
              "ast_type": "arg",
              "col_offset": 46,
              "end_col_offset": 57,
              "end_lineno": 176,
              "lineno": 176,
              "node_id": 962,
              "src": "4621:11:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 67,
                "end_col_offset": 74,
                "end_lineno": 176,
                "id": "uint256",
                "lineno": 176,
                "node_id": 966,
                "src": "4642:7:3"
              },
              "arg": "min_dy",
              "ast_type": "arg",
              "col_offset": 59,
              "end_col_offset": 74,
              "end_lineno": 176,
              "lineno": 176,
              "node_id": 965,
              "src": "4634:15:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 24,
          "default": null,
          "defaults": [],
          "end_col_offset": 74,
          "end_lineno": 176,
          "lineno": 176,
          "node_id": 955,
          "src": "4599:50:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 177,
              "id": "address",
              "lineno": 177,
              "node_id": 971,
              "src": "4663:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 177,
            "lineno": 177,
            "node_id": 968,
            "simple": 1,
            "src": "4656:29:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 177,
              "id": "_from",
              "lineno": 177,
              "node_id": 969,
              "src": "4656:5:3"
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 33,
              "end_lineno": 177,
              "id": "ZERO_ADDRESS",
              "lineno": 177,
              "node_id": 973,
              "src": "4673:12:3"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 9,
              "end_col_offset": 16,
              "end_lineno": 178,
              "id": "address",
              "lineno": 178,
              "node_id": 978,
              "src": "4695:7:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 178,
            "lineno": 178,
            "node_id": 975,
            "simple": 1,
            "src": "4690:27:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 7,
              "end_lineno": 178,
              "id": "_to",
              "lineno": 178,
              "node_id": 976,
              "src": "4690:3:3"
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 31,
              "end_lineno": 178,
              "id": "ZERO_ADDRESS",
              "lineno": 178,
              "node_id": 980,
              "src": "4705:12:3"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 25,
              "end_lineno": 180,
              "id": "int128",
              "lineno": 180,
              "node_id": 985,
              "src": "4738:6:3"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 61,
            "end_lineno": 180,
            "lineno": 180,
            "node_id": 982,
            "simple": 1,
            "src": "4723:57:3",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 180,
              "id": "max_base_coin",
              "lineno": 180,
              "node_id": 983,
              "src": "4723:13:3"
            },
            "value": {
              "args": [
                {
                  "ast_type": "BinOp",
                  "col_offset": 36,
                  "end_col_offset": 52,
                  "end_lineno": 180,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "n_coins",
                    "col_offset": 36,
                    "end_col_offset": 48,
                    "end_lineno": 180,
                    "lineno": 180,
                    "node_id": 991,
                    "src": "4755:12:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 36,
                      "end_col_offset": 40,
                      "end_lineno": 180,
                      "id": "self",
                      "lineno": 180,
                      "node_id": 992,
                      "src": "4755:4:3"
                    }
                  },
                  "lineno": 180,
                  "node_id": 990,
                  "op": {
                    "ast_type": "Sub",
                    "col_offset": 36,
                    "end_col_offset": 52,
                    "end_lineno": 180,
                    "lineno": 180,
                    "node_id": 1065,
                    "src": "4755:16:3"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 51,
                    "end_col_offset": 52,
                    "end_lineno": 180,
                    "lineno": 180,
                    "node_id": 996,
                    "src": "4770:1:3",
                    "value": 1
                  },
                  "src": "4755:16:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 54,
                  "end_col_offset": 60,
                  "end_lineno": 180,
                  "id": "int128",
                  "lineno": 180,
                  "node_id": 997,
                  "src": "4773:6:3"
                }
              ],
              "ast_type": "Call",
              "col_offset": 28,
              "end_col_offset": 61,
              "end_lineno": 180,
              "func": {
                "ast_type": "Name",
                "col_offset": 28,
                "end_col_offset": 35,
                "end_lineno": 180,
                "id": "convert",
                "lineno": 180,
                "node_id": 988,
                "src": "4747:7:3"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 180,
              "node_id": 987,
              "src": "4747:33:3"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 33,
                "end_lineno": 182,
                "lineno": 182,
                "node_id": 1006,
                "src": "4815:25:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 13,
                  "end_lineno": 182,
                  "id": "_from",
                  "lineno": 182,
                  "node_id": 1007,
                  "src": "4815:5:3"
                },
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 16,
                  "end_col_offset": 33,
                  "end_lineno": 182,
                  "lineno": 182,
                  "node_id": 1009,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 31,
                    "end_col_offset": 32,
                    "end_lineno": 182,
                    "lineno": 182,
                    "node_id": 1014,
                    "src": "4838:1:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 31,
                      "end_col_offset": 32,
                      "end_lineno": 182,
                      "id": "i",
                      "lineno": 182,
                      "node_id": 1015,
                      "src": "4838:1:3"
                    }
                  },
                  "src": "4823:17:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 16,
                    "end_col_offset": 30,
                    "end_lineno": 182,
                    "lineno": 182,
                    "node_id": 1010,
                    "src": "4823:14:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 16,
                      "end_col_offset": 20,
                      "end_lineno": 182,
                      "id": "self",
                      "lineno": 182,
                      "node_id": 1011,
                      "src": "4823:4:3"
                    }
                  }
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 52,
            "end_lineno": 184,
            "lineno": 181,
            "node_id": 999,
            "orelse": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 52,
                "end_lineno": 184,
                "lineno": 184,
                "node_id": 1018,
                "src": "4859:44:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 13,
                  "end_lineno": 184,
                  "id": "_from",
                  "lineno": 184,
                  "node_id": 1019,
                  "src": "4859:5:3"
                },
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 16,
                  "end_col_offset": 52,
                  "end_lineno": 184,
                  "lineno": 184,
                  "node_id": 1021,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 36,
                    "end_col_offset": 51,
                    "end_lineno": 184,
                    "lineno": 184,
                    "node_id": 1026,
                    "src": "4887:15:3",
                    "value": {
                      "ast_type": "BinOp",
                      "col_offset": 36,
                      "end_col_offset": 51,
                      "end_lineno": 184,
                      "left": {
                        "ast_type": "Name",
                        "col_offset": 36,
                        "end_col_offset": 37,
                        "end_lineno": 184,
                        "id": "i",
                        "lineno": 184,
                        "node_id": 1028,
                        "src": "4887:1:3"
                      },
                      "lineno": 184,
                      "node_id": 1027,
                      "op": {
                        "ast_type": "Sub",
                        "col_offset": 36,
                        "end_col_offset": 51,
                        "end_lineno": 184,
                        "lineno": 184,
                        "node_id": 1065,
                        "src": "4887:15:3"
                      },
                      "right": {
                        "ast_type": "Name",
                        "col_offset": 38,
                        "end_col_offset": 51,
                        "end_lineno": 184,
                        "id": "max_base_coin",
                        "lineno": 184,
                        "node_id": 1031,
                        "src": "4889:13:3"
                      },
                      "src": "4887:15:3"
                    }
                  },
                  "src": "4867:36:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "base_coin_list",
                    "col_offset": 16,
                    "end_col_offset": 35,
                    "end_lineno": 184,
                    "lineno": 184,
                    "node_id": 1022,
                    "src": "4867:19:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 16,
                      "end_col_offset": 20,
                      "end_lineno": 184,
                      "id": "self",
                      "lineno": 184,
                      "node_id": 1023,
                      "src": "4867:4:3"
                    }
                  }
                }
              }
            ],
            "src": "4785:118:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 24,
              "end_lineno": 181,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 8,
                "end_lineno": 181,
                "id": "i",
                "lineno": 181,
                "node_id": 1001,
                "src": "4788:1:3"
              },
              "lineno": 181,
              "node_id": 1000,
              "op": {
                "ast_type": "Lt",
                "col_offset": 7,
                "end_col_offset": 24,
                "end_lineno": 181,
                "lineno": 181,
                "node_id": 1038,
                "src": "4788:17:3"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 24,
                "end_lineno": 181,
                "id": "max_base_coin",
                "lineno": 181,
                "node_id": 1004,
                "src": "4792:13:3"
              },
              "src": "4788:17:3"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 31,
                "end_lineno": 186,
                "lineno": 186,
                "node_id": 1041,
                "src": "4938:23:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 11,
                  "end_lineno": 186,
                  "id": "_to",
                  "lineno": 186,
                  "node_id": 1042,
                  "src": "4938:3:3"
                },
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 14,
                  "end_col_offset": 31,
                  "end_lineno": 186,
                  "lineno": 186,
                  "node_id": 1044,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 29,
                    "end_col_offset": 30,
                    "end_lineno": 186,
                    "lineno": 186,
                    "node_id": 1049,
                    "src": "4959:1:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 29,
                      "end_col_offset": 30,
                      "end_lineno": 186,
                      "id": "j",
                      "lineno": 186,
                      "node_id": 1050,
                      "src": "4959:1:3"
                    }
                  },
                  "src": "4944:17:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "coin_list",
                    "col_offset": 14,
                    "end_col_offset": 28,
                    "end_lineno": 186,
                    "lineno": 186,
                    "node_id": 1045,
                    "src": "4944:14:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 14,
                      "end_col_offset": 18,
                      "end_lineno": 186,
                      "id": "self",
                      "lineno": 186,
                      "node_id": 1046,
                      "src": "4944:4:3"
                    }
                  }
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 50,
            "end_lineno": 188,
            "lineno": 185,
            "node_id": 1034,
            "orelse": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 50,
                "end_lineno": 188,
                "lineno": 188,
                "node_id": 1053,
                "src": "4980:42:3",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 11,
                  "end_lineno": 188,
                  "id": "_to",
                  "lineno": 188,
                  "node_id": 1054,
                  "src": "4980:3:3"
                },
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 14,
                  "end_col_offset": 50,
                  "end_lineno": 188,
                  "lineno": 188,
                  "node_id": 1056,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 34,
                    "end_col_offset": 49,
                    "end_lineno": 188,
                    "lineno": 188,
                    "node_id": 1061,
                    "src": "5006:15:3",
                    "value": {
                      "ast_type": "BinOp",
                      "col_offset": 34,
                      "end_col_offset": 49,
                      "end_lineno": 188,
                      "left": {
                        "ast_type": "Name",
                        "col_offset": 34,
                        "end_col_offset": 35,
                        "end_lineno": 188,
                        "id": "j",
                        "lineno": 188,
                        "node_id": 1063,
                        "src": "5006:1:3"
                      },
                      "lineno": 188,
                      "node_id": 1062,
                      "op": {
                        "ast_type": "Sub",
                        "col_offset": 34,
                        "end_col_offset": 49,
                        "end_lineno": 188,
                        "lineno": 188,
                        "node_id": 1065,
                        "src": "5006:15:3"
                      },
                      "right": {
                        "ast_type": "Name",
                        "col_offset": 36,
                        "end_col_offset": 49,
                        "end_lineno": 188,
                        "id": "max_base_coin",
                        "lineno": 188,
                        "node_id": 1066,
                        "src": "5008:13:3"
                      },
                      "src": "5006:15:3"
                    }
                  },
                  "src": "4986:36:3",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "base_coin_list",
                    "col_offset": 14,
                    "end_col_offset": 33,
                    "end_lineno": 188,
                    "lineno": 188,
                    "node_id": 1057,
                    "src": "4986:19:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 14,
                      "end_col_offset": 18,
                      "end_lineno": 188,
                      "id": "self",
                      "lineno": 188,
                      "node_id": 1058,
                      "src": "4986:4:3"
                    }
                  }
                }
              }
            ],
            "src": "4908:114:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 24,
              "end_lineno": 185,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 8,
                "end_lineno": 185,
                "id": "j",
                "lineno": 185,
                "node_id": 1036,
                "src": "4911:1:3"
              },
              "lineno": 185,
              "node_id": 1035,
              "op": {
                "ast_type": "Lt",
                "col_offset": 7,
                "end_col_offset": 24,
                "end_lineno": 185,
                "lineno": 185,
                "node_id": 1038,
                "src": "4911:17:3"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 24,
                "end_lineno": 185,
                "id": "max_base_coin",
                "lineno": 185,
                "node_id": 1039,
                "src": "4915:13:3"
              },
              "src": "4911:17:3"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 30,
                "end_lineno": 191,
                "lineno": 191,
                "msg": null,
                "node_id": 1075,
                "src": "5092:22:3",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 30,
                  "end_lineno": 191,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "value",
                    "col_offset": 15,
                    "end_col_offset": 24,
                    "end_lineno": 191,
                    "lineno": 191,
                    "node_id": 1077,
                    "src": "5099:9:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 15,
                      "end_col_offset": 18,
                      "end_lineno": 191,
                      "id": "msg",
                      "lineno": 191,
                      "node_id": 1078,
                      "src": "5099:3:3"
                    }
                  },
                  "lineno": 191,
                  "node_id": 1076,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 30,
                    "end_lineno": 191,
                    "lineno": 191,
                    "node_id": 1090,
                    "src": "5099:15:3"
                  },
                  "right": {
                    "ast_type": "Name",
                    "col_offset": 28,
                    "end_col_offset": 30,
                    "end_lineno": 191,
                    "id": "dx",
                    "lineno": 191,
                    "node_id": 1082,
                    "src": "5112:2:3"
                  },
                  "src": "5099:15:3"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 193,
            "lineno": 190,
            "node_id": 1069,
            "orelse": [
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 29,
                "end_lineno": 193,
                "lineno": 193,
                "msg": null,
                "node_id": 1084,
                "src": "5133:21:3",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 29,
                  "end_lineno": 193,
                  "left": {
                    "ast_type": "Attribute",
                    "attr": "value",
                    "col_offset": 15,
                    "end_col_offset": 24,
                    "end_lineno": 193,
                    "lineno": 193,
                    "node_id": 1086,
                    "src": "5140:9:3",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 15,
                      "end_col_offset": 18,
                      "end_lineno": 193,
                      "id": "msg",
                      "lineno": 193,
                      "node_id": 1087,
                      "src": "5140:3:3"
                    }
                  },
                  "lineno": 193,
                  "node_id": 1085,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 29,
                    "end_lineno": 193,
                    "lineno": 193,
                    "node_id": 1090,
                    "src": "5140:14:3"
                  },
                  "right": {
                    "ast_type": "Int",
                    "col_offset": 28,
                    "end_col_offset": 29,
                    "end_lineno": 193,
                    "lineno": 193,
                    "node_id": 1091,
                    "src": "5153:1:3",
                    "value": 0
                  },
                  "src": "5140:14:3"
                }
              }
            ],
            "src": "5028:126:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 58,
              "end_lineno": 190,
              "left": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 12,
                "end_lineno": 190,
                "id": "_from",
                "lineno": 190,
                "node_id": 1071,
                "src": "5031:5:3"
              },
              "lineno": 190,
              "node_id": 1070,
              "op": {
                "ast_type": "Eq",
                "col_offset": 7,
                "end_col_offset": 58,
                "end_lineno": 190,
                "lineno": 190,
                "node_id": 1090,
                "src": "5031:51:3"
              },
              "right": {
                "ast_type": "Hex",
                "col_offset": 16,
                "end_col_offset": 58,
                "end_lineno": 190,
                "lineno": 190,
                "node_id": 1074,
                "src": "5040:42:3",
                "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
              },
              "src": "5031:51:3"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 54,
            "end_lineno": 195,
            "lineno": 195,
            "node_id": 1092,
            "src": "5160:50:3",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 195,
                  "lineno": 195,
                  "node_id": 1098,
                  "src": "5175:10:3",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 195,
                    "id": "msg",
                    "lineno": 195,
                    "node_id": 1099,
                    "src": "5175:3:3"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 36,
                  "end_lineno": 195,
                  "id": "_from",
                  "lineno": 195,
                  "node_id": 1102,
                  "src": "5187:5:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 41,
                  "end_lineno": 195,
                  "id": "_to",
                  "lineno": 195,
                  "node_id": 1104,
                  "src": "5194:3:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 43,
                  "end_col_offset": 45,
                  "end_lineno": 195,
                  "id": "dx",
                  "lineno": 195,
                  "node_id": 1106,
                  "src": "5199:2:3"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 47,
                  "end_col_offset": 53,
                  "end_lineno": 195,
                  "id": "min_dy",
                  "lineno": 195,
                  "node_id": 1108,
                  "src": "5203:6:3"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 54,
              "end_lineno": 195,
              "func": {
                "ast_type": "Attribute",
                "attr": "_exchange",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 195,
                "lineno": 195,
                "node_id": 1094,
                "src": "5160:14:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 195,
                  "id": "self",
                  "lineno": 195,
                  "node_id": 1095,
                  "src": "5160:4:3"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 195,
              "node_id": 1093,
              "src": "5160:50:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 173,
            "id": "external",
            "lineno": 173,
            "node_id": 1110,
            "src": "4535:8:3"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 174,
            "id": "payable",
            "lineno": 174,
            "node_id": 1112,
            "src": "4545:7:3"
          },
          {
            "args": [
              {
                "ast_type": "Str",
                "col_offset": 14,
                "end_col_offset": 20,
                "end_lineno": 175,
                "lineno": 175,
                "node_id": 1117,
                "src": "4567:6:3",
                "value": "lock"
              }
            ],
            "ast_type": "Call",
            "col_offset": 1,
            "end_col_offset": 21,
            "end_lineno": 175,
            "func": {
              "ast_type": "Name",
              "col_offset": 1,
              "end_col_offset": 13,
              "end_lineno": 175,
              "id": "nonreentrant",
              "lineno": 175,
              "node_id": 1115,
              "src": "4554:12:3"
            },
            "keyword": null,
            "keywords": [],
            "lineno": 175,
            "node_id": 1114,
            "src": "4554:20:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 54,
        "end_lineno": 195,
        "lineno": 176,
        "name": "exchange_underlying",
        "node_id": 954,
        "pos": null,
        "returns": null,
        "src": "4575:635:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 15,
                "end_lineno": 202,
                "id": "uint256",
                "lineno": 202,
                "node_id": 1121,
                "src": "5264:7:3"
              },
              "arg": "_A",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 202,
              "lineno": 202,
              "node_id": 1120,
              "src": "5260:11:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 23,
                "end_lineno": 203,
                "id": "uint256",
                "lineno": 203,
                "node_id": 1124,
                "src": "5289:7:3"
              },
              "arg": "_initial_A",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 203,
              "lineno": 203,
              "node_id": 1123,
              "src": "5277:19:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 21,
                "end_col_offset": 28,
                "end_lineno": 204,
                "id": "uint256",
                "lineno": 204,
                "node_id": 1127,
                "src": "5319:7:3"
              },
              "arg": "_initial_A_time",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 28,
              "end_lineno": 204,
              "lineno": 204,
              "node_id": 1126,
              "src": "5302:24:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 15,
                "end_col_offset": 22,
                "end_lineno": 205,
                "id": "uint256",
                "lineno": 205,
                "node_id": 1130,
                "src": "5343:7:3"
              },
              "arg": "_future_A",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 22,
              "end_lineno": 205,
              "lineno": 205,
              "node_id": 1129,
              "src": "5332:18:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 20,
                "end_col_offset": 27,
                "end_lineno": 206,
                "id": "uint256",
                "lineno": 206,
                "node_id": 1133,
                "src": "5372:7:3"
              },
              "arg": "_future_A_time",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 27,
              "end_lineno": 206,
              "lineno": 206,
              "node_id": 1132,
              "src": "5356:23:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 4,
          "default": null,
          "defaults": [],
          "end_col_offset": 27,
          "end_lineno": 206,
          "lineno": 202,
          "node_id": 1119,
          "src": "5260:119:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 208,
            "lineno": 208,
            "node_id": 1135,
            "src": "5387:11:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "A",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 208,
              "lineno": 208,
              "node_id": 1136,
              "src": "5387:6:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 208,
                "id": "self",
                "lineno": 208,
                "node_id": 1137,
                "src": "5387:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 13,
              "end_col_offset": 15,
              "end_lineno": 208,
              "id": "_A",
              "lineno": 208,
              "node_id": 1140,
              "src": "5396:2:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 209,
            "lineno": 209,
            "node_id": 1142,
            "src": "5403:27:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "initial_A",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 209,
              "lineno": 209,
              "node_id": 1143,
              "src": "5403:14:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 209,
                "id": "self",
                "lineno": 209,
                "node_id": 1144,
                "src": "5403:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 31,
              "end_lineno": 209,
              "id": "_initial_A",
              "lineno": 209,
              "node_id": 1147,
              "src": "5420:10:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 41,
            "end_lineno": 210,
            "lineno": 210,
            "node_id": 1149,
            "src": "5435:37:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "initial_A_time",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 210,
              "lineno": 210,
              "node_id": 1150,
              "src": "5435:19:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 210,
                "id": "self",
                "lineno": 210,
                "node_id": 1151,
                "src": "5435:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 26,
              "end_col_offset": 41,
              "end_lineno": 210,
              "id": "_initial_A_time",
              "lineno": 210,
              "node_id": 1154,
              "src": "5457:15:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 211,
            "lineno": 211,
            "node_id": 1156,
            "src": "5477:25:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_A",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 211,
              "lineno": 211,
              "node_id": 1157,
              "src": "5477:13:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 211,
                "id": "self",
                "lineno": 211,
                "node_id": 1158,
                "src": "5477:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 20,
              "end_col_offset": 29,
              "end_lineno": 211,
              "id": "_future_A",
              "lineno": 211,
              "node_id": 1161,
              "src": "5493:9:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 39,
            "end_lineno": 212,
            "lineno": 212,
            "node_id": 1163,
            "src": "5507:35:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_A_time",
              "col_offset": 4,
              "end_col_offset": 22,
              "end_lineno": 212,
              "lineno": 212,
              "node_id": 1164,
              "src": "5507:18:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 212,
                "id": "self",
                "lineno": 212,
                "node_id": 1165,
                "src": "5507:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 25,
              "end_col_offset": 39,
              "end_lineno": 212,
              "id": "_future_A_time",
              "lineno": 212,
              "node_id": 1168,
              "src": "5528:14:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 200,
            "id": "external",
            "lineno": 200,
            "node_id": 1170,
            "src": "5235:8:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 39,
        "end_lineno": 212,
        "lineno": 201,
        "name": "_set_A",
        "node_id": 1118,
        "pos": null,
        "returns": null,
        "src": "5244:298:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 10,
                "end_col_offset": 17,
                "end_lineno": 217,
                "id": "uint256",
                "lineno": 217,
                "node_id": 1175,
                "src": "5590:7:3"
              },
              "arg": "_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 217,
              "lineno": 217,
              "node_id": 1174,
              "src": "5584:13:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 23,
                "end_lineno": 218,
                "id": "uint256",
                "lineno": 218,
                "node_id": 1178,
                "src": "5615:7:3"
              },
              "arg": "_admin_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 218,
              "lineno": 218,
              "node_id": 1177,
              "src": "5603:19:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 17,
                "end_col_offset": 24,
                "end_lineno": 219,
                "id": "uint256",
                "lineno": 219,
                "node_id": 1181,
                "src": "5641:7:3"
              },
              "arg": "_future_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 24,
              "end_lineno": 219,
              "lineno": 219,
              "node_id": 1180,
              "src": "5628:20:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 220,
                "id": "uint256",
                "lineno": 220,
                "node_id": 1184,
                "src": "5673:7:3"
              },
              "arg": "_future_admin_fee",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 220,
              "lineno": 220,
              "node_id": 1183,
              "src": "5654:26:3"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 221,
                "id": "address",
                "lineno": 221,
                "node_id": 1187,
                "src": "5701:7:3"
              },
              "arg": "_future_owner",
              "ast_type": "arg",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 221,
              "lineno": 221,
              "node_id": 1186,
              "src": "5686:22:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 4,
          "default": null,
          "defaults": [],
          "end_col_offset": 26,
          "end_lineno": 221,
          "lineno": 217,
          "node_id": 1173,
          "src": "5584:124:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 19,
            "end_lineno": 223,
            "lineno": 223,
            "node_id": 1189,
            "src": "5716:15:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "fee",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 223,
              "lineno": 223,
              "node_id": 1190,
              "src": "5716:8:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 223,
                "id": "self",
                "lineno": 223,
                "node_id": 1191,
                "src": "5716:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 15,
              "end_col_offset": 19,
              "end_lineno": 223,
              "id": "_fee",
              "lineno": 223,
              "node_id": 1194,
              "src": "5727:4:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 224,
            "lineno": 224,
            "node_id": 1196,
            "src": "5736:27:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "admin_fee",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 224,
              "lineno": 224,
              "node_id": 1197,
              "src": "5736:14:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 224,
                "id": "self",
                "lineno": 224,
                "node_id": 1198,
                "src": "5736:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 31,
              "end_lineno": 224,
              "id": "_admin_fee",
              "lineno": 224,
              "node_id": 1201,
              "src": "5753:10:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 225,
            "lineno": 225,
            "node_id": 1203,
            "src": "5768:29:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_fee",
              "col_offset": 4,
              "end_col_offset": 19,
              "end_lineno": 225,
              "lineno": 225,
              "node_id": 1204,
              "src": "5768:15:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 225,
                "id": "self",
                "lineno": 225,
                "node_id": 1205,
                "src": "5768:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 22,
              "end_col_offset": 33,
              "end_lineno": 225,
              "id": "_future_fee",
              "lineno": 225,
              "node_id": 1208,
              "src": "5786:11:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 226,
            "lineno": 226,
            "node_id": 1210,
            "src": "5802:41:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_admin_fee",
              "col_offset": 4,
              "end_col_offset": 25,
              "end_lineno": 226,
              "lineno": 226,
              "node_id": 1211,
              "src": "5802:21:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 226,
                "id": "self",
                "lineno": 226,
                "node_id": 1212,
                "src": "5802:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 28,
              "end_col_offset": 45,
              "end_lineno": 226,
              "id": "_future_admin_fee",
              "lineno": 226,
              "node_id": 1215,
              "src": "5826:17:3"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 37,
            "end_lineno": 227,
            "lineno": 227,
            "node_id": 1217,
            "src": "5848:33:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "future_owner",
              "col_offset": 4,
              "end_col_offset": 21,
              "end_lineno": 227,
              "lineno": 227,
              "node_id": 1218,
              "src": "5848:17:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 227,
                "id": "self",
                "lineno": 227,
                "node_id": 1219,
                "src": "5848:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 37,
              "end_lineno": 227,
              "id": "_future_owner",
              "lineno": 227,
              "node_id": 1222,
              "src": "5868:13:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 215,
            "id": "external",
            "lineno": 215,
            "node_id": 1224,
            "src": "5546:8:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 37,
        "end_lineno": 227,
        "lineno": 216,
        "name": "_set_fees_and_owner",
        "node_id": 1172,
        "pos": null,
        "returns": null,
        "src": "5555:326:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 33,
                "end_col_offset": 43,
                "end_lineno": 230,
                "lineno": 230,
                "node_id": 1229,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 41,
                  "end_col_offset": 42,
                  "end_lineno": 230,
                  "lineno": 230,
                  "node_id": 1232,
                  "src": "5934:1:3",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 41,
                    "end_col_offset": 42,
                    "end_lineno": 230,
                    "lineno": 230,
                    "node_id": 1233,
                    "src": "5934:1:3",
                    "value": 4
                  }
                },
                "src": "5926:10:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 40,
                  "end_lineno": 230,
                  "id": "uint256",
                  "lineno": 230,
                  "node_id": 1230,
                  "src": "5926:7:3"
                }
              },
              "arg": "_new_balances",
              "ast_type": "arg",
              "col_offset": 18,
              "end_col_offset": 43,
              "end_lineno": 230,
              "lineno": 230,
              "node_id": 1228,
              "src": "5911:25:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 18,
          "default": null,
          "defaults": [],
          "end_col_offset": 43,
          "end_lineno": 230,
          "lineno": 230,
          "node_id": 1227,
          "src": "5911:25:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 231,
            "lineno": 231,
            "node_id": 1235,
            "src": "5943:30:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "_balances",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 231,
              "lineno": 231,
              "node_id": 1236,
              "src": "5943:14:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 231,
                "id": "self",
                "lineno": 231,
                "node_id": 1237,
                "src": "5943:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 21,
              "end_col_offset": 34,
              "end_lineno": 231,
              "id": "_new_balances",
              "lineno": 231,
              "node_id": 1240,
              "src": "5960:13:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 229,
            "id": "external",
            "lineno": 229,
            "node_id": 1242,
            "src": "5884:8:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 34,
        "end_lineno": 231,
        "lineno": 230,
        "name": "_set_balances",
        "node_id": 1226,
        "pos": null,
        "returns": null,
        "src": "5893:80:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 38,
                "end_lineno": 235,
                "id": "uint256",
                "lineno": 235,
                "node_id": 1247,
                "src": "6017:7:3"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 23,
              "end_col_offset": 38,
              "end_lineno": 235,
              "lineno": 235,
              "node_id": 1246,
              "src": "6009:15:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 23,
          "default": null,
          "defaults": [],
          "end_col_offset": 38,
          "end_lineno": 235,
          "lineno": 235,
          "node_id": 1245,
          "src": "6009:15:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 236,
            "lineno": 236,
            "node_id": 1249,
            "src": "6031:31:3",
            "target": {
              "ast_type": "Attribute",
              "attr": "get_virtual_price",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 236,
              "lineno": 236,
              "node_id": 1250,
              "src": "6031:22:3",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 236,
                "id": "self",
                "lineno": 236,
                "node_id": 1251,
                "src": "6031:4:3"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 29,
              "end_col_offset": 35,
              "end_lineno": 236,
              "id": "_value",
              "lineno": 236,
              "node_id": 1254,
              "src": "6056:6:3"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 234,
            "id": "external",
            "lineno": 234,
            "node_id": 1256,
            "src": "5977:8:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 35,
        "end_lineno": 236,
        "lineno": 235,
        "name": "_set_virtual_price",
        "node_id": 1244,
        "pos": null,
        "returns": null,
        "src": "5986:76:3"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 1,
          "end_lineno": 239,
          "lineno": 239,
          "node_id": 1259,
          "src": "6065:1:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Pass",
            "col_offset": 4,
            "end_col_offset": 8,
            "end_lineno": 242,
            "lineno": 242,
            "node_id": 1260,
            "src": "6107:4:3"
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 239,
            "id": "external",
            "lineno": 239,
            "node_id": 1261,
            "src": "6066:8:3"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 240,
            "id": "payable",
            "lineno": 240,
            "node_id": 1263,
            "src": "6076:7:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 8,
        "end_lineno": 242,
        "lineno": 241,
        "name": "__default__",
        "node_id": 1258,
        "pos": null,
        "returns": null,
        "src": "6084:27:3"
      }
    ],
    "col_offset": 0,
    "doc_string": {
      "ast_type": "DocStr",
      "col_offset": 0,
      "end_col_offset": 3,
      "end_lineno": 4,
      "lineno": 2,
      "node_id": 1265,
      "src": "18:47:3",
      "value": "\n@notice Mock Kagla metapool for testing\n"
    },
    "end_col_offset": 8,
    "end_lineno": 242,
    "lineno": 1,
    "name": "contracts/testing/MetaPoolMock.vy",
    "node_id": 0,
    "src": "0:6111:3"
  },
  "bytecode": "",
  "bytecodeSha1": "5e7bb2f9c63f83dc3a6da19aab59bd3d3b305ae4",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.2.12"
  },
  "contractName": "MetaPoolMock",
  "coverageMap": {
    "branches": {
      "0": {
        "MetaPoolMock._exchange": {
          "61": [
            3166,
            3235,
            true
          ],
          "63": [
            3244,
            3295,
            false
          ],
          "65": [
            3630,
            3648,
            false
          ],
          "66": [
            3662,
            3693,
            true
          ],
          "67": [
            3702,
            3751,
            false
          ],
          "72": [
            4119,
            4137,
            false
          ],
          "73": [
            4151,
            4182,
            true
          ]
        },
        "MetaPoolMock._get_dy": {
          "50": [
            1932,
            1983,
            false
          ],
          "53": [
            2085,
            2134,
            false
          ]
        },
        "MetaPoolMock.balances": {
          "27": [
            1721,
            1744,
            true
          ]
        },
        "MetaPoolMock.base_coins": {
          "24": [
            1569,
            1603,
            true
          ]
        },
        "MetaPoolMock.coins": {
          "21": [
            1431,
            1454,
            true
          ]
        },
        "MetaPoolMock.exchange": {
          "1": [
            4338,
            4389,
            false
          ],
          "3": [
            4399,
            4421,
            true
          ],
          "5": [
            4440,
            4461,
            true
          ]
        },
        "MetaPoolMock.exchange_underlying": {
          "8": [
            4788,
            4805,
            false
          ],
          "11": [
            4911,
            4928,
            false
          ],
          "14": [
            5031,
            5082,
            false
          ],
          "16": [
            5092,
            5114,
            true
          ],
          "18": [
            5133,
            5154,
            true
          ]
        },
        "MetaPoolMock.get_dy_underlying": {
          "31": [
            2732,
            2750,
            false
          ],
          "34": [
            2856,
            2874,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "MetaPoolMock._exchange": {
          "59": [
            3119,
            3161
          ],
          "60": [
            3166,
            3235
          ],
          "62": [
            3662,
            3693
          ],
          "64": [
            3305,
            3618
          ],
          "68": [
            3761,
            3778
          ],
          "69": [
            4151,
            4182
          ],
          "70": [
            3797,
            3839
          ],
          "71": [
            3848,
            4107
          ]
        },
        "MetaPoolMock._get_dy": {
          "51": [
            1993,
            2013
          ],
          "52": [
            2032,
            2077
          ],
          "54": [
            2144,
            2162
          ],
          "55": [
            2181,
            2222
          ],
          "56": [
            2228,
            2292
          ],
          "57": [
            2297,
            2343
          ],
          "58": [
            2349,
            2366
          ]
        },
        "MetaPoolMock._set_A": {
          "38": [
            5387,
            5398
          ],
          "39": [
            5403,
            5430
          ],
          "40": [
            5435,
            5472
          ],
          "41": [
            5477,
            5502
          ],
          "42": [
            5507,
            5542
          ]
        },
        "MetaPoolMock._set_balances": {
          "48": [
            5943,
            5973
          ]
        },
        "MetaPoolMock._set_fees_and_owner": {
          "43": [
            5716,
            5731
          ],
          "44": [
            5736,
            5763
          ],
          "45": [
            5768,
            5797
          ],
          "46": [
            5802,
            5843
          ],
          "47": [
            5848,
            5881
          ]
        },
        "MetaPoolMock._set_virtual_price": {
          "49": [
            6031,
            6062
          ]
        },
        "MetaPoolMock.balances": {
          "26": [
            1721,
            1744
          ],
          "28": [
            1749,
            1773
          ]
        },
        "MetaPoolMock.base_coins": {
          "23": [
            1569,
            1603
          ],
          "25": [
            1632,
            1661
          ]
        },
        "MetaPoolMock.coins": {
          "20": [
            1431,
            1454
          ],
          "22": [
            1483,
            1507
          ]
        },
        "MetaPoolMock.exchange": {
          "0": [
            4296,
            4330
          ],
          "2": [
            4399,
            4421
          ],
          "4": [
            4440,
            4461
          ],
          "6": [
            4467,
            4531
          ]
        },
        "MetaPoolMock.exchange_underlying": {
          "7": [
            4723,
            4780
          ],
          "9": [
            4815,
            4840
          ],
          "10": [
            4859,
            4903
          ],
          "12": [
            4938,
            4961
          ],
          "13": [
            4980,
            5022
          ],
          "15": [
            5092,
            5114
          ],
          "17": [
            5133,
            5154
          ],
          "19": [
            5160,
            5210
          ]
        },
        "MetaPoolMock.get_dy": {
          "29": [
            2447,
            2508
          ]
        },
        "MetaPoolMock.get_dy_underlying": {
          "30": [
            2667,
            2724
          ],
          "32": [
            2760,
            2785
          ],
          "33": [
            2804,
            2848
          ],
          "35": [
            2884,
            2907
          ],
          "36": [
            2926,
            2968
          ],
          "37": [
            2974,
            3009
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x600436101561000d5761099f565b600035601c526f7fffffffffffffffffffffffffffffff604052600051633df0212481141561014f576011541561004357600080fd5b60016011556004358080600081121561005857195b607f1c1561006557600080fd5b9050506024358080600081121561007857195b607f1c1561008557600080fd5b9050506004356004811061009857600080fd5b600260c052602060c02001546101405273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101405114156100da5760443534146100d557600080fd5b6100e5565b34156100e557600080fd5b61014051336101605261014051610180526024356004811061010657600080fd5b600260c052602060c02001546101a0526044356101c0526064356101e0526101e0516101c0516101a051610180516101605160065801610b3f565b610140526000506000601155005b63a6417ed6811415610373576011541561016857600080fd5b60016011556004358080600081121561017d57195b607f1c1561018a57600080fd5b9050506024358080600081121561019d57195b607f1c156101aa57600080fd5b905050604036610140376000546001808210156101c657600080fd5b808203905090506040518111156101dc57600080fd5b6101805261018051600435121561021257600435600481106101fd57600080fd5b600260c052602060c02001546101405261025a565b600435610180518082038080600081121561022957195b607f1c1561023657600080fd5b9050905090506004811061024957600080fd5b600360c052602060c0200154610140525b61018051602435121561028c576024356004811061027757600080fd5b600260c052602060c0200154610160526102d4565b60243561018051808203808060008112156102a357195b607f1c156102b057600080fd5b905090509050600481106102c357600080fd5b600360c052602060c0200154610160525b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61014051141561030657604435341461030157600080fd5b610311565b341561031157600080fd5b610140516101605161018051336101a052610140516101c052610160516101e052604435610200526064356102205261022051610200516101e0516101c0516101a05160065801610b3f565b6101805261016052610140526000506000601155005b63c66106578114156103bf57341561038a57600080fd5b6000546004351061039a57600080fd5b600435600481106103aa57600080fd5b600260c052602060c020015460005260206000f35b6387cb4f5781141561040b5734156103d657600080fd5b600154600435106103e657600080fd5b600435600481106103f657600080fd5b600360c052602060c020015460005260206000f35b634903b0d181141561045757341561042257600080fd5b6000546004351061043257600080fd5b6004356004811061044257600080fd5b601060c052602060c020015460005260206000f35b635e0d443f81141561051b57341561046e57600080fd5b6004358080600081121561047e57195b607f1c1561048b57600080fd5b9050506024358080600081121561049e57195b607f1c156104ab57600080fd5b905050600435600481106104be57600080fd5b600260c052602060c020015461014052602435600481106104de57600080fd5b600260c052602060c02001546101605260443561018052610180516101605161014051600658016109a1565b6101e0526101e05160005260206000f35b6307211ef78114156106f057341561053257600080fd5b6004358080600081121561054257195b607f1c1561054f57600080fd5b9050506024358080600081121561056257195b607f1c1561056f57600080fd5b9050506040366101403760005460018082101561058b57600080fd5b808203905090506040518111156105a157600080fd5b61018052610180516004351315156105d857600435600481106105c357600080fd5b600260c052602060c020015461014052610620565b60043561018051808203808060008112156105ef57195b607f1c156105fc57600080fd5b9050905090506004811061060f57600080fd5b600360c052602060c0200154610140525b61018051602435131515610653576024356004811061063e57600080fd5b600260c052602060c02001546101605261069b565b602435610180518082038080600081121561066a57195b607f1c1561067757600080fd5b9050905090506004811061068a57600080fd5b600360c052602060c0200154610160525b610140516101605161018051610140516101a052610160516101c0526044356101e0526101e0516101c0516101a051600658016109a1565b610240526101805261016052610140526102405160005260206000f35b63bb8d331d81141561072757341561070757600080fd5b600435600455602435600555604435600655606435600755608435600855005b63eee22abb81141561076e57341561073e57600080fd5b60843560a01c1561074e57600080fd5b600435600955602435600a55604435600b55606435600c55608435600d55005b63ab203bc48114156107b757341561078557600080fd5b601060c052602060c0206004803582558060200135600183015580604001356002830155806060013560038301555050005b633ba680128114156107d65734156107ce57600080fd5b600435600f55005b63ed52976a8114156107f95734156107ed57600080fd5b60005460005260206000f35b63f446c1d081141561081c57341561081057600080fd5b60045460005260206000f35b635409491a81141561083f57341561083357600080fd5b60055460005260206000f35b632081066c81141561086257341561085657600080fd5b60065460005260206000f35b63b4b577ad81141561088557341561087957600080fd5b60075460005260206000f35b63140522888114156108a857341561089c57600080fd5b60085460005260206000f35b63ddca3f438114156108cb5734156108bf57600080fd5b60095460005260206000f35b63fee3f7f98114156108ee5734156108e257600080fd5b600a5460005260206000f35b6358680d0b81141561091157341561090557600080fd5b600b5460005260206000f35b63e382446281141561093457341561092857600080fd5b600c5460005260206000f35b631ec0cdc181141561095757341561094b57600080fd5b600d5460005260206000f35b635d6362bb81141561097a57341561096e57600080fd5b600e5460005260206000f35b63bb7b8b8081141561099d57341561099157600080fd5b600f5460005260206000f35b505b005b6101a0526101405261016052610180526040366101c03773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6101405114156109e25760126101c052610a1d565b6020610260600463313ce5676102005261021c610140515afa610a0457600080fd5b601f3d11610a1157600080fd5b600050610260516101c0525b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610160511415610a475760126101e052610a82565b6020610260600463313ce5676102005261021c610160515afa610a6957600080fd5b601f3d11610a7657600080fd5b600050610260516101e0525b61018051604e6101e05110610a9657600080fd5b6101e051600a0a8082028215828483041417610ab157600080fd5b80905090509050604e6101c05110610ac857600080fd5b6101c051600a0a8080610ada57600080fd5b82049050905061020052610200516009548082028215828483041417610aff57600080fd5b809050905090506402540be4008082049050905061022052610200516102205180821015610b2c57600080fd5b808203905090506000526000516101a051565b6101e0526101405261016052610180526101a0526101c0526101405161016051610180516101a0516101c0516101e05161020051610160516102205261018051610240526101a05161026052610260516102405161022051600658016109a1565b6102c052610200526101e0526101c0526101a0526101805261016052610140526102c051610200526101c0516102005110151515610c42576308c379a061022052602061024052602e610260527f45786368616e676520726573756c74656420696e20666577657220636f696e73610280527f207468616e2065787065637465640000000000000000000000000000000000006102a05261026050608461023cfd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610160511815610db35760006004610280527f23b872dd000000000000000000000000000000000000000000000000000000006102a0526102806004806020846102e001018260208501600060045af1505080518201915050610140516020826102e0010152602081019050306020826102e00101526020810190506101a0516020826102e0010152602081019050806102e0526102e090508051602001806103a08284600060045af1610d0a57600080fd5b505060206104806103a0516103c06000610160515af1610d2957600080fd5b60203d80821115610d3a5780610d3c565b815b90509050610460526104608051602001806102208284600060045af1610d6157600080fd5b50506000610220511115610db357610220806020015160008251806020901315610d8a57600080fd5b8091901215610d9857600080fd5b806020036101000a82049050905090501515610db357600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610180511415610df357600060006000600061020051610140516000f1610dee57600080fd5b610f73565b610180513b610e0157600080fd5b60006000604463f8c14102610220523061024052610200516102605261023c6000610180515af1610e3157600080fd5b60006004610280527fa9059cbb000000000000000000000000000000000000000000000000000000006102a0526102806004806020846102e001018260208501600060045af1505080518201915050610140516020826102e0010152602081019050610200516020826102e0010152602081019050806102e0526102e090508051602001806103808284600060045af1610eca57600080fd5b50506020610440610380516103a06000610180515af1610ee957600080fd5b60203d80821115610efa5780610efc565b815b90509050610420526104208051602001806102208284600060045af1610f2157600080fd5b50506000610220511115610f7357610220806020015160008251806020901315610f4a57600080fd5b8091901215610f5857600080fd5b806020036101000a82049050905090501515610f7357600080fd5b6101e05156",
  "deployedSourceMap": "-1:-1:3:-;;;;;:::-;;:::-;:::-;;;;;;;;;;4226:305;;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;4226:305;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;4226:305;;;4328:1;4313:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;4296:34;4226:305;4347:42;4338:5;:51;;4335:126;;:::-;4419:2;4406:15;:9;:15;4399:22;:::-;;;;:::-;4440:21;4335:126::-;:::-;4447:9;:14;4440:21;:::-;;;;:::-;4467:64;;4482:10;-1:-1;;4494:5;-1:-1;;;4516:1;4501:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;;;4520:2;-1:-1;;;4524:6;-1:-1;;;4467:64;;;;;;;;;;;;;;:::i;:::-;;;;;4226:305;;;;:::-;4575:635;;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;4575:635;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;4575:635;;;;;;;4755:12;:16;4770:1;4755:16;;-1:-1;;4755:16;:::-;;;;:::-;;;;;;;;4747:33;;;;;;:::-;;;;:::-;4723:57;4575:635;4792:13;4788:17;:1;:17;;4785:118;;:::-;4838:1;4823:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;4815:5;:25;4785:118;:::-;:::-;4887:1;:15;4889:13;4887:15;;;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;;;;;;;4867:36;;;;:::-;;;;:::-;:19;:36;;;;;;-1:-1;4859:5;:44;4785:118::-;4915:13;4911:17;:1;:17;;4908:114;;:::-;4959:1;4944:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;4938:3;:23;4908:114;:::-;:::-;5006:1;:15;5008:13;5006:15;;;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;;;;;;;4986:36;;;;:::-;;;;:::-;:19;:36;;;;;;-1:-1;4980:3;:42;4908:114::-;5040:42;5031:5;:51;;5028:126;;:::-;5112:2;5099:15;:9;:15;5092:22;:::-;;;;:::-;5133:21;5028:126::-;:::-;5140:9;:14;5133:21;:::-;;;;:::-;5160:50;;;;;;5175:10;-1:-1;;5187:5;-1:-1;;;5194:3;-1:-1;;;5199:2;-1:-1;;;5203:6;-1:-1;;;5160:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;4575:635;;;;:::-;1393:114;;;;;:::-;;;;:::-;;;;:::-;1442:12;1438:16;:1;:16;;1431:23;:::-;;;;:::-;1505:1;1490:17;;;;;:::-;;;;:::-;:14;:17;;;;;;1483:24;;;;;;1393:114::-;1526:135;;;;;:::-;;;;:::-;;;;:::-;1580:23;1576:27;:1;:27;;1569:34;:::-;;;;:::-;1659:1;1639:22;;;;;:::-;;;;:::-;:19;:22;;;;;;1632:29;;;;;;1526:135::-;1680:93;;;;;:::-;;;;:::-;;;;:::-;1732:12;1728:16;:1;:16;;1721:23;:::-;;;;:::-;1771:1;1756:17;;;;;:::-;;;;:::-;:14;:17;;;;;;1749:24;;;;;;1680:93::-;2385:123;;;;;:::-;;;;:::-;;;;:::-;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;2385:123;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;2385:123;;;2482:1;2467:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;;;2501:1;2486:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;;;2505:2;-1:-1;;;2454:54;;;;;;;;;;:::i;:::-;;;;2447:61;;;;;;2385:123::-;2527:482;;;;;:::-;;;;:::-;;;;:::-;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;2527:482;;;-1:-1;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;2527:482;;;;;;;2699:12;:16;2714:1;2699:16;;-1:-1;;2699:16;:::-;;;;:::-;;;;;;;;2691:33;;;;;;:::-;;;;:::-;2667:57;2527:482;2737:13;2732:18;:1;:18;-1:-1;;2729:119;;:::-;2783:1;2768:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;2760:5;:25;2729:119;:::-;:::-;2832:1;:15;2834:13;2832:15;;;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;;;;;;;2812:36;;;;:::-;;;;:::-;:19;:36;;;;;;-1:-1;2804:5;:44;2729:119::-;2861:13;2856:18;:1;:18;-1:-1;;2853:115;;:::-;2905:1;2890:17;;;;;:::-;;;;:::-;:14;:17;;;;;;-1:-1;2884:3;:23;2853:115;:::-;:::-;2952:1;:15;2954:13;2952:15;;;;;;;;;;;:::-;;:::-;;;;;:::-;;;;:::-;;;;;;;2932:36;;;;:::-;;;;:::-;:19;:36;;;;;;-1:-1;2926:3;:42;2853:115::-;2981:28;;;;;;2994:5;-1:-1;;;3001:3;-1:-1;;;3006:2;-1:-1;;;2981:28;;;;;;;;;;:::i;:::-;;;;;;;;;;2974:35;;;;;;2527:482::-;5244:298;;;;;:::-;;;;:::-;;;;:::-;5396:2;-1:-1;5387:6;:11;5420:10;-1:-1;5403:14;:27;5457:15;-1:-1;5435:19;:37;5493:9;-1:-1;5477:13;:25;5528:14;-1:-1;5507:18;:35;5244:298;:::-;5555:326;;;;;:::-;;;;:::-;;;;:::-;-1:-1;;;;;5555:326;:::-;;;;:::-;5727:4;-1:-1;5716:8;:15;5753:10;-1:-1;5736:14;:27;5786:11;-1:-1;5768:15;:29;5826:17;-1:-1;5802:21;:41;5868:13;-1:-1;5848:17;:33;5555:326;:::-;5893:80;;;;;:::-;;;;:::-;;;;:::-;5943:14;-1:-1;;;;;5960:13;5943:30;-1:-1;5943:30;-1:-1;5943:30;;;-1:-1;5943:30;;;-1:-1;5943:30;;;-1:-1;5943:30;;;-1:-1;5943:30;;;-1:-1;5943:30;;;-1:-1;;5943:30;5893:80;:::-;5986:76;;;;;:::-;;;;:::-;;;;:::-;6056:6;-1:-1;6031:22;:31;5986:76;:::-;456:15;;;;;:::-;;;;:::-;;;;:::-;-1:-1;456:15;;;;;;:::-;553;;;;;:::-;;;;:::-;;;;:::-;-1:-1;553:15;;;;;;:::-;580;;;;;:::-;;;;:::-;;;;:::-;-1:-1;580:15;;;;;;:::-;612;;;;;:::-;;;;:::-;;;;:::-;-1:-1;612:15;;;;;;:::-;638;;;;;:::-;;;;:::-;;;;:::-;-1:-1;638:15;;;;;;:::-;669;;;;;:::-;;;;:::-;;;;:::-;-1:-1;669:15;;;;;;:::-;691;;;;;:::-;;;;:::-;;;;:::-;-1:-1;691:15;;;;;;:::-;718;;;;;:::-;;;;:::-;;;;:::-;-1:-1;718:15;;;;;;:::-;746;;;;;:::-;;;;:::-;;;;:::-;-1:-1;746:15;;;;;;:::-;780;;;;;:::-;;;;:::-;;;;:::-;-1:-1;780:15;;;;;;:::-;810;;;;;:::-;;;;:::-;;;;:::-;-1:-1;810:15;;;;;;:::-;838;;;;;:::-;;;;:::-;;;;:::-;-1:-1;838:15;;;;;;:::-;873;;;;;:::-;;;;:::-;;;;:::-;-1:-1;873:15;;;;;;:::-;-1:-1;:::-;6084:27;1792:574::-;-1:-1;1792:574;-1:-1;;;;;;1792:574;;;;1941:42;1932:5;:51;;1929:148;;:::-;2011:2;1993:15;:20;1929:148;:::-;:::-;2050:27;;;-1:-1;;;;2060:5;2050:27;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;2032:15;:45;1929:148::-;2092:42;2085:3;:49;;2082:140;;:::-;2160:2;2144:13;:18;2082:140;:::-;:::-;2197:25;;;-1:-1;;;;2207:3;2197:25;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;2181:13;:41;2082:140::-;2243:3;:25;2250:17;2254:13;2250:17;;;:::-;;;;:::-;2254:13;2250:17;:2;:17;2243:25;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;2272:19;2276:15;2272:19;;;:::-;;;;:::-;2276:15;2272:19;:2;:19;2243:49;;;:::-;;;;:::-;;;;;;;2228:64;1792:574;2313:3;:14;2319:8;2313:14;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;2330:13;2313:30;;;;;;;2297:46;1792:574;2356:3;:10;2362:4;2356:10;;;-1:-1;;2356:10;:::-;;;;:::-;;;;;;;;2349:17;;;;;;:::o;3022:1160::-;-1:-1;3022:1160;-1:-1;;;;;;;;;;3133:28;;;;;;;;;;;;;;3146:5;-1:-1;;;3153:3;-1:-1;;;3158:2;-1:-1;;;3133:28;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1;3119:42;3022:1160;3179:6;3173:12;:2;:12;-1:-1;;3166:69;;;:::-;;;;;;;3187:48;;;;;;;;;;3166:69;;;;:::-;3253:42;3244:5;:51;3241:452;;3662:31;3241:452::-;3369:210;3393:50;;;;;;;-1:-1;;;;;;;;;;;;;;;;3369:210;-1:-1;3369:210;;;;;;3469:7;3461:25;3369:210;-1:-1;;3369:210;;;;;;;;3504:22;3369:210;-1:-1;;3369:210;;;;;;;;3552:2;3544:20;3369:210;-1:-1;;3369:210;;;;;;;;;;;;;;-1:-1;;;;;3328:290;-1:-1;;;;;;;:::-;;;;:::-;;3328:290;;;;;;;3350:5;3328:290;;;;:::-;;;;:::-;;;;;;;;:::-;;;:::-;:::-;;:::-;;;;;;;;-1:-1;;;;;3305:313;-1:-1;;;;;;;:::-;;;;:::-;;3305:313;3647:1;3634:9;3630:18;;3627:66;3662:31;3627:66::-;3677:9;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;3669:24;;;;3662:31;:::-;;;;:::-;3709:42;3702:3;:49;;3699:483;;:::-;3761:17;;;;3775:2;3761:17;3766:7;3761:17;;;;:::-;;;;:::-;4151:31;3699:483::-;:::-;3807:3;3797:42;;;:::-;;;;:::-;;;;-1:-1;;;3830:4;-1:-1;;3836:2;-1:-1;;;;3797:42;3807:3;3797:42;;;;:::-;;;;:::-;3910:158;3934:38;;;;;;;-1:-1;;;;;;;;;;;;;;;;3910:158;-1:-1;3910:158;;;;;;3998:7;3990:25;3910:158;-1:-1;;3910:158;;;;;;;;4041:2;4033:20;3910:158;-1:-1;;3910:158;;;;;;;;;;;;;;-1:-1;;;;;3871:236;-1:-1;;;;;;;:::-;;;;:::-;;3871:236;;;;;;3328:290;3893:3;3871:236;;;;:::-;;;;:::-;;;;;;;;:::-;;;:::-;:::-;;:::-;;;;;;;;-1:-1;;;;;3848:259;-1:-1;;;;;;;:::-;;;;:::-;;3797:42;4136:1;4123:9;4119:18;;4116:66;4151:31;4116:66::-;4166:9;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;4158:24;;;;4151:31;:::-;;;;:::-;3022:1160;;:::o;",
  "language": "Vyper",
  "natspec": {
    "methods": {},
    "notice": "Mock Kagla metapool for testing"
  },
  "offset": [
    0,
    6112
  ],
  "opcodes": "PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x0D JUMPI PUSH2 0x99F JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1C MSTORE PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MSTORE PUSH1 0x0 MLOAD PUSH4 0x3DF02124 DUP2 EQ ISZERO PUSH2 0x14F JUMPI PUSH1 0x11 SLOAD ISZERO PUSH2 0x043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 SSTORE PUSH1 0x4 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x058 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x24 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x078 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x098 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x140 MLOAD EQ ISZERO PUSH2 0x0DA JUMPI PUSH1 0x44 CALLDATALOAD CALLVALUE EQ PUSH2 0x0D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x0E5 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x0E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 MLOAD CALLER PUSH2 0x160 MSTORE PUSH2 0x140 MLOAD PUSH2 0x180 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x1A0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x1C0 MSTORE PUSH1 0x64 CALLDATALOAD PUSH2 0x1E0 MSTORE PUSH2 0x1E0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH1 0x0 PUSH1 0x11 SSTORE STOP JUMPDEST PUSH4 0xA6417ED6 DUP2 EQ ISZERO PUSH2 0x373 JUMPI PUSH1 0x11 SLOAD ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 SSTORE PUSH1 0x4 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x17D JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x24 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x19D JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x40 CALLDATASIZE PUSH2 0x140 CALLDATACOPY PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 DUP3 LT ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x40 MLOAD DUP2 GT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH1 0x4 CALLDATALOAD SLT ISZERO PUSH2 0x212 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE PUSH2 0x25A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x180 MLOAD DUP1 DUP3 SUB DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x229 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP SWAP1 POP SWAP1 POP PUSH1 0x4 DUP2 LT PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x24 CALLDATALOAD SLT ISZERO PUSH2 0x28C JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x160 MSTORE PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x180 MLOAD DUP1 DUP3 SUB DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x2A3 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP SWAP1 POP SWAP1 POP PUSH1 0x4 DUP2 LT PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x160 MSTORE JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x140 MLOAD EQ ISZERO PUSH2 0x36 JUMPI PUSH1 0x44 CALLDATALOAD CALLVALUE EQ PUSH2 0x31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x311 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD CALLER PUSH2 0x1A0 MSTORE PUSH2 0x140 MLOAD PUSH2 0x1C0 MSTORE PUSH2 0x160 MLOAD PUSH2 0x1E0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x20 MSTORE PUSH1 0x64 CALLDATALOAD PUSH2 0x220 MSTORE PUSH2 0x220 MLOAD PUSH2 0x20 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0x6 PC ADD PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH1 0x0 PUSH1 0x11 SSTORE STOP JUMPDEST PUSH4 0xC661657 DUP2 EQ ISZERO PUSH2 0x3BF JUMPI CALLVALUE ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x87CB4F57 DUP2 EQ ISZERO PUSH2 0x4B JUMPI CALLVALUE ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x493B0D1 DUP2 EQ ISZERO PUSH2 0x457 JUMPI CALLVALUE ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x4 CALLDATALOAD LT PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x5ED443F DUP2 EQ ISZERO PUSH2 0x51B JUMPI CALLVALUE ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x47E JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x24 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x49E JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x160 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x1E0 MSTORE PUSH2 0x1E0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x7211EF7 DUP2 EQ ISZERO PUSH2 0x6F0 JUMPI CALLVALUE ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x542 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x24 CALLDATALOAD DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x562 JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP POP PUSH1 0x40 CALLDATASIZE PUSH2 0x140 CALLDATACOPY PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 DUP3 LT ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x40 MLOAD DUP2 GT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH1 0x4 CALLDATALOAD SGT ISZERO ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE PUSH2 0x620 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x180 MLOAD DUP1 DUP3 SUB DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x5EF JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP SWAP1 POP SWAP1 POP PUSH1 0x4 DUP2 LT PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MSTORE JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x24 CALLDATALOAD SGT ISZERO ISZERO PUSH2 0x653 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x160 MSTORE PUSH2 0x69B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x180 MLOAD DUP1 DUP3 SUB DUP1 DUP1 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x66A JUMPI NOT JUMPDEST PUSH1 0x7F SHR ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP SWAP1 POP SWAP1 POP PUSH1 0x4 DUP2 LT PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x160 MSTORE JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1A0 MSTORE PUSH2 0x160 MLOAD PUSH2 0x1C0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x1E0 MSTORE PUSH2 0x1E0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x240 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x240 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xBB8D331D DUP2 EQ ISZERO PUSH2 0x727 JUMPI CALLVALUE ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x5 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x6 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x7 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x8 SSTORE STOP JUMPDEST PUSH4 0xEEE22ABB DUP2 EQ ISZERO PUSH2 0x76E JUMPI CALLVALUE ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xA SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xB SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD SSTORE STOP JUMPDEST PUSH4 0xAB203BC4 DUP2 EQ ISZERO PUSH2 0x7B7 JUMPI CALLVALUE ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH1 0x4 DUP1 CALLDATALOAD DUP3 SSTORE DUP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 DUP4 ADD SSTORE DUP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x2 DUP4 ADD SSTORE DUP1 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x3 DUP4 ADD SSTORE POP POP STOP JUMPDEST PUSH4 0x3BA68012 DUP2 EQ ISZERO PUSH2 0x7D6 JUMPI CALLVALUE ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xF SSTORE STOP JUMPDEST PUSH4 0xED52976A DUP2 EQ ISZERO PUSH2 0x7F9 JUMPI CALLVALUE ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xF446C1D0 DUP2 EQ ISZERO PUSH2 0x81C JUMPI CALLVALUE ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x549491A DUP2 EQ ISZERO PUSH2 0x83F JUMPI CALLVALUE ISZERO PUSH2 0x833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x208166C DUP2 EQ ISZERO PUSH2 0x862 JUMPI CALLVALUE ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xB4B577AD DUP2 EQ ISZERO PUSH2 0x885 JUMPI CALLVALUE ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x1452288 DUP2 EQ ISZERO PUSH2 0x8A8 JUMPI CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xDDCA3F43 DUP2 EQ ISZERO PUSH2 0x8CB JUMPI CALLVALUE ISZERO PUSH2 0x8BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xFEE3F7F9 DUP2 EQ ISZERO PUSH2 0x8EE JUMPI CALLVALUE ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x5868DB DUP2 EQ ISZERO PUSH2 0x911 JUMPI CALLVALUE ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xE3824462 DUP2 EQ ISZERO PUSH2 0x934 JUMPI CALLVALUE ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x1EC0CDC1 DUP2 EQ ISZERO PUSH2 0x957 JUMPI CALLVALUE ISZERO PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x5D6362BB DUP2 EQ ISZERO PUSH2 0x97A JUMPI CALLVALUE ISZERO PUSH2 0x96E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xBB7B8B80 DUP2 EQ ISZERO PUSH2 0x99D JUMPI CALLVALUE ISZERO PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE PUSH1 0x40 CALLDATASIZE PUSH2 0x1C0 CALLDATACOPY PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x140 MLOAD EQ ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x12 PUSH2 0x1C0 MSTORE PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x20 PUSH2 0x260 PUSH1 0x4 PUSH4 0x313CE567 PUSH2 0x20 MSTORE PUSH2 0x21C PUSH2 0x140 MLOAD GAS STATICCALL PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0xA11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x260 MLOAD PUSH2 0x1C0 MSTORE JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x160 MLOAD EQ ISZERO PUSH2 0xA47 JUMPI PUSH1 0x12 PUSH2 0x1E0 MSTORE PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x260 PUSH1 0x4 PUSH4 0x313CE567 PUSH2 0x20 MSTORE PUSH2 0x21C PUSH2 0x160 MLOAD GAS STATICCALL PUSH2 0xA69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x260 MLOAD PUSH2 0x1E0 MSTORE JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x4E PUSH2 0x1E0 MLOAD LT PUSH2 0xA96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0 MLOAD PUSH1 0xA EXP DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH1 0x4E PUSH2 0x1C0 MLOAD LT PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0 MLOAD PUSH1 0xA EXP DUP1 DUP1 PUSH2 0xADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x20 MSTORE PUSH2 0x20 MLOAD PUSH1 0x9 SLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0xAFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH5 0x254BE40 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x220 MSTORE PUSH2 0x20 MLOAD PUSH2 0x220 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x1A0 MLOAD JUMP JUMPDEST PUSH2 0x1E0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x20 MLOAD PUSH2 0x160 MLOAD PUSH2 0x220 MSTORE PUSH2 0x180 MLOAD PUSH2 0x240 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x260 MSTORE PUSH2 0x260 MLOAD PUSH2 0x240 MLOAD PUSH2 0x220 MLOAD PUSH1 0x6 PC ADD PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x2C0 MSTORE PUSH2 0x20 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x2C0 MLOAD PUSH2 0x20 MSTORE PUSH2 0x1C0 MLOAD PUSH2 0x20 MLOAD LT ISZERO ISZERO ISZERO PUSH2 0xC42 JUMPI PUSH4 0x8C379A0 PUSH2 0x220 MSTORE PUSH1 0x20 PUSH2 0x240 MSTORE PUSH1 0x2E PUSH2 0x260 MSTORE PUSH32 0x45786368616E676520726573756C74656420696E20666577657220636F696E73 PUSH2 0x280 MSTORE PUSH32 0x207468616E206578706563746564000000000000000000 PUSH2 0x2A0 MSTORE PUSH2 0x260 POP PUSH1 0x84 PUSH2 0x23C REVERT JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x160 MLOAD XOR ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH2 0x280 MSTORE PUSH32 0x23B872DD0000000000000000000000000000 PUSH2 0x2A0 MSTORE PUSH2 0x280 PUSH1 0x4 DUP1 PUSH1 0x20 DUP5 PUSH2 0x2E0 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP PUSH2 0x140 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP ADDRESS PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A0 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 PUSH2 0x2E0 MSTORE PUSH2 0x2E0 SWAP1 POP DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x3A0 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH2 0x480 PUSH2 0x3A0 MLOAD PUSH2 0x3C0 PUSH1 0x0 PUSH2 0x160 MLOAD GAS CALL PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP1 DUP3 GT ISZERO PUSH2 0xD3A JUMPI DUP1 PUSH2 0xD3C JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x460 MSTORE PUSH2 0x460 DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x220 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0xD61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH2 0x220 MLOAD GT ISZERO PUSH2 0xDB3 JUMPI PUSH2 0x220 DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0xD98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP ISZERO ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH2 0x180 MLOAD EQ ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 PUSH1 0x0 PUSH1 0x0 PUSH1 0x0 PUSH2 0x20 MLOAD PUSH2 0x140 MLOAD PUSH1 0x0 CALL PUSH2 0xDEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF73 JUMP JUMPDEST PUSH2 0x180 MLOAD EXTCODESIZE PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 PUSH1 0x44 PUSH4 0xF8C1412 PUSH2 0x220 MSTORE ADDRESS PUSH2 0x240 MSTORE PUSH2 0x20 MLOAD PUSH2 0x260 MSTORE PUSH2 0x23C PUSH1 0x0 PUSH2 0x180 MLOAD GAS CALL PUSH2 0xE31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH2 0x280 MSTORE PUSH32 0xA959CBB0000000000000000000000000000 PUSH2 0x2A0 MSTORE PUSH2 0x280 PUSH1 0x4 DUP1 PUSH1 0x20 DUP5 PUSH2 0x2E0 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP PUSH2 0x140 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2E0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 PUSH2 0x2E0 MSTORE PUSH2 0x2E0 SWAP1 POP DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x380 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0xECA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH2 0x440 PUSH2 0x380 MLOAD PUSH2 0x3A0 PUSH1 0x0 PUSH2 0x180 MLOAD GAS CALL PUSH2 0xEE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP1 DUP3 GT ISZERO PUSH2 0xEFA JUMPI DUP1 PUSH2 0xEFC JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x420 MSTORE PUSH2 0x420 DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x220 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0xF21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH2 0x220 MLOAD GT ISZERO PUSH2 0xF73 JUMPI PUSH2 0x220 DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0xF58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP ISZERO ISZERO PUSH2 0xF73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0 MLOAD JUMP",
  "pcMap": {
    "0": {
      "offset": [
        0,
        6111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "LT"
    },
    "4": {
      "op": "ISZERO"
    },
    "5": {
      "op": "PUSH2",
      "value": "0x0D"
    },
    "8": {
      "op": "JUMPI"
    },
    "9": {
      "op": "PUSH2",
      "value": "0x99F"
    },
    "12": {
      "op": "JUMP"
    },
    "13": {
      "op": "JUMPDEST"
    },
    "14": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16": {
      "op": "CALLDATALOAD"
    },
    "17": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "19": {
      "op": "MSTORE"
    },
    "20": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "37": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "39": {
      "op": "MSTORE"
    },
    "40": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "42": {
      "op": "MLOAD"
    },
    "43": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3DF02124"
    },
    "48": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "49": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "51": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "54": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "55": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "57": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "58": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "59": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x043"
    },
    "62": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "65": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "REVERT",
      "path": "0"
    },
    "67": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "68": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "70": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "72": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "73": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "75": {
      "op": "CALLDATALOAD"
    },
    "76": {
      "op": "DUP1"
    },
    "77": {
      "op": "DUP1"
    },
    "78": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "80": {
      "op": "DUP2"
    },
    "81": {
      "op": "SLT"
    },
    "82": {
      "op": "ISZERO"
    },
    "83": {
      "op": "PUSH2",
      "value": "0x058"
    },
    "86": {
      "op": "JUMPI"
    },
    "87": {
      "op": "NOT"
    },
    "88": {
      "op": "JUMPDEST"
    },
    "89": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "91": {
      "op": "SHR"
    },
    "92": {
      "op": "ISZERO"
    },
    "93": {
      "op": "PUSH2",
      "value": "0x065"
    },
    "96": {
      "op": "JUMPI"
    },
    "97": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "99": {
      "op": "DUP1"
    },
    "100": {
      "op": "REVERT"
    },
    "101": {
      "op": "JUMPDEST"
    },
    "102": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "103": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "POP",
      "path": "0"
    },
    "104": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "POP",
      "path": "0"
    },
    "105": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "107": {
      "op": "CALLDATALOAD"
    },
    "108": {
      "op": "DUP1"
    },
    "109": {
      "op": "DUP1"
    },
    "110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "112": {
      "op": "DUP2"
    },
    "113": {
      "op": "SLT"
    },
    "114": {
      "op": "ISZERO"
    },
    "115": {
      "op": "PUSH2",
      "value": "0x078"
    },
    "118": {
      "op": "JUMPI"
    },
    "119": {
      "op": "NOT"
    },
    "120": {
      "op": "JUMPDEST"
    },
    "121": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "123": {
      "op": "SHR"
    },
    "124": {
      "op": "ISZERO"
    },
    "125": {
      "op": "PUSH2",
      "value": "0x085"
    },
    "128": {
      "op": "JUMPI"
    },
    "129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "131": {
      "op": "DUP1"
    },
    "132": {
      "op": "REVERT"
    },
    "133": {
      "op": "JUMPDEST"
    },
    "134": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "135": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "POP",
      "path": "0"
    },
    "136": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "POP",
      "path": "0"
    },
    "137": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4328,
        4329
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x4"
    },
    "139": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "140": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "142": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "143": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "LT",
      "path": "0"
    },
    "144": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x098"
    },
    "147": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "148": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "155": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "157": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "158": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "160": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "162": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "SHA3",
      "path": "0"
    },
    "163": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4313,
        4330
      ],
      "op": "ADD",
      "path": "0"
    },
    "164": {
      "op": "SLOAD"
    },
    "165": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4296,
        4330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "168": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "169": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4347,
        4389
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "190": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4338,
        4343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "193": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4338,
        4389
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "194": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4338,
        4389
      ],
      "op": "EQ",
      "path": "0"
    },
    "195": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4335,
        4461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "196": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4335,
        4461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0DA"
    },
    "199": {
      "branch": 1,
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4335,
        4461
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "200": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4419,
        4421
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x44"
    },
    "202": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4406,
        4421
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "203": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4406,
        4415
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "204": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4406,
        4421
      ],
      "op": "EQ",
      "path": "0"
    },
    "205": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4399,
        4421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0D5"
    },
    "208": {
      "branch": 3,
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4399,
        4421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "209": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4399,
        4421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "211": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4399,
        4421
      ],
      "op": "DUP1",
      "path": "0"
    },
    "212": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4399,
        4421
      ],
      "op": "REVERT",
      "path": "0"
    },
    "213": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4399,
        4421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4440,
        4461
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x0E5"
    },
    "217": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4335,
        4461
      ],
      "op": "JUMP",
      "path": "0"
    },
    "218": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4335,
        4461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "219": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4447,
        4456
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "220": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4447,
        4461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "221": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4440,
        4461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0E5"
    },
    "224": {
      "branch": 5,
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4440,
        4461
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "225": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4440,
        4461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "227": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4440,
        4461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "228": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4440,
        4461
      ],
      "op": "REVERT",
      "path": "0"
    },
    "229": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4440,
        4461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x140"
    },
    "233": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "234": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4482,
        4492
      ],
      "op": "CALLER",
      "path": "0"
    },
    "235": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "238": {
      "op": "MSTORE"
    },
    "239": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4494,
        4499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "242": {
      "op": "MLOAD"
    },
    "243": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "246": {
      "op": "MSTORE"
    },
    "247": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4516,
        4517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "249": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "250": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "252": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "253": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "LT",
      "path": "0"
    },
    "254": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16"
    },
    "257": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "258": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "260": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "261": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "REVERT",
      "path": "0"
    },
    "262": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "263": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "265": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "267": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "268": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "270": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "272": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "SHA3",
      "path": "0"
    },
    "273": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4501,
        4518
      ],
      "op": "ADD",
      "path": "0"
    },
    "274": {
      "op": "SLOAD"
    },
    "275": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "278": {
      "op": "MSTORE"
    },
    "279": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4520,
        4522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "281": {
      "op": "CALLDATALOAD"
    },
    "282": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "285": {
      "op": "MSTORE"
    },
    "286": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4524,
        4530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "288": {
      "op": "CALLDATALOAD"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "292": {
      "op": "MSTORE"
    },
    "293": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "296": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "297": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "300": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "301": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "304": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "305": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "308": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "309": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "312": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "313": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "315": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PC",
      "path": "0"
    },
    "316": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "ADD",
      "path": "0"
    },
    "317": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3F"
    },
    "320": {
      "fn": "MetaPoolMock.exchange",
      "jump": "i",
      "offset": [
        4467,
        4531
      ],
      "op": "JUMP",
      "path": "0"
    },
    "321": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "325": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "326": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "328": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4467,
        4531
      ],
      "op": "POP",
      "path": "0"
    },
    "329": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "331": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "333": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "334": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "STOP",
      "path": "0"
    },
    "335": {
      "fn": "MetaPoolMock.exchange",
      "offset": [
        4226,
        4531
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA6417ED6"
    },
    "341": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "342": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "EQ",
      "path": "0"
    },
    "343": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "344": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x373"
    },
    "347": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "348": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "350": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "351": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "352": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "355": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "356": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "358": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "REVERT",
      "path": "0"
    },
    "360": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "361": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "363": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "365": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "368": {
      "op": "CALLDATALOAD"
    },
    "369": {
      "op": "DUP1"
    },
    "370": {
      "op": "DUP1"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "373": {
      "op": "DUP2"
    },
    "374": {
      "op": "SLT"
    },
    "375": {
      "op": "ISZERO"
    },
    "376": {
      "op": "PUSH2",
      "value": "0x17D"
    },
    "379": {
      "op": "JUMPI"
    },
    "380": {
      "op": "NOT"
    },
    "381": {
      "op": "JUMPDEST"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "384": {
      "op": "SHR"
    },
    "385": {
      "op": "ISZERO"
    },
    "386": {
      "op": "PUSH2",
      "value": "0x18A"
    },
    "389": {
      "op": "JUMPI"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "392": {
      "op": "DUP1"
    },
    "393": {
      "op": "REVERT"
    },
    "394": {
      "op": "JUMPDEST"
    },
    "395": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "396": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "POP",
      "path": "0"
    },
    "397": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "POP",
      "path": "0"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "400": {
      "op": "CALLDATALOAD"
    },
    "401": {
      "op": "DUP1"
    },
    "402": {
      "op": "DUP1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "405": {
      "op": "DUP2"
    },
    "406": {
      "op": "SLT"
    },
    "407": {
      "op": "ISZERO"
    },
    "408": {
      "op": "PUSH2",
      "value": "0x19D"
    },
    "411": {
      "op": "JUMPI"
    },
    "412": {
      "op": "NOT"
    },
    "413": {
      "op": "JUMPDEST"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "416": {
      "op": "SHR"
    },
    "417": {
      "op": "ISZERO"
    },
    "418": {
      "op": "PUSH2",
      "value": "0x1AA"
    },
    "421": {
      "op": "JUMPI"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "424": {
      "op": "DUP1"
    },
    "425": {
      "op": "REVERT"
    },
    "426": {
      "op": "JUMPDEST"
    },
    "427": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "428": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "POP",
      "path": "0"
    },
    "429": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "POP",
      "path": "0"
    },
    "430": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "432": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "433": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "436": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "437": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4767
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "439": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "440": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4770,
        4771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "442": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "443": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "444": {
      "op": "LT"
    },
    "445": {
      "op": "ISZERO"
    },
    "446": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "449": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "450": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "452": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "453": {
      "dev": "Integer underflow",
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "REVERT",
      "path": "0"
    },
    "454": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "456": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "457": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "SUB",
      "path": "0"
    },
    "458": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "POP",
      "path": "0"
    },
    "460": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "461": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4755,
        4771
      ],
      "op": "POP",
      "path": "0"
    },
    "462": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "464": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "465": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "DUP2",
      "path": "0"
    },
    "466": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "GT",
      "path": "0"
    },
    "467": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "468": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "471": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "472": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "474": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "DUP1",
      "path": "0"
    },
    "475": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "REVERT",
      "path": "0"
    },
    "476": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4747,
        4780
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "477": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4723,
        4780
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "480": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "481": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4792,
        4805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "484": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4788,
        4805
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "485": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4788,
        4789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "487": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4788,
        4805
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "488": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4788,
        4805
      ],
      "op": "SLT",
      "path": "0"
    },
    "489": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4785,
        4903
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "490": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4785,
        4903
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x212"
    },
    "493": {
      "branch": 8,
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4785,
        4903
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "494": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4838,
        4839
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x4"
    },
    "496": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "497": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "499": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "500": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "LT",
      "path": "0"
    },
    "501": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD"
    },
    "504": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "505": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "507": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "DUP1",
      "path": "0"
    },
    "508": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "REVERT",
      "path": "0"
    },
    "509": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "510": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "512": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "514": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "515": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "517": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "519": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "SHA3",
      "path": "0"
    },
    "520": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4823,
        4840
      ],
      "op": "ADD",
      "path": "0"
    },
    "521": {
      "op": "SLOAD"
    },
    "522": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4815,
        4820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "525": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4815,
        4840
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "526": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4785,
        4903
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "529": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4785,
        4903
      ],
      "op": "JUMP",
      "path": "0"
    },
    "530": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4785,
        4903
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "531": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4888
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x4"
    },
    "533": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "534": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4889,
        4902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "537": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "538": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "539": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "DUP3",
      "path": "0"
    },
    "540": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "SUB",
      "path": "0"
    },
    "541": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "542": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "543": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "545": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "DUP2",
      "path": "0"
    },
    "546": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "SLT",
      "path": "0"
    },
    "547": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "548": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229"
    },
    "551": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "552": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "NOT",
      "path": "0"
    },
    "553": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "554": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7F"
    },
    "556": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "SHR",
      "path": "0"
    },
    "557": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "558": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x236"
    },
    "561": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "562": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "564": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "565": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "REVERT",
      "path": "0"
    },
    "566": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "567": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "568": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "POP",
      "path": "0"
    },
    "569": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "570": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "POP",
      "path": "0"
    },
    "571": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "572": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4887,
        4902
      ],
      "op": "POP",
      "path": "0"
    },
    "573": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "575": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "DUP2",
      "path": "0"
    },
    "576": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "LT",
      "path": "0"
    },
    "577": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x249"
    },
    "580": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "581": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "583": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "DUP1",
      "path": "0"
    },
    "584": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "REVERT",
      "path": "0"
    },
    "585": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "586": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4886
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "588": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "590": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "591": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "593": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "595": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "SHA3",
      "path": "0"
    },
    "596": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4867,
        4903
      ],
      "op": "ADD",
      "path": "0"
    },
    "597": {
      "op": "SLOAD"
    },
    "598": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4859,
        4864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "601": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4859,
        4903
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "602": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4785,
        4903
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "603": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4915,
        4928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "606": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4911,
        4928
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "607": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4911,
        4912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "609": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4911,
        4928
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "610": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4911,
        4928
      ],
      "op": "SLT",
      "path": "0"
    },
    "611": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4908,
        5022
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "612": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4908,
        5022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C"
    },
    "615": {
      "branch": 11,
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4908,
        5022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "616": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4959,
        4960
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x24"
    },
    "618": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "619": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "621": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "DUP2",
      "path": "0"
    },
    "622": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "LT",
      "path": "0"
    },
    "623": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277"
    },
    "626": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "627": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "629": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "630": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "631": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "632": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4958
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "634": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "636": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "637": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "639": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "641": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "SHA3",
      "path": "0"
    },
    "642": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4944,
        4961
      ],
      "op": "ADD",
      "path": "0"
    },
    "643": {
      "op": "SLOAD"
    },
    "644": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4938,
        4941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "647": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4938,
        4961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "648": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4908,
        5022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D4"
    },
    "651": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4908,
        5022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "652": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4908,
        5022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "653": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5007
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x24"
    },
    "655": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "656": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5008,
        5021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "659": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "660": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "661": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "662": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "SUB",
      "path": "0"
    },
    "663": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "664": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "665": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "667": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "668": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "SLT",
      "path": "0"
    },
    "669": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "670": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A3"
    },
    "673": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "674": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "NOT",
      "path": "0"
    },
    "675": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "676": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7F"
    },
    "678": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "SHR",
      "path": "0"
    },
    "679": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "680": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "683": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "684": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "686": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "687": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "REVERT",
      "path": "0"
    },
    "688": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "689": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "690": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "POP",
      "path": "0"
    },
    "691": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "692": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "POP",
      "path": "0"
    },
    "693": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "694": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5006,
        5021
      ],
      "op": "POP",
      "path": "0"
    },
    "695": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "697": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "698": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "LT",
      "path": "0"
    },
    "699": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C3"
    },
    "702": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "703": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "705": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "706": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "REVERT",
      "path": "0"
    },
    "707": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "708": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "710": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "712": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "713": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "715": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "717": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "SHA3",
      "path": "0"
    },
    "718": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4986,
        5022
      ],
      "op": "ADD",
      "path": "0"
    },
    "719": {
      "op": "SLOAD"
    },
    "720": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4980,
        4983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "723": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4980,
        5022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "724": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4908,
        5022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "725": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5040,
        5082
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "746": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5031,
        5036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "749": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5031,
        5082
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "750": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5031,
        5082
      ],
      "op": "EQ",
      "path": "0"
    },
    "751": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5028,
        5154
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "752": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5028,
        5154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36"
    },
    "755": {
      "branch": 14,
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5028,
        5154
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "756": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5112,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x44"
    },
    "758": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5099,
        5114
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "759": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5099,
        5108
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "760": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5099,
        5114
      ],
      "op": "EQ",
      "path": "0"
    },
    "761": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5092,
        5114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31"
    },
    "764": {
      "branch": 16,
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5092,
        5114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "765": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5092,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "767": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5092,
        5114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "768": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5092,
        5114
      ],
      "op": "REVERT",
      "path": "0"
    },
    "769": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5092,
        5114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "770": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5133,
        5154
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x311"
    },
    "773": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5028,
        5154
      ],
      "op": "JUMP",
      "path": "0"
    },
    "774": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5028,
        5154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "775": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5140,
        5149
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "776": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5140,
        5154
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "777": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5133,
        5154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x311"
    },
    "780": {
      "branch": 18,
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5133,
        5154
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "781": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5133,
        5154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "783": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5133,
        5154
      ],
      "op": "DUP1",
      "path": "0"
    },
    "784": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5133,
        5154
      ],
      "op": "REVERT",
      "path": "0"
    },
    "785": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5133,
        5154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "786": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x140"
    },
    "789": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "790": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "793": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "794": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "797": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "798": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5175,
        5185
      ],
      "op": "CALLER",
      "path": "0"
    },
    "799": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5187,
        5192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "806": {
      "op": "MLOAD"
    },
    "807": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5194,
        5197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "814": {
      "op": "MLOAD"
    },
    "815": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "818": {
      "op": "MSTORE"
    },
    "819": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5199,
        5201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "821": {
      "op": "CALLDATALOAD"
    },
    "822": {
      "op": "PUSH2",
      "value": "0x20"
    },
    "825": {
      "op": "MSTORE"
    },
    "826": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5203,
        5209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "828": {
      "op": "CALLDATALOAD"
    },
    "829": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "832": {
      "op": "MSTORE"
    },
    "833": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "836": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "837": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "840": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "841": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "844": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "845": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "848": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "849": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "852": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "853": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "855": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PC",
      "path": "0"
    },
    "856": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "ADD",
      "path": "0"
    },
    "857": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3F"
    },
    "860": {
      "fn": "MetaPoolMock.exchange_underlying",
      "jump": "i",
      "offset": [
        5160,
        5210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "861": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "862": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "865": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "866": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "869": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "870": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "873": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "874": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "876": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        5160,
        5210
      ],
      "op": "POP",
      "path": "0"
    },
    "877": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "879": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "881": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "882": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "STOP",
      "path": "0"
    },
    "883": {
      "fn": "MetaPoolMock.exchange_underlying",
      "offset": [
        4575,
        5210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "884": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC661657"
    },
    "889": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "DUP2",
      "path": "0"
    },
    "890": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "EQ",
      "path": "0"
    },
    "891": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "892": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BF"
    },
    "895": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "896": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "897": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "898": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38A"
    },
    "901": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "902": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "904": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "905": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "906": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "907": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1442,
        1454
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x0"
    },
    "909": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1438,
        1454
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "910": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1438,
        1439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "912": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1438,
        1454
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "913": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1438,
        1454
      ],
      "op": "LT",
      "path": "0"
    },
    "914": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1431,
        1454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39A"
    },
    "917": {
      "branch": 21,
      "fn": "MetaPoolMock.coins",
      "offset": [
        1431,
        1454
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "918": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1431,
        1454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "920": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1431,
        1454
      ],
      "op": "DUP1",
      "path": "0"
    },
    "921": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1431,
        1454
      ],
      "op": "REVERT",
      "path": "0"
    },
    "922": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1431,
        1454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "923": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1505,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x4"
    },
    "925": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "926": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "928": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "DUP2",
      "path": "0"
    },
    "929": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "LT",
      "path": "0"
    },
    "930": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AA"
    },
    "933": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "934": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "936": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "937": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "938": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "939": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "941": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "943": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "944": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "946": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "948": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "SHA3",
      "path": "0"
    },
    "949": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1490,
        1507
      ],
      "op": "ADD",
      "path": "0"
    },
    "950": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1483,
        1507
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "951": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1483,
        1507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "953": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1483,
        1507
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "954": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1483,
        1507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "956": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1483,
        1507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "958": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1483,
        1507
      ],
      "op": "RETURN",
      "path": "0"
    },
    "959": {
      "fn": "MetaPoolMock.coins",
      "offset": [
        1393,
        1507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "960": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x87CB4F57"
    },
    "965": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "DUP2",
      "path": "0"
    },
    "966": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "EQ",
      "path": "0"
    },
    "967": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "968": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B"
    },
    "971": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "972": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "973": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "974": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D6"
    },
    "977": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "978": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "980": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "DUP1",
      "path": "0"
    },
    "981": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "REVERT",
      "path": "0"
    },
    "982": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "983": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1580,
        1603
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x1"
    },
    "985": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1576,
        1603
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "986": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1576,
        1577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "988": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1576,
        1603
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "989": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1576,
        1603
      ],
      "op": "LT",
      "path": "0"
    },
    "990": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1569,
        1603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E6"
    },
    "993": {
      "branch": 24,
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1569,
        1603
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "994": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1569,
        1603
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "996": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1569,
        1603
      ],
      "op": "DUP1",
      "path": "0"
    },
    "997": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1569,
        1603
      ],
      "op": "REVERT",
      "path": "0"
    },
    "998": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1569,
        1603
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "999": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1659,
        1660
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x4"
    },
    "1001": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1002": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1004": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1005": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "LT",
      "path": "0"
    },
    "1006": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F6"
    },
    "1009": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1010": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1012": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1013": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1014": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1015": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1658
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1017": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1019": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1020": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1022": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1024": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1025": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1639,
        1661
      ],
      "op": "ADD",
      "path": "0"
    },
    "1026": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1632,
        1661
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1027": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1632,
        1661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1029": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1632,
        1661
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1030": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1632,
        1661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1032": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1632,
        1661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1034": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1632,
        1661
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1035": {
      "fn": "MetaPoolMock.base_coins",
      "offset": [
        1526,
        1661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1036": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x493B0D1"
    },
    "1041": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1042": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "EQ",
      "path": "0"
    },
    "1043": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1044": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x457"
    },
    "1047": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1048": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1049": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1050": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422"
    },
    "1053": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1054": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1056": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1057": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1058": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1059": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1732,
        1744
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "1061": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1728,
        1744
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1062": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1728,
        1729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1064": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1728,
        1744
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1065": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1728,
        1744
      ],
      "op": "LT",
      "path": "0"
    },
    "1066": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1721,
        1744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x432"
    },
    "1069": {
      "branch": 27,
      "fn": "MetaPoolMock.balances",
      "offset": [
        1721,
        1744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1070": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1721,
        1744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1072": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1073": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1721,
        1744
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1074": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1721,
        1744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1075": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1771,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x4"
    },
    "1077": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1078": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1080": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1081": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "LT",
      "path": "0"
    },
    "1082": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "1085": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1086": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1088": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1089": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1090": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1091": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "1093": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1095": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1096": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1098": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1100": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1101": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1756,
        1773
      ],
      "op": "ADD",
      "path": "0"
    },
    "1102": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1749,
        1773
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1103": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1749,
        1773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1105": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1749,
        1773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1106": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1749,
        1773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1108": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1749,
        1773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1110": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1749,
        1773
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1111": {
      "fn": "MetaPoolMock.balances",
      "offset": [
        1680,
        1773
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1112": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5ED443F"
    },
    "1117": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1118": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "EQ",
      "path": "0"
    },
    "1119": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1120": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "1123": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1124": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1125": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1126": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46E"
    },
    "1129": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1130": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1132": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1133": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1134": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1137": {
      "op": "CALLDATALOAD"
    },
    "1138": {
      "op": "DUP1"
    },
    "1139": {
      "op": "DUP1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1142": {
      "op": "DUP2"
    },
    "1143": {
      "op": "SLT"
    },
    "1144": {
      "op": "ISZERO"
    },
    "1145": {
      "op": "PUSH2",
      "value": "0x47E"
    },
    "1148": {
      "op": "JUMPI"
    },
    "1149": {
      "op": "NOT"
    },
    "1150": {
      "op": "JUMPDEST"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1153": {
      "op": "SHR"
    },
    "1154": {
      "op": "ISZERO"
    },
    "1155": {
      "op": "PUSH2",
      "value": "0x48B"
    },
    "1158": {
      "op": "JUMPI"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1161": {
      "op": "DUP1"
    },
    "1162": {
      "op": "REVERT"
    },
    "1163": {
      "op": "JUMPDEST"
    },
    "1164": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1165": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "POP",
      "path": "0"
    },
    "1166": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "POP",
      "path": "0"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1169": {
      "op": "CALLDATALOAD"
    },
    "1170": {
      "op": "DUP1"
    },
    "1171": {
      "op": "DUP1"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1174": {
      "op": "DUP2"
    },
    "1175": {
      "op": "SLT"
    },
    "1176": {
      "op": "ISZERO"
    },
    "1177": {
      "op": "PUSH2",
      "value": "0x49E"
    },
    "1180": {
      "op": "JUMPI"
    },
    "1181": {
      "op": "NOT"
    },
    "1182": {
      "op": "JUMPDEST"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1185": {
      "op": "SHR"
    },
    "1186": {
      "op": "ISZERO"
    },
    "1187": {
      "op": "PUSH2",
      "value": "0x4AB"
    },
    "1190": {
      "op": "JUMPI"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1193": {
      "op": "DUP1"
    },
    "1194": {
      "op": "REVERT"
    },
    "1195": {
      "op": "JUMPDEST"
    },
    "1196": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1197": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "POP",
      "path": "0"
    },
    "1198": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "POP",
      "path": "0"
    },
    "1199": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2482,
        2483
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x4"
    },
    "1201": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1202": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1204": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1205": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "LT",
      "path": "0"
    },
    "1206": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BE"
    },
    "1209": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1210": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1212": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1213": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1214": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1215": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2481
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1217": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1219": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1220": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1222": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1224": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1225": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2467,
        2484
      ],
      "op": "ADD",
      "path": "0"
    },
    "1226": {
      "op": "SLOAD"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2501,
        2502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1233": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1234": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1236": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1237": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "LT",
      "path": "0"
    },
    "1238": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "1241": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1242": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1244": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1245": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1246": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1247": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1249": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1251": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1252": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1254": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1256": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1257": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2486,
        2503
      ],
      "op": "ADD",
      "path": "0"
    },
    "1258": {
      "op": "SLOAD"
    },
    "1259": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2505,
        2507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1265": {
      "op": "CALLDATALOAD"
    },
    "1266": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1273": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1274": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1277": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1278": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "1281": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1282": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1284": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "PC",
      "path": "0"
    },
    "1285": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "ADD",
      "path": "0"
    },
    "1286": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A1"
    },
    "1289": {
      "fn": "MetaPoolMock.get_dy",
      "jump": "i",
      "offset": [
        2454,
        2508
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1290": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1291": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "1294": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1295": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2454,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "1298": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2447,
        2508
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1299": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2447,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1301": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2447,
        2508
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1302": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2447,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1304": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2447,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1306": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2447,
        2508
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1307": {
      "fn": "MetaPoolMock.get_dy",
      "offset": [
        2385,
        2508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1308": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7211EF7"
    },
    "1313": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1314": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "EQ",
      "path": "0"
    },
    "1315": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1316": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F0"
    },
    "1319": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1320": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1321": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1322": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x532"
    },
    "1325": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1326": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1328": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1329": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1330": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1333": {
      "op": "CALLDATALOAD"
    },
    "1334": {
      "op": "DUP1"
    },
    "1335": {
      "op": "DUP1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1338": {
      "op": "DUP2"
    },
    "1339": {
      "op": "SLT"
    },
    "1340": {
      "op": "ISZERO"
    },
    "1341": {
      "op": "PUSH2",
      "value": "0x542"
    },
    "1344": {
      "op": "JUMPI"
    },
    "1345": {
      "op": "NOT"
    },
    "1346": {
      "op": "JUMPDEST"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1349": {
      "op": "SHR"
    },
    "1350": {
      "op": "ISZERO"
    },
    "1351": {
      "op": "PUSH2",
      "value": "0x54F"
    },
    "1354": {
      "op": "JUMPI"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1357": {
      "op": "DUP1"
    },
    "1358": {
      "op": "REVERT"
    },
    "1359": {
      "op": "JUMPDEST"
    },
    "1360": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1361": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "POP",
      "path": "0"
    },
    "1362": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "POP",
      "path": "0"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1365": {
      "op": "CALLDATALOAD"
    },
    "1366": {
      "op": "DUP1"
    },
    "1367": {
      "op": "DUP1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1370": {
      "op": "DUP2"
    },
    "1371": {
      "op": "SLT"
    },
    "1372": {
      "op": "ISZERO"
    },
    "1373": {
      "op": "PUSH2",
      "value": "0x562"
    },
    "1376": {
      "op": "JUMPI"
    },
    "1377": {
      "op": "NOT"
    },
    "1378": {
      "op": "JUMPDEST"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1381": {
      "op": "SHR"
    },
    "1382": {
      "op": "ISZERO"
    },
    "1383": {
      "op": "PUSH2",
      "value": "0x56F"
    },
    "1386": {
      "op": "JUMPI"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1389": {
      "op": "DUP1"
    },
    "1390": {
      "op": "REVERT"
    },
    "1391": {
      "op": "JUMPDEST"
    },
    "1392": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1393": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "POP",
      "path": "0"
    },
    "1394": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "POP",
      "path": "0"
    },
    "1395": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1397": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1398": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "1401": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1402": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2711
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x0"
    },
    "1404": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1405": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2714,
        2715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1407": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1408": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1409": {
      "op": "LT"
    },
    "1410": {
      "op": "ISZERO"
    },
    "1411": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58B"
    },
    "1414": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1415": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1417": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1418": {
      "dev": "Integer underflow",
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1419": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1420": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1421": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1422": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "SUB",
      "path": "0"
    },
    "1423": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1424": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "POP",
      "path": "0"
    },
    "1425": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1426": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2699,
        2715
      ],
      "op": "POP",
      "path": "0"
    },
    "1427": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1429": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1430": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1431": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "GT",
      "path": "0"
    },
    "1432": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1433": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A1"
    },
    "1436": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1437": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1439": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1440": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1441": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2691,
        2724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1442": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2667,
        2724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1445": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1446": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2737,
        2750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1449": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2732,
        2750
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1450": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2732,
        2733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1452": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2732,
        2750
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1453": {
      "op": "SGT"
    },
    "1454": {
      "op": "ISZERO"
    },
    "1455": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2729,
        2848
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1456": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2729,
        2848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D8"
    },
    "1459": {
      "branch": 31,
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2729,
        2848
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1460": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2783,
        2784
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x4"
    },
    "1462": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1463": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1465": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1466": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "LT",
      "path": "0"
    },
    "1467": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C3"
    },
    "1470": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1471": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1473": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1474": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1475": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1476": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1478": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1480": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1481": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1483": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1485": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1486": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2768,
        2785
      ],
      "op": "ADD",
      "path": "0"
    },
    "1487": {
      "op": "SLOAD"
    },
    "1488": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2760,
        2765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "1491": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2760,
        2785
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1492": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2729,
        2848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x620"
    },
    "1495": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2729,
        2848
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1496": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2729,
        2848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1497": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2833
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x4"
    },
    "1499": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1500": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2834,
        2847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1503": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1504": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1505": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1506": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "SUB",
      "path": "0"
    },
    "1507": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1508": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1509": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1511": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1512": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "SLT",
      "path": "0"
    },
    "1513": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1514": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EF"
    },
    "1517": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1518": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "NOT",
      "path": "0"
    },
    "1519": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1520": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7F"
    },
    "1522": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "SHR",
      "path": "0"
    },
    "1523": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1524": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FC"
    },
    "1527": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1528": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1530": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1531": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1532": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1533": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1534": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "POP",
      "path": "0"
    },
    "1535": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1536": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "POP",
      "path": "0"
    },
    "1537": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1538": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2832,
        2847
      ],
      "op": "POP",
      "path": "0"
    },
    "1539": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1541": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1542": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "LT",
      "path": "0"
    },
    "1543": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "1546": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1547": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1549": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1550": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1551": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1552": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1554": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1556": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1557": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1559": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1561": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1562": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2812,
        2848
      ],
      "op": "ADD",
      "path": "0"
    },
    "1563": {
      "op": "SLOAD"
    },
    "1564": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2804,
        2809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "1567": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2804,
        2848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1568": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2729,
        2848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1569": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2861,
        2874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1572": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2856,
        2874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1573": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2856,
        2857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1575": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2856,
        2874
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1576": {
      "op": "SGT"
    },
    "1577": {
      "op": "ISZERO"
    },
    "1578": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2853,
        2968
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1579": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2853,
        2968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x653"
    },
    "1582": {
      "branch": 34,
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2853,
        2968
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1583": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2905,
        2906
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x24"
    },
    "1585": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1586": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1588": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1589": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "LT",
      "path": "0"
    },
    "1590": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63E"
    },
    "1593": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1594": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1596": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1597": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1598": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1599": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1601": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1603": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1604": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1606": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1608": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1609": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2890,
        2907
      ],
      "op": "ADD",
      "path": "0"
    },
    "1610": {
      "op": "SLOAD"
    },
    "1611": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2884,
        2887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1614": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2884,
        2907
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1615": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2853,
        2968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69B"
    },
    "1618": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2853,
        2968
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1619": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2853,
        2968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1620": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2953
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x24"
    },
    "1622": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1623": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2954,
        2967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1626": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1627": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1628": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1629": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "SUB",
      "path": "0"
    },
    "1630": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1631": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1632": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1634": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1635": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "SLT",
      "path": "0"
    },
    "1636": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1637": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66A"
    },
    "1640": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1641": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "NOT",
      "path": "0"
    },
    "1642": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1643": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7F"
    },
    "1645": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "SHR",
      "path": "0"
    },
    "1646": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1647": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x677"
    },
    "1650": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1651": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1653": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1654": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1655": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1656": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1657": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "POP",
      "path": "0"
    },
    "1658": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1659": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "POP",
      "path": "0"
    },
    "1660": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1661": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2952,
        2967
      ],
      "op": "POP",
      "path": "0"
    },
    "1662": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1664": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1665": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "LT",
      "path": "0"
    },
    "1666": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68A"
    },
    "1669": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1670": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1672": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1673": {
      "dev": "Index out of range",
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1674": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1675": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2951
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1677": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1679": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1680": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1682": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1684": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1685": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2932,
        2968
      ],
      "op": "ADD",
      "path": "0"
    },
    "1686": {
      "op": "SLOAD"
    },
    "1687": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2926,
        2929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1690": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2926,
        2968
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1691": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2853,
        2968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1692": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0x140"
    },
    "1695": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1696": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1699": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1700": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1703": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1704": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2994,
        2999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "1707": {
      "op": "MLOAD"
    },
    "1708": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        3001,
        3004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1715": {
      "op": "MLOAD"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "1719": {
      "op": "MSTORE"
    },
    "1720": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        3006,
        3008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1722": {
      "op": "CALLDATALOAD"
    },
    "1723": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "1726": {
      "op": "MSTORE"
    },
    "1727": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "1730": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1731": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "1734": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1735": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "1738": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1739": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1741": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PC",
      "path": "0"
    },
    "1742": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "ADD",
      "path": "0"
    },
    "1743": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A1"
    },
    "1746": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "jump": "i",
      "offset": [
        2981,
        3009
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1747": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1748": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "1751": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1752": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1755": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1756": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1759": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1760": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "1763": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1764": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2981,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "1767": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2974,
        3009
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1768": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2974,
        3009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1770": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2974,
        3009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1771": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2974,
        3009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1773": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2974,
        3009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1775": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2974,
        3009
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1776": {
      "fn": "MetaPoolMock.get_dy_underlying",
      "offset": [
        2527,
        3009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1777": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBB8D331D"
    },
    "1782": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1783": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "EQ",
      "path": "0"
    },
    "1784": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1785": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x727"
    },
    "1788": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1789": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1790": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1791": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77"
    },
    "1794": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1795": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1797": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1798": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1799": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1800": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5396,
        5398
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x4"
    },
    "1802": {
      "op": "CALLDATALOAD"
    },
    "1803": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5387,
        5393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1805": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5387,
        5398
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1806": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5420,
        5430
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x24"
    },
    "1808": {
      "op": "CALLDATALOAD"
    },
    "1809": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5403,
        5417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1811": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5403,
        5430
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1812": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5457,
        5472
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x44"
    },
    "1814": {
      "op": "CALLDATALOAD"
    },
    "1815": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5435,
        5454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1817": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5435,
        5472
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1818": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5493,
        5502
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x64"
    },
    "1820": {
      "op": "CALLDATALOAD"
    },
    "1821": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5477,
        5490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1823": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5477,
        5502
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1824": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5528,
        5542
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0x84"
    },
    "1826": {
      "op": "CALLDATALOAD"
    },
    "1827": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5507,
        5525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1829": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5507,
        5542
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1830": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "STOP",
      "path": "0"
    },
    "1831": {
      "fn": "MetaPoolMock._set_A",
      "offset": [
        5244,
        5542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1832": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEEE22ABB"
    },
    "1837": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1838": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "EQ",
      "path": "0"
    },
    "1839": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1840": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76E"
    },
    "1843": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1844": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1845": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1846": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73E"
    },
    "1849": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1850": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1852": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1853": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1854": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1857": {
      "op": "CALLDATALOAD"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1860": {
      "op": "SHR"
    },
    "1861": {
      "op": "ISZERO"
    },
    "1862": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74E"
    },
    "1865": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1866": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1868": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1869": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1870": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1871": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5727,
        5731
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x4"
    },
    "1873": {
      "op": "CALLDATALOAD"
    },
    "1874": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5716,
        5724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1876": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5716,
        5731
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1877": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5753,
        5763
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x24"
    },
    "1879": {
      "op": "CALLDATALOAD"
    },
    "1880": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5736,
        5750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1882": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5736,
        5763
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1883": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5786,
        5797
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x44"
    },
    "1885": {
      "op": "CALLDATALOAD"
    },
    "1886": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5768,
        5783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1888": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5768,
        5797
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1889": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5826,
        5843
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x64"
    },
    "1891": {
      "op": "CALLDATALOAD"
    },
    "1892": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5802,
        5823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1894": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5802,
        5843
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1895": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5868,
        5881
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x84"
    },
    "1897": {
      "op": "CALLDATALOAD"
    },
    "1898": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5848,
        5865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1900": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5848,
        5881
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1901": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "STOP",
      "path": "0"
    },
    "1902": {
      "fn": "MetaPoolMock._set_fees_and_owner",
      "offset": [
        5555,
        5881
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1903": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAB203BC4"
    },
    "1908": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1909": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "EQ",
      "path": "0"
    },
    "1910": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1911": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B7"
    },
    "1914": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1915": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1916": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1917": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x785"
    },
    "1920": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1921": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1923": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1924": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1925": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1926": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5957
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x10"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1930": {
      "op": "MSTORE"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1935": {
      "op": "SHA3"
    },
    "1936": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5960,
        5973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1938": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1939": {
      "op": "CALLDATALOAD"
    },
    "1940": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1941": {
      "op": "SSTORE"
    },
    "1942": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1943": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1945": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "ADD",
      "path": "0"
    },
    "1946": {
      "op": "CALLDATALOAD"
    },
    "1947": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1949": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1950": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "ADD",
      "path": "0"
    },
    "1951": {
      "op": "SSTORE"
    },
    "1952": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1953": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1955": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "ADD",
      "path": "0"
    },
    "1956": {
      "op": "CALLDATALOAD"
    },
    "1957": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1959": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1960": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "ADD",
      "path": "0"
    },
    "1961": {
      "op": "SSTORE"
    },
    "1962": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1963": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1965": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "ADD",
      "path": "0"
    },
    "1966": {
      "op": "CALLDATALOAD"
    },
    "1967": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1969": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1970": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "ADD",
      "path": "0"
    },
    "1971": {
      "op": "SSTORE"
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5943,
        5973
      ],
      "op": "POP",
      "path": "0"
    },
    "1974": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "STOP",
      "path": "0"
    },
    "1975": {
      "fn": "MetaPoolMock._set_balances",
      "offset": [
        5893,
        5973
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1976": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3BA68012"
    },
    "1981": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1982": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "EQ",
      "path": "0"
    },
    "1983": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1984": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D6"
    },
    "1987": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1988": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1989": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1990": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CE"
    },
    "1993": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1994": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1996": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1997": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1998": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1999": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        6056,
        6062
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x4"
    },
    "2001": {
      "op": "CALLDATALOAD"
    },
    "2002": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        6031,
        6053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2004": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        6031,
        6062
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2005": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "STOP",
      "path": "0"
    },
    "2006": {
      "fn": "MetaPoolMock._set_virtual_price",
      "offset": [
        5986,
        6062
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2007": {
      "offset": [
        456,
        471
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xED52976A"
    },
    "2012": {
      "offset": [
        456,
        471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2013": {
      "offset": [
        456,
        471
      ],
      "op": "EQ",
      "path": "0"
    },
    "2014": {
      "offset": [
        456,
        471
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2015": {
      "offset": [
        456,
        471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "2018": {
      "offset": [
        456,
        471
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2019": {
      "offset": [
        456,
        471
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2020": {
      "offset": [
        456,
        471
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2021": {
      "offset": [
        456,
        471
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7ED"
    },
    "2024": {
      "offset": [
        456,
        471
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2025": {
      "offset": [
        456,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2027": {
      "offset": [
        456,
        471
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2028": {
      "offset": [
        456,
        471
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2029": {
      "offset": [
        456,
        471
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2032": {
      "offset": [
        456,
        471
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2033": {
      "offset": [
        456,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2035": {
      "offset": [
        456,
        471
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2036": {
      "offset": [
        456,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2038": {
      "offset": [
        456,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2040": {
      "offset": [
        456,
        471
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2041": {
      "offset": [
        456,
        471
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2042": {
      "offset": [
        553,
        568
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF446C1D0"
    },
    "2047": {
      "offset": [
        553,
        568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2048": {
      "offset": [
        553,
        568
      ],
      "op": "EQ",
      "path": "0"
    },
    "2049": {
      "offset": [
        553,
        568
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2050": {
      "offset": [
        553,
        568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81C"
    },
    "2053": {
      "offset": [
        553,
        568
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2054": {
      "offset": [
        553,
        568
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2055": {
      "offset": [
        553,
        568
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2056": {
      "offset": [
        553,
        568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x810"
    },
    "2059": {
      "offset": [
        553,
        568
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2060": {
      "offset": [
        553,
        568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2062": {
      "offset": [
        553,
        568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2063": {
      "offset": [
        553,
        568
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2064": {
      "offset": [
        553,
        568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2067": {
      "offset": [
        553,
        568
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2068": {
      "offset": [
        553,
        568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2070": {
      "offset": [
        553,
        568
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2071": {
      "offset": [
        553,
        568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2073": {
      "offset": [
        553,
        568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2075": {
      "offset": [
        553,
        568
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2076": {
      "offset": [
        553,
        568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2077": {
      "offset": [
        580,
        595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x549491A"
    },
    "2082": {
      "offset": [
        580,
        595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2083": {
      "offset": [
        580,
        595
      ],
      "op": "EQ",
      "path": "0"
    },
    "2084": {
      "offset": [
        580,
        595
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2085": {
      "offset": [
        580,
        595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83F"
    },
    "2088": {
      "offset": [
        580,
        595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2089": {
      "offset": [
        580,
        595
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2090": {
      "offset": [
        580,
        595
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2091": {
      "offset": [
        580,
        595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x833"
    },
    "2094": {
      "offset": [
        580,
        595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2095": {
      "offset": [
        580,
        595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2097": {
      "offset": [
        580,
        595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2098": {
      "offset": [
        580,
        595
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2099": {
      "offset": [
        580,
        595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2102": {
      "offset": [
        580,
        595
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2103": {
      "offset": [
        580,
        595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2105": {
      "offset": [
        580,
        595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2106": {
      "offset": [
        580,
        595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2108": {
      "offset": [
        580,
        595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2110": {
      "offset": [
        580,
        595
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2111": {
      "offset": [
        580,
        595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2112": {
      "offset": [
        612,
        627
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x208166C"
    },
    "2117": {
      "offset": [
        612,
        627
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2118": {
      "offset": [
        612,
        627
      ],
      "op": "EQ",
      "path": "0"
    },
    "2119": {
      "offset": [
        612,
        627
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2120": {
      "offset": [
        612,
        627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x862"
    },
    "2123": {
      "offset": [
        612,
        627
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2124": {
      "offset": [
        612,
        627
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2125": {
      "offset": [
        612,
        627
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2126": {
      "offset": [
        612,
        627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x856"
    },
    "2129": {
      "offset": [
        612,
        627
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2130": {
      "offset": [
        612,
        627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2132": {
      "offset": [
        612,
        627
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2133": {
      "offset": [
        612,
        627
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2134": {
      "offset": [
        612,
        627
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "2137": {
      "offset": [
        612,
        627
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2138": {
      "offset": [
        612,
        627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2140": {
      "offset": [
        612,
        627
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2141": {
      "offset": [
        612,
        627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2143": {
      "offset": [
        612,
        627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2145": {
      "offset": [
        612,
        627
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2146": {
      "offset": [
        612,
        627
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2147": {
      "offset": [
        638,
        653
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB4B577AD"
    },
    "2152": {
      "offset": [
        638,
        653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2153": {
      "offset": [
        638,
        653
      ],
      "op": "EQ",
      "path": "0"
    },
    "2154": {
      "offset": [
        638,
        653
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2155": {
      "offset": [
        638,
        653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x885"
    },
    "2158": {
      "offset": [
        638,
        653
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2159": {
      "offset": [
        638,
        653
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2160": {
      "offset": [
        638,
        653
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2161": {
      "offset": [
        638,
        653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x879"
    },
    "2164": {
      "offset": [
        638,
        653
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2165": {
      "offset": [
        638,
        653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2167": {
      "offset": [
        638,
        653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2168": {
      "offset": [
        638,
        653
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2169": {
      "offset": [
        638,
        653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "2172": {
      "offset": [
        638,
        653
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2173": {
      "offset": [
        638,
        653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2175": {
      "offset": [
        638,
        653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2176": {
      "offset": [
        638,
        653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2178": {
      "offset": [
        638,
        653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2180": {
      "offset": [
        638,
        653
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2181": {
      "offset": [
        638,
        653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2182": {
      "offset": [
        669,
        684
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1452288"
    },
    "2187": {
      "offset": [
        669,
        684
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2188": {
      "offset": [
        669,
        684
      ],
      "op": "EQ",
      "path": "0"
    },
    "2189": {
      "offset": [
        669,
        684
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2190": {
      "offset": [
        669,
        684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A8"
    },
    "2193": {
      "offset": [
        669,
        684
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2194": {
      "offset": [
        669,
        684
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2195": {
      "offset": [
        669,
        684
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2196": {
      "offset": [
        669,
        684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89C"
    },
    "2199": {
      "offset": [
        669,
        684
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2200": {
      "offset": [
        669,
        684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2202": {
      "offset": [
        669,
        684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2203": {
      "offset": [
        669,
        684
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2204": {
      "offset": [
        669,
        684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "2207": {
      "offset": [
        669,
        684
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2208": {
      "offset": [
        669,
        684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2210": {
      "offset": [
        669,
        684
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2211": {
      "offset": [
        669,
        684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2213": {
      "offset": [
        669,
        684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2215": {
      "offset": [
        669,
        684
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2216": {
      "offset": [
        669,
        684
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2217": {
      "offset": [
        691,
        706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDDCA3F43"
    },
    "2222": {
      "offset": [
        691,
        706
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2223": {
      "offset": [
        691,
        706
      ],
      "op": "EQ",
      "path": "0"
    },
    "2224": {
      "offset": [
        691,
        706
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2225": {
      "offset": [
        691,
        706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8CB"
    },
    "2228": {
      "offset": [
        691,
        706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2229": {
      "offset": [
        691,
        706
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2230": {
      "offset": [
        691,
        706
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2231": {
      "offset": [
        691,
        706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BF"
    },
    "2234": {
      "offset": [
        691,
        706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2235": {
      "offset": [
        691,
        706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2237": {
      "offset": [
        691,
        706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2238": {
      "offset": [
        691,
        706
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2239": {
      "offset": [
        691,
        706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "2242": {
      "offset": [
        691,
        706
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2243": {
      "offset": [
        691,
        706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2245": {
      "offset": [
        691,
        706
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2246": {
      "offset": [
        691,
        706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2248": {
      "offset": [
        691,
        706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2250": {
      "offset": [
        691,
        706
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2251": {
      "offset": [
        691,
        706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2252": {
      "offset": [
        718,
        733
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFEE3F7F9"
    },
    "2257": {
      "offset": [
        718,
        733
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2258": {
      "offset": [
        718,
        733
      ],
      "op": "EQ",
      "path": "0"
    },
    "2259": {
      "offset": [
        718,
        733
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2260": {
      "offset": [
        718,
        733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EE"
    },
    "2263": {
      "offset": [
        718,
        733
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2264": {
      "offset": [
        718,
        733
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2265": {
      "offset": [
        718,
        733
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2266": {
      "offset": [
        718,
        733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E2"
    },
    "2269": {
      "offset": [
        718,
        733
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2270": {
      "offset": [
        718,
        733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2272": {
      "offset": [
        718,
        733
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2273": {
      "offset": [
        718,
        733
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2274": {
      "offset": [
        718,
        733
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2277": {
      "offset": [
        718,
        733
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2278": {
      "offset": [
        718,
        733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2280": {
      "offset": [
        718,
        733
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2281": {
      "offset": [
        718,
        733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2283": {
      "offset": [
        718,
        733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2285": {
      "offset": [
        718,
        733
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2286": {
      "offset": [
        718,
        733
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2287": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5868DB"
    },
    "2292": {
      "offset": [
        746,
        761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2293": {
      "offset": [
        746,
        761
      ],
      "op": "EQ",
      "path": "0"
    },
    "2294": {
      "offset": [
        746,
        761
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2295": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x911"
    },
    "2298": {
      "offset": [
        746,
        761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2299": {
      "offset": [
        746,
        761
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2300": {
      "offset": [
        746,
        761
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2301": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "2304": {
      "offset": [
        746,
        761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2305": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2307": {
      "offset": [
        746,
        761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2308": {
      "offset": [
        746,
        761
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2309": {
      "offset": [
        746,
        761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "2312": {
      "offset": [
        746,
        761
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2313": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2315": {
      "offset": [
        746,
        761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2316": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2318": {
      "offset": [
        746,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2320": {
      "offset": [
        746,
        761
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2321": {
      "offset": [
        746,
        761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2322": {
      "offset": [
        780,
        795
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE3824462"
    },
    "2327": {
      "offset": [
        780,
        795
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2328": {
      "offset": [
        780,
        795
      ],
      "op": "EQ",
      "path": "0"
    },
    "2329": {
      "offset": [
        780,
        795
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2330": {
      "offset": [
        780,
        795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x934"
    },
    "2333": {
      "offset": [
        780,
        795
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2334": {
      "offset": [
        780,
        795
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2335": {
      "offset": [
        780,
        795
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2336": {
      "offset": [
        780,
        795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x928"
    },
    "2339": {
      "offset": [
        780,
        795
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2340": {
      "offset": [
        780,
        795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2342": {
      "offset": [
        780,
        795
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2343": {
      "offset": [
        780,
        795
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2344": {
      "offset": [
        780,
        795
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "2347": {
      "offset": [
        780,
        795
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2348": {
      "offset": [
        780,
        795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2350": {
      "offset": [
        780,
        795
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2351": {
      "offset": [
        780,
        795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2353": {
      "offset": [
        780,
        795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2355": {
      "offset": [
        780,
        795
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2356": {
      "offset": [
        780,
        795
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2357": {
      "offset": [
        810,
        825
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1EC0CDC1"
    },
    "2362": {
      "offset": [
        810,
        825
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2363": {
      "offset": [
        810,
        825
      ],
      "op": "EQ",
      "path": "0"
    },
    "2364": {
      "offset": [
        810,
        825
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2365": {
      "offset": [
        810,
        825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x957"
    },
    "2368": {
      "offset": [
        810,
        825
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2369": {
      "offset": [
        810,
        825
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2370": {
      "offset": [
        810,
        825
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2371": {
      "offset": [
        810,
        825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94B"
    },
    "2374": {
      "offset": [
        810,
        825
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2375": {
      "offset": [
        810,
        825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2377": {
      "offset": [
        810,
        825
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2378": {
      "offset": [
        810,
        825
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2379": {
      "offset": [
        810,
        825
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2382": {
      "offset": [
        810,
        825
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2383": {
      "offset": [
        810,
        825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2385": {
      "offset": [
        810,
        825
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2386": {
      "offset": [
        810,
        825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2388": {
      "offset": [
        810,
        825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2390": {
      "offset": [
        810,
        825
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2391": {
      "offset": [
        810,
        825
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2392": {
      "offset": [
        838,
        853
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5D6362BB"
    },
    "2397": {
      "offset": [
        838,
        853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2398": {
      "offset": [
        838,
        853
      ],
      "op": "EQ",
      "path": "0"
    },
    "2399": {
      "offset": [
        838,
        853
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2400": {
      "offset": [
        838,
        853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97A"
    },
    "2403": {
      "offset": [
        838,
        853
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2404": {
      "offset": [
        838,
        853
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2405": {
      "offset": [
        838,
        853
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2406": {
      "offset": [
        838,
        853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96E"
    },
    "2409": {
      "offset": [
        838,
        853
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2410": {
      "offset": [
        838,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2412": {
      "offset": [
        838,
        853
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2413": {
      "offset": [
        838,
        853
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2414": {
      "offset": [
        838,
        853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2417": {
      "offset": [
        838,
        853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2418": {
      "offset": [
        838,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2420": {
      "offset": [
        838,
        853
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2421": {
      "offset": [
        838,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2423": {
      "offset": [
        838,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2425": {
      "offset": [
        838,
        853
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2426": {
      "offset": [
        838,
        853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2427": {
      "offset": [
        873,
        888
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBB7B8B80"
    },
    "2432": {
      "offset": [
        873,
        888
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2433": {
      "offset": [
        873,
        888
      ],
      "op": "EQ",
      "path": "0"
    },
    "2434": {
      "offset": [
        873,
        888
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2435": {
      "offset": [
        873,
        888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99D"
    },
    "2438": {
      "offset": [
        873,
        888
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2439": {
      "offset": [
        873,
        888
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2440": {
      "offset": [
        873,
        888
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2441": {
      "offset": [
        873,
        888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x991"
    },
    "2444": {
      "offset": [
        873,
        888
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2445": {
      "offset": [
        873,
        888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2447": {
      "offset": [
        873,
        888
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2448": {
      "offset": [
        873,
        888
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2449": {
      "offset": [
        873,
        888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2452": {
      "offset": [
        873,
        888
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2453": {
      "offset": [
        873,
        888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2455": {
      "offset": [
        873,
        888
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2456": {
      "offset": [
        873,
        888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2458": {
      "offset": [
        873,
        888
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2460": {
      "offset": [
        873,
        888
      ],
      "op": "RETURN",
      "path": "0"
    },
    "2461": {
      "offset": [
        873,
        888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2462": {
      "op": "POP"
    },
    "2463": {
      "op": "JUMPDEST"
    },
    "2464": {
      "fn": "MetaPoolMock.__default__",
      "offset": [
        6084,
        6111
      ],
      "op": "STOP",
      "path": "0"
    },
    "2465": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1792,
        2366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2466": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "2469": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1792,
        2366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2470": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "2473": {
      "op": "MSTORE"
    },
    "2474": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "2477": {
      "op": "MSTORE"
    },
    "2478": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1792,
        2366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2484": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1792,
        2366
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2485": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1792,
        2366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2488": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1792,
        2366
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "2489": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1941,
        1983
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "2510": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1932,
        1937
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "2513": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1932,
        1983
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2514": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1932,
        1983
      ],
      "op": "EQ",
      "path": "0"
    },
    "2515": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1929,
        2077
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2516": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1929,
        2077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "2519": {
      "branch": 50,
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1929,
        2077
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2520": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2011,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x12"
    },
    "2522": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1993,
        2008
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2525": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1993,
        2013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2526": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1929,
        2077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1D"
    },
    "2529": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1929,
        2077
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2530": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1929,
        2077
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2531": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0x20"
    },
    "2533": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2536": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2538": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "2543": {
      "op": "PUSH2",
      "value": "0x20"
    },
    "2546": {
      "op": "MSTORE"
    },
    "2547": {
      "op": "PUSH2",
      "value": "0x21C"
    },
    "2550": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2060,
        2065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "2553": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2554": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "GAS",
      "path": "0"
    },
    "2555": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2556": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA4"
    },
    "2559": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2560": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2562": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2563": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2564": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2565": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2567": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2568": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "GT",
      "path": "0"
    },
    "2569": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA11"
    },
    "2572": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2573": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2575": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2576": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2577": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2578": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2580": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "POP",
      "path": "0"
    },
    "2581": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2050,
        2077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2584": {
      "op": "MLOAD"
    },
    "2585": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2032,
        2047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2588": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2032,
        2077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2589": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1929,
        2077
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2590": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2092,
        2134
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "2611": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2085,
        2088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2614": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2085,
        2134
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2615": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2085,
        2134
      ],
      "op": "EQ",
      "path": "0"
    },
    "2616": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2082,
        2222
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2617": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2082,
        2222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA47"
    },
    "2620": {
      "branch": 53,
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2082,
        2222
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2621": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2160,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0x12"
    },
    "2623": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2144,
        2157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2626": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2144,
        2162
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2627": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2082,
        2222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA82"
    },
    "2630": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2082,
        2222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2631": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2082,
        2222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2632": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0x20"
    },
    "2634": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2637": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2639": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "2644": {
      "op": "PUSH2",
      "value": "0x20"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "op": "PUSH2",
      "value": "0x21C"
    },
    "2651": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2207,
        2210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2654": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2655": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "GAS",
      "path": "0"
    },
    "2656": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2657": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA69"
    },
    "2660": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2661": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2663": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2664": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2665": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2666": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2668": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2669": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "GT",
      "path": "0"
    },
    "2670": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA76"
    },
    "2673": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2674": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2676": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2677": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2678": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2679": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2681": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "POP",
      "path": "0"
    },
    "2682": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2197,
        2222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2685": {
      "op": "MLOAD"
    },
    "2686": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2181,
        2194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2689": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2181,
        2222
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2690": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2082,
        2222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2691": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2246
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 56,
      "value": "0x180"
    },
    "2694": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2695": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4E"
    },
    "2697": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2254,
        2267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2700": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2701": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "LT",
      "path": "0"
    },
    "2702": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA96"
    },
    "2705": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2706": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2708": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2709": {
      "dev": "Integer overflow",
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2710": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2711": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2254,
        2267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2714": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2715": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2717": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2250,
        2267
      ],
      "op": "EXP",
      "path": "0"
    },
    "2718": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2719": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2720": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "MUL",
      "path": "0"
    },
    "2721": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2722": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2723": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2724": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2725": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2726": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "DIV",
      "path": "0"
    },
    "2727": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "EQ",
      "path": "0"
    },
    "2728": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "OR",
      "path": "0"
    },
    "2729": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB1"
    },
    "2732": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2733": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2735": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2736": {
      "dev": "Integer overflow",
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2737": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2738": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2739": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2740": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "POP",
      "path": "0"
    },
    "2741": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2742": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "POP",
      "path": "0"
    },
    "2743": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2744": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2268
      ],
      "op": "POP",
      "path": "0"
    },
    "2745": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4E"
    },
    "2747": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2276,
        2291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2750": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2751": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "LT",
      "path": "0"
    },
    "2752": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC8"
    },
    "2755": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2756": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2758": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2759": {
      "dev": "Integer overflow",
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2760": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2761": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2276,
        2291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2764": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2765": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2767": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2272,
        2291
      ],
      "op": "EXP",
      "path": "0"
    },
    "2768": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2769": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2770": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "2773": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2774": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2776": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2777": {
      "dev": "Division by zero",
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2778": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2779": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2780": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "DIV",
      "path": "0"
    },
    "2781": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2782": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "POP",
      "path": "0"
    },
    "2783": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2784": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2243,
        2292
      ],
      "op": "POP",
      "path": "0"
    },
    "2785": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2228,
        2292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2788": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1792,
        2366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2789": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2316
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 57,
      "value": "0x20"
    },
    "2792": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2793": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2319,
        2327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2795": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2796": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2797": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2798": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "MUL",
      "path": "0"
    },
    "2799": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2800": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2801": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2802": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2803": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2804": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "DIV",
      "path": "0"
    },
    "2805": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "EQ",
      "path": "0"
    },
    "2806": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "OR",
      "path": "0"
    },
    "2807": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFF"
    },
    "2810": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2811": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2813": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2814": {
      "dev": "Integer overflow",
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2815": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2816": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2817": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2818": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "POP",
      "path": "0"
    },
    "2819": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2820": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "POP",
      "path": "0"
    },
    "2821": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2822": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2327
      ],
      "op": "POP",
      "path": "0"
    },
    "2823": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2330,
        2343
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x254BE40"
    },
    "2829": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2343
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2830": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2343
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2831": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2343
      ],
      "op": "DIV",
      "path": "0"
    },
    "2832": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2833": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2343
      ],
      "op": "POP",
      "path": "0"
    },
    "2834": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2835": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2313,
        2343
      ],
      "op": "POP",
      "path": "0"
    },
    "2836": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2297,
        2343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2839": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        1792,
        2366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2840": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2359
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 58,
      "value": "0x20"
    },
    "2843": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2844": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2362,
        2366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2847": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2848": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2849": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2850": {
      "op": "LT"
    },
    "2851": {
      "op": "ISZERO"
    },
    "2852": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2C"
    },
    "2855": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2856": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2858": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2859": {
      "dev": "Integer underflow",
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2860": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2861": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2862": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2863": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "SUB",
      "path": "0"
    },
    "2864": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2865": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "POP",
      "path": "0"
    },
    "2866": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2867": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2356,
        2366
      ],
      "op": "POP",
      "path": "0"
    },
    "2868": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2349,
        2366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2870": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2349,
        2366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2871": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2349,
        2366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2873": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2349,
        2366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2874": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2349,
        2366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2877": {
      "fn": "MetaPoolMock._get_dy",
      "offset": [
        2349,
        2366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2878": {
      "fn": "MetaPoolMock._get_dy",
      "jump": "o",
      "offset": [
        2349,
        2366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2879": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3022,
        4182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2880": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "2883": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3022,
        4182
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2884": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "2887": {
      "op": "MSTORE"
    },
    "2888": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "2891": {
      "op": "MSTORE"
    },
    "2892": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "2895": {
      "op": "MSTORE"
    },
    "2896": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "2899": {
      "op": "MSTORE"
    },
    "2900": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 59,
      "value": "0x140"
    },
    "2907": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2908": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2911": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2912": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2915": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2916": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2919": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2920": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2923": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2924": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2927": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2928": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2931": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2932": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3146,
        3151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2935": {
      "op": "MLOAD"
    },
    "2936": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "2939": {
      "op": "MSTORE"
    },
    "2940": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3153,
        3156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2943": {
      "op": "MLOAD"
    },
    "2944": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "2947": {
      "op": "MSTORE"
    },
    "2948": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3158,
        3160
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2951": {
      "op": "MLOAD"
    },
    "2952": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "2955": {
      "op": "MSTORE"
    },
    "2956": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "2959": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2960": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "2963": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2964": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "2967": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2968": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2970": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PC",
      "path": "0"
    },
    "2971": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "ADD",
      "path": "0"
    },
    "2972": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A1"
    },
    "2975": {
      "fn": "MetaPoolMock._exchange",
      "jump": "i",
      "offset": [
        3133,
        3161
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2976": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2977": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C0"
    },
    "2980": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2981": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "2984": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2985": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "2988": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2989": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "2992": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2993": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "2996": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2997": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "3000": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3001": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "3004": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3005": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "3008": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3009": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3133,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C0"
    },
    "3012": {
      "op": "MLOAD"
    },
    "3013": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3119,
        3161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "3016": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3022,
        4182
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3017": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3179,
        3185
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 60,
      "value": "0x1C0"
    },
    "3020": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3173,
        3185
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3021": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "3024": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3173,
        3185
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3025": {
      "op": "LT"
    },
    "3026": {
      "op": "ISZERO"
    },
    "3027": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3028": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3029": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC42"
    },
    "3032": {
      "branch": 61,
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3033": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8C379A0"
    },
    "3038": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3041": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3042": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3044": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "3047": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3048": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2E"
    },
    "3050": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "3053": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3054": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x45786368616E676520726573756C74656420696E20666577657220636F696E73"
    },
    "3087": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "3090": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3091": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x207468616E206578706563746564000000000000000000"
    },
    "3124": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "3127": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3128": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3187,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "3131": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "POP",
      "path": "0"
    },
    "3132": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x84"
    },
    "3134": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23C"
    },
    "3137": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3138": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3166,
        3235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3139": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3253,
        3295
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "3160": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3244,
        3249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "3163": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3244,
        3295
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3164": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3241,
        3693
      ],
      "op": "XOR",
      "path": "0"
    },
    "3165": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3241,
        3693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3166": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3662,
        3693
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 62,
      "value": "0xDB3"
    },
    "3169": {
      "branch": 63,
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3241,
        3693
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3170": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 64,
      "value": "0x0"
    },
    "3172": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3393,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3174": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3393,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "3177": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3393,
        3443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3178": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3393,
        3443
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x23B872DD0000000000000000000000000000"
    },
    "3211": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3393,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "3214": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3393,
        3443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3215": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3393,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3220": {
      "op": "DUP1"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3223": {
      "op": "DUP5"
    },
    "3224": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3227": {
      "op": "ADD"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "DUP3"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3232": {
      "op": "DUP6"
    },
    "3233": {
      "op": "ADD"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3238": {
      "op": "GAS"
    },
    "3239": {
      "op": "CALL"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "POP",
      "path": "0"
    },
    "3242": {
      "op": "DUP1"
    },
    "3243": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3244": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3245": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3246": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3247": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "POP",
      "path": "0"
    },
    "3248": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "POP",
      "path": "0"
    },
    "3249": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3469,
        3476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "3252": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3461,
        3486
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3253": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3255": {
      "op": "DUP3"
    },
    "3256": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3259": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3260": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3261": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3262": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3264": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3265": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3266": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3267": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "POP",
      "path": "0"
    },
    "3268": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3504,
        3526
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3269": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3275": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3276": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3277": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3278": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3280": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3281": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3282": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3283": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "POP",
      "path": "0"
    },
    "3284": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3552,
        3554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "3287": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3544,
        3564
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3288": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3290": {
      "op": "DUP3"
    },
    "3291": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3294": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3295": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3296": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3297": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3299": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3300": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "3301": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3302": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "POP",
      "path": "0"
    },
    "3303": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3304": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "3307": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3308": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "3311": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3312": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3369,
        3579
      ],
      "op": "POP",
      "path": "0"
    },
    "3313": {
      "op": "DUP1"
    },
    "3314": {
      "op": "MLOAD"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3317": {
      "op": "ADD"
    },
    "3318": {
      "op": "DUP1"
    },
    "3319": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "3322": {
      "op": "DUP3"
    },
    "3323": {
      "op": "DUP5"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3328": {
      "op": "GAS"
    },
    "3329": {
      "op": "CALL"
    },
    "3330": {
      "op": "PUSH2",
      "value": "0xDA"
    },
    "3333": {
      "op": "JUMPI"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3336": {
      "op": "DUP1"
    },
    "3337": {
      "op": "REVERT"
    },
    "3338": {
      "op": "JUMPDEST"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "POP",
      "path": "0"
    },
    "3341": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3343": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x480"
    },
    "3346": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "3349": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3350": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0"
    },
    "3353": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3355": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3350,
        3355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "3358": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3359": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "GAS",
      "path": "0"
    },
    "3360": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "CALL",
      "path": "0"
    },
    "3361": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD29"
    },
    "3364": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3365": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3367": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3368": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3369": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3370": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3372": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3373": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3374": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3375": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "GT",
      "path": "0"
    },
    "3376": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3377": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3A"
    },
    "3380": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3381": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3382": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3C"
    },
    "3385": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3386": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3387": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3388": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3389": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3390": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "POP",
      "path": "0"
    },
    "3391": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3392": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "POP",
      "path": "0"
    },
    "3393": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x460"
    },
    "3396": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3397": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x460"
    },
    "3400": {
      "op": "DUP1"
    },
    "3401": {
      "op": "MLOAD"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "op": "DUP1"
    },
    "3406": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3305,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3409": {
      "op": "DUP3"
    },
    "3410": {
      "op": "DUP5"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3415": {
      "op": "GAS"
    },
    "3416": {
      "op": "CALL"
    },
    "3417": {
      "op": "PUSH2",
      "value": "0xD61"
    },
    "3420": {
      "op": "JUMPI"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3423": {
      "op": "DUP1"
    },
    "3424": {
      "op": "REVERT"
    },
    "3425": {
      "op": "JUMPDEST"
    },
    "3426": {
      "op": "POP"
    },
    "3427": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3305,
        3618
      ],
      "op": "POP",
      "path": "0"
    },
    "3428": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3647,
        3648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3430": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3634,
        3643
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3433": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3630,
        3648
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3434": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3630,
        3648
      ],
      "op": "GT",
      "path": "0"
    },
    "3435": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3627,
        3693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3436": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3662,
        3693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB3"
    },
    "3439": {
      "branch": 65,
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3627,
        3693
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3440": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3677,
        3686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3443": {
      "op": "DUP1"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3446": {
      "op": "ADD"
    },
    "3447": {
      "op": "MLOAD"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3450": {
      "op": "DUP3"
    },
    "3451": {
      "op": "MLOAD"
    },
    "3452": {
      "op": "DUP1"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3455": {
      "op": "SWAP1"
    },
    "3456": {
      "op": "SGT"
    },
    "3457": {
      "op": "ISZERO"
    },
    "3458": {
      "op": "PUSH2",
      "value": "0xD8A"
    },
    "3461": {
      "op": "JUMPI"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3464": {
      "op": "DUP1"
    },
    "3465": {
      "op": "REVERT"
    },
    "3466": {
      "op": "JUMPDEST"
    },
    "3467": {
      "op": "DUP1"
    },
    "3468": {
      "op": "SWAP2"
    },
    "3469": {
      "op": "SWAP1"
    },
    "3470": {
      "op": "SLT"
    },
    "3471": {
      "op": "ISZERO"
    },
    "3472": {
      "op": "PUSH2",
      "value": "0xD98"
    },
    "3475": {
      "op": "JUMPI"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3478": {
      "op": "DUP1"
    },
    "3479": {
      "op": "REVERT"
    },
    "3480": {
      "op": "JUMPDEST"
    },
    "3481": {
      "op": "DUP1"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3484": {
      "op": "SUB"
    },
    "3485": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "3488": {
      "op": "EXP"
    },
    "3489": {
      "op": "DUP3"
    },
    "3490": {
      "op": "DIV"
    },
    "3491": {
      "op": "SWAP1"
    },
    "3492": {
      "op": "POP"
    },
    "3493": {
      "op": "SWAP1"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3669,
        3693
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3496": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3669,
        3693
      ],
      "op": "POP",
      "path": "0"
    },
    "3497": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3669,
        3693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3498": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3669,
        3693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3499": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3662,
        3693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB3"
    },
    "3502": {
      "branch": 66,
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3662,
        3693
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3503": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3662,
        3693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3505": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3662,
        3693
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3506": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3662,
        3693
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3507": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3662,
        3693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3508": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3709,
        3751
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "3529": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3702,
        3705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "3532": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3702,
        3751
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3533": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3702,
        3751
      ],
      "op": "EQ",
      "path": "0"
    },
    "3534": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3699,
        4182
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3535": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3699,
        4182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF3"
    },
    "3538": {
      "branch": 67,
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3699,
        4182
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3539": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 68,
      "value": "0x0"
    },
    "3541": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3543": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3545": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3547": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3775,
        3777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "3550": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3551": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3766,
        3773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "3554": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3555": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3557": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "CALL",
      "path": "0"
    },
    "3558": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDEE"
    },
    "3561": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3562": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3564": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3565": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3566": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3761,
        3778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3567": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4151,
        4182
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 69,
      "value": "0xF73"
    },
    "3570": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3699,
        4182
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3571": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3699,
        4182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3572": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3807,
        3810
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 70,
      "value": "0x180"
    },
    "3575": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3576": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3577": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1"
    },
    "3580": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3581": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3583": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3584": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3585": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3586": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3588": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3590": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3592": {
      "op": "PUSH4",
      "value": "0xF8C1412"
    },
    "3597": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "3600": {
      "op": "MSTORE"
    },
    "3601": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3830,
        3834
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3602": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "3605": {
      "op": "MSTORE"
    },
    "3606": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3836,
        3838
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "3609": {
      "op": "MLOAD"
    },
    "3610": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "3613": {
      "op": "MSTORE"
    },
    "3614": {
      "op": "PUSH2",
      "value": "0x23C"
    },
    "3617": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3619": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3807,
        3810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "3622": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3623": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "GAS",
      "path": "0"
    },
    "3624": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "CALL",
      "path": "0"
    },
    "3625": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE31"
    },
    "3628": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3629": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3631": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3632": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3633": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3634": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 71,
      "value": "0x0"
    },
    "3636": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3934,
        3972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3638": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3934,
        3972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "3641": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3934,
        3972
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3642": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3934,
        3972
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xA959CBB0000000000000000000000000000"
    },
    "3675": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3934,
        3972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0"
    },
    "3678": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3934,
        3972
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3679": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3934,
        3972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3684": {
      "op": "DUP1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3687": {
      "op": "DUP5"
    },
    "3688": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3691": {
      "op": "ADD"
    },
    "3692": {
      "op": "ADD"
    },
    "3693": {
      "op": "DUP3"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3696": {
      "op": "DUP6"
    },
    "3697": {
      "op": "ADD"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3702": {
      "op": "GAS"
    },
    "3703": {
      "op": "CALL"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "POP",
      "path": "0"
    },
    "3706": {
      "op": "DUP1"
    },
    "3707": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3708": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3709": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "ADD",
      "path": "0"
    },
    "3710": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3711": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "POP",
      "path": "0"
    },
    "3712": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "POP",
      "path": "0"
    },
    "3713": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3998,
        4005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "3716": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3990,
        4015
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3717": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3719": {
      "op": "DUP3"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3723": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "ADD",
      "path": "0"
    },
    "3724": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "ADD",
      "path": "0"
    },
    "3725": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3726": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3728": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3729": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "ADD",
      "path": "0"
    },
    "3730": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3731": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "POP",
      "path": "0"
    },
    "3732": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4041,
        4043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "3735": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4033,
        4053
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3736": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3738": {
      "op": "DUP3"
    },
    "3739": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "3742": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "ADD",
      "path": "0"
    },
    "3743": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "ADD",
      "path": "0"
    },
    "3744": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3745": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3747": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3748": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "ADD",
      "path": "0"
    },
    "3749": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3750": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "POP",
      "path": "0"
    },
    "3751": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3752": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "3755": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3756": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "3759": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3760": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3910,
        4068
      ],
      "op": "POP",
      "path": "0"
    },
    "3761": {
      "op": "DUP1"
    },
    "3762": {
      "op": "MLOAD"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3765": {
      "op": "ADD"
    },
    "3766": {
      "op": "DUP1"
    },
    "3767": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "3770": {
      "op": "DUP3"
    },
    "3771": {
      "op": "DUP5"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3776": {
      "op": "GAS"
    },
    "3777": {
      "op": "CALL"
    },
    "3778": {
      "op": "PUSH2",
      "value": "0xECA"
    },
    "3781": {
      "op": "JUMPI"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3784": {
      "op": "DUP1"
    },
    "3785": {
      "op": "REVERT"
    },
    "3786": {
      "op": "JUMPDEST"
    },
    "3787": {
      "op": "POP"
    },
    "3788": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "POP",
      "path": "0"
    },
    "3789": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3791": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x440"
    },
    "3794": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "3797": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3798": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "3801": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3328,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3803": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3893,
        3896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "3806": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3807": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "GAS",
      "path": "0"
    },
    "3808": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "CALL",
      "path": "0"
    },
    "3809": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE9"
    },
    "3812": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3813": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3815": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3816": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3817": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3818": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3820": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3821": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3822": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3823": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "GT",
      "path": "0"
    },
    "3824": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3825": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFA"
    },
    "3828": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3829": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3830": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFC"
    },
    "3833": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3834": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3835": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3836": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3837": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3838": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "POP",
      "path": "0"
    },
    "3839": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3840": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "POP",
      "path": "0"
    },
    "3841": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x420"
    },
    "3844": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3845": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3871,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x420"
    },
    "3848": {
      "op": "DUP1"
    },
    "3849": {
      "op": "MLOAD"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "DUP1"
    },
    "3854": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3848,
        4107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3857": {
      "op": "DUP3"
    },
    "3858": {
      "op": "DUP5"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3863": {
      "op": "GAS"
    },
    "3864": {
      "op": "CALL"
    },
    "3865": {
      "op": "PUSH2",
      "value": "0xF21"
    },
    "3868": {
      "op": "JUMPI"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3871": {
      "op": "DUP1"
    },
    "3872": {
      "op": "REVERT"
    },
    "3873": {
      "op": "JUMPDEST"
    },
    "3874": {
      "op": "POP"
    },
    "3875": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3797,
        3839
      ],
      "op": "POP",
      "path": "0"
    },
    "3876": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4136,
        4137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3878": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4123,
        4132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3881": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4119,
        4137
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3882": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4119,
        4137
      ],
      "op": "GT",
      "path": "0"
    },
    "3883": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4116,
        4182
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3884": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4151,
        4182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF73"
    },
    "3887": {
      "branch": 72,
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4116,
        4182
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3888": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4166,
        4175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "3891": {
      "op": "DUP1"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "MLOAD"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3898": {
      "op": "DUP3"
    },
    "3899": {
      "op": "MLOAD"
    },
    "3900": {
      "op": "DUP1"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3903": {
      "op": "SWAP1"
    },
    "3904": {
      "op": "SGT"
    },
    "3905": {
      "op": "ISZERO"
    },
    "3906": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "3909": {
      "op": "JUMPI"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3912": {
      "op": "DUP1"
    },
    "3913": {
      "op": "REVERT"
    },
    "3914": {
      "op": "JUMPDEST"
    },
    "3915": {
      "op": "DUP1"
    },
    "3916": {
      "op": "SWAP2"
    },
    "3917": {
      "op": "SWAP1"
    },
    "3918": {
      "op": "SLT"
    },
    "3919": {
      "op": "ISZERO"
    },
    "3920": {
      "op": "PUSH2",
      "value": "0xF58"
    },
    "3923": {
      "op": "JUMPI"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3926": {
      "op": "DUP1"
    },
    "3927": {
      "op": "REVERT"
    },
    "3928": {
      "op": "JUMPDEST"
    },
    "3929": {
      "op": "DUP1"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3932": {
      "op": "SUB"
    },
    "3933": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "3936": {
      "op": "EXP"
    },
    "3937": {
      "op": "DUP3"
    },
    "3938": {
      "op": "DIV"
    },
    "3939": {
      "op": "SWAP1"
    },
    "3940": {
      "op": "POP"
    },
    "3941": {
      "op": "SWAP1"
    },
    "3942": {
      "op": "POP"
    },
    "3943": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4158,
        4182
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3944": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4158,
        4182
      ],
      "op": "POP",
      "path": "0"
    },
    "3945": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4158,
        4182
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3946": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4158,
        4182
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3947": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4151,
        4182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF73"
    },
    "3950": {
      "branch": 73,
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4151,
        4182
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3951": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4151,
        4182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3953": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4151,
        4182
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3954": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4151,
        4182
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3955": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        4151,
        4182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3956": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3022,
        4182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "3959": {
      "fn": "MetaPoolMock._exchange",
      "offset": [
        3022,
        4182
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3960": {
      "fn": "MetaPoolMock._exchange",
      "jump": "o",
      "offset": [
        3022,
        4182
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "545d343d73b614e55e8f212915167d7d2b7ea908",
  "source": "# @version ^0.2.0\n\"\"\"\n@notice Mock Kagla metapool for testing\n\"\"\"\n\nFEE_PRECISION: constant(uint256) = 10**10\n\ninterface ERC20Mock:\n    def decimals() -> uint256: view\n    def balanceOf(_addr: address) -> uint256: view\n    def transfer(_to: address, _amount: uint256) -> bool: nonpayable\n    def transferFrom(_from: address, _to: address, _amount: uint256) -> bool: nonpayable\n    def _mint_for_testing(_to: address, _amount: uint256): nonpayable\n\nn_coins: public(uint256)\nn_coins_underlying: uint256\ncoin_list: address[4]\nbase_coin_list: address[4]\n\nA: public(uint256)\ninitial_A: public(uint256)\ninitial_A_time: public(uint256)\nfuture_A: public(uint256)\nfuture_A_time: public(uint256)\n\nfee: public(uint256)\nadmin_fee: public(uint256)\nfuture_fee: public(uint256)\nfuture_admin_fee: public(uint256)\nfuture_owner: public(address)\n\nbase_pool: public(address)\nget_virtual_price: public(uint256)\n\n_balances: uint256[4]\n\n@external\ndef __init__(\n    _n_coins: uint256,\n    _n_coins_underlying: uint256,\n    _base_pool: address,\n    _coin_list: address[4],\n    _base_coin_list: address[4],\n    _A: uint256,\n    _fee: uint256,\n):\n    self.n_coins = _n_coins\n    self.n_coins_underlying = _n_coins_underlying\n    self.base_pool = _base_pool\n    self.coin_list = _coin_list\n    self.base_coin_list = _base_coin_list\n    self.A = _A\n    self.fee = _fee\n    self.get_virtual_price = 10**18\n\n\n@external\n@view\ndef coins(i: uint256) -> address:\n    assert i < self.n_coins  # dev: exceeds n_coins\n    return self.coin_list[i]\n\n\n@external\n@view\ndef base_coins(i: uint256) -> address:\n    assert i < self.n_coins_underlying  # dev: exceeds n_coins\n    return self.base_coin_list[i]\n\n\n@external\n@view\ndef balances(i: uint256) -> uint256:\n    assert i < self.n_coins\n    return self._balances[i]\n\n\n@internal\n@view\ndef _get_dy(_from: address, _to: address, _dx: uint256) -> uint256:\n    _from_precision: uint256 = 0\n    _to_precision: uint256 = 0\n\n    if _from == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        _from_precision = 18\n    else:\n        _from_precision = ERC20Mock(_from).decimals()\n    if _to == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        _to_precision = 18\n    else:\n        _to_precision = ERC20Mock(_to).decimals()\n\n    _dy: uint256 = _dx * (10**_to_precision) / (10**_from_precision)\n    _fee: uint256 = _dy * self.fee / FEE_PRECISION\n\n    return _dy - _fee\n\n\n@external\n@view\ndef get_dy(i: int128, j: int128, dx: uint256) -> uint256:\n    return self._get_dy(self.coin_list[i], self.coin_list[j], dx)\n\n\n@external\n@view\ndef get_dy_underlying(i: int128, j: int128, dx: uint256) -> uint256:\n    _from: address = ZERO_ADDRESS\n    _to: address = ZERO_ADDRESS\n\n    max_base_coin: int128 = convert(self.n_coins - 1, int128)\n    if i <= max_base_coin:\n        _from = self.coin_list[i]\n    else:\n        _from = self.base_coin_list[i-max_base_coin]\n    if j <= max_base_coin:\n        _to = self.coin_list[j]\n    else:\n        _to = self.base_coin_list[j-max_base_coin]\n\n    return self._get_dy(_from, _to, dx)\n\n\n@internal\ndef _exchange(_sender: address, _from: address, _to: address, dx: uint256, min_dy: uint256):\n    dy: uint256 = self._get_dy(_from, _to, dx)\n    assert dy >= min_dy, \"Exchange resulted in fewer coins than expected\"\n\n    if _from != 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        _response: Bytes[32] = raw_call(\n            _from,\n            concat(\n                method_id(\"transferFrom(address,address,uint256)\"),\n                convert(_sender, bytes32),\n                convert(self, bytes32),\n                convert(dx, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(_response) > 0:\n            assert convert(_response, bool)\n\n    if _to == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        send(_sender, dy)\n    else:\n        ERC20Mock(_to)._mint_for_testing(self, dy)\n        _response: Bytes[32] = raw_call(\n            _to,\n            concat(\n                method_id(\"transfer(address,uint256)\"),\n                convert(_sender, bytes32),\n                convert(dy, bytes32),\n            ),\n            max_outsize=32,\n        )\n        if len(_response) > 0:\n            assert convert(_response, bool)\n\n\n@external\n@payable\n@nonreentrant('lock')\ndef exchange(i: int128, j: int128, dx: uint256, min_dy: uint256):\n    _from: address = self.coin_list[i]\n    if _from == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        assert msg.value == dx\n    else:\n        assert msg.value == 0\n\n    self._exchange(msg.sender, _from, self.coin_list[j], dx, min_dy)\n\n\n@external\n@payable\n@nonreentrant('lock')\ndef exchange_underlying(i: int128, j: int128, dx: uint256, min_dy: uint256):\n    _from: address = ZERO_ADDRESS\n    _to: address = ZERO_ADDRESS\n\n    max_base_coin: int128 = convert(self.n_coins - 1, int128)\n    if i < max_base_coin:\n        _from = self.coin_list[i]\n    else:\n        _from = self.base_coin_list[i-max_base_coin]\n    if j < max_base_coin:\n        _to = self.coin_list[j]\n    else:\n        _to = self.base_coin_list[j-max_base_coin]\n\n    if _from == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE:\n        assert msg.value == dx\n    else:\n        assert msg.value == 0\n\n    self._exchange(msg.sender, _from, _to, dx, min_dy)\n\n\n# testing functions\n\n@external\ndef _set_A(\n    _A: uint256,\n    _initial_A: uint256,\n    _initial_A_time: uint256,\n    _future_A: uint256,\n    _future_A_time: uint256\n):\n    self.A = _A\n    self.initial_A = _initial_A\n    self.initial_A_time = _initial_A_time\n    self.future_A = _future_A\n    self.future_A_time = _future_A_time\n\n\n@external\ndef _set_fees_and_owner(\n    _fee: uint256,\n    _admin_fee: uint256,\n    _future_fee: uint256,\n    _future_admin_fee: uint256,\n    _future_owner: address\n):\n    self.fee = _fee\n    self.admin_fee = _admin_fee\n    self.future_fee = _future_fee\n    self.future_admin_fee = _future_admin_fee\n    self.future_owner = _future_owner\n\n@external\ndef _set_balances(_new_balances: uint256[4]):\n    self._balances = _new_balances\n\n\n@external\ndef _set_virtual_price(_value: uint256):\n    self.get_virtual_price = _value\n\n\n@external\n@payable\ndef __default__():\n    pass\n",
  "sourceMap": "",
  "sourcePath": "contracts/testing/MetaPoolMock.vy",
  "type": "contract"
}
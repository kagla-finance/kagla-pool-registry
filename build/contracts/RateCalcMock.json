{
  "abi": [
    {
      "gas": 2673,
      "inputs": [
        {
          "name": "_coin",
          "type": "address"
        }
      ],
      "name": "get_rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/testing/RateCalcMock.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 20,
                "end_col_offset": 27,
                "end_lineno": 9,
                "id": "address",
                "lineno": 9,
                "node_id": 6,
                "src": "103:7:1"
              },
              "arg": "_coin",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 27,
              "end_lineno": 9,
              "lineno": 9,
              "node_id": 5,
              "src": "96:14:1"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 27,
          "end_lineno": 9,
          "lineno": 9,
          "node_id": 4,
          "src": "96:14:1"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Subscript",
              "col_offset": 12,
              "end_col_offset": 21,
              "end_lineno": 10,
              "lineno": 10,
              "node_id": 11,
              "slice": {
                "ast_type": "Index",
                "col_offset": 18,
                "end_col_offset": 20,
                "end_lineno": 10,
                "lineno": 10,
                "node_id": 14,
                "src": "142:2:1",
                "value": {
                  "ast_type": "Int",
                  "col_offset": 18,
                  "end_col_offset": 20,
                  "end_lineno": 10,
                  "lineno": 10,
                  "node_id": 15,
                  "src": "142:2:1",
                  "value": 32
                }
              },
              "src": "136:9:1",
              "value": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 17,
                "end_lineno": 10,
                "id": "Bytes",
                "lineno": 10,
                "node_id": 12,
                "src": "136:5:1"
              }
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 88,
            "end_lineno": 10,
            "lineno": 10,
            "node_id": 8,
            "simple": 1,
            "src": "128:84:1",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 10,
              "id": "result",
              "lineno": 10,
              "node_id": 9,
              "src": "128:6:1"
            },
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 38,
                  "end_lineno": 10,
                  "id": "_coin",
                  "lineno": 10,
                  "node_id": 20,
                  "src": "157:5:1"
                },
                {
                  "ast_type": "Bytes",
                  "col_offset": 40,
                  "end_col_offset": 50,
                  "end_lineno": 10,
                  "lineno": 10,
                  "node_id": 22,
                  "src": "164:10:1",
                  "value": "0x71ca337d"
                }
              ],
              "ast_type": "Call",
              "col_offset": 24,
              "end_col_offset": 88,
              "end_lineno": 10,
              "func": {
                "ast_type": "Name",
                "col_offset": 24,
                "end_col_offset": 32,
                "end_lineno": 10,
                "id": "raw_call",
                "lineno": 10,
                "node_id": 18,
                "src": "148:8:1"
              },
              "keyword": null,
              "keywords": [
                {
                  "arg": "max_outsize",
                  "ast_type": "keyword",
                  "col_offset": 52,
                  "end_col_offset": 66,
                  "end_lineno": 10,
                  "lineno": 10,
                  "node_id": 23,
                  "src": "176:14:1",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 64,
                    "end_col_offset": 66,
                    "end_lineno": 10,
                    "lineno": 10,
                    "node_id": 24,
                    "src": "188:2:1",
                    "value": 32
                  }
                },
                {
                  "arg": "is_static_call",
                  "ast_type": "keyword",
                  "col_offset": 68,
                  "end_col_offset": 87,
                  "end_lineno": 10,
                  "lineno": 10,
                  "node_id": 25,
                  "src": "192:19:1",
                  "value": {
                    "ast_type": "NameConstant",
                    "col_offset": 83,
                    "end_col_offset": 87,
                    "end_lineno": 10,
                    "lineno": 10,
                    "node_id": 26,
                    "src": "207:4:1",
                    "value": true
                  }
                }
              ],
              "lineno": 10,
              "node_id": 17,
              "src": "148:64:1"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 46,
            "end_lineno": 11,
            "lineno": 11,
            "node_id": 27,
            "src": "217:42:1",
            "value": {
              "ast_type": "BinOp",
              "col_offset": 11,
              "end_col_offset": 46,
              "end_lineno": 11,
              "left": {
                "ast_type": "BinOp",
                "col_offset": 11,
                "end_col_offset": 19,
                "end_lineno": 11,
                "left": {
                  "ast_type": "Int",
                  "col_offset": 11,
                  "end_col_offset": 13,
                  "end_lineno": 11,
                  "lineno": 11,
                  "node_id": 30,
                  "src": "224:2:1",
                  "value": 10
                },
                "lineno": 11,
                "node_id": 29,
                "op": {
                  "ast_type": "Pow",
                  "col_offset": 11,
                  "end_col_offset": 19,
                  "end_lineno": 11,
                  "lineno": 11,
                  "node_id": 31,
                  "src": "224:8:1"
                },
                "right": {
                  "ast_type": "Int",
                  "col_offset": 17,
                  "end_col_offset": 19,
                  "end_lineno": 11,
                  "lineno": 11,
                  "node_id": 32,
                  "src": "230:2:1",
                  "value": 36
                },
                "src": "224:8:1"
              },
              "lineno": 11,
              "node_id": 28,
              "op": {
                "ast_type": "Div",
                "col_offset": 11,
                "end_col_offset": 46,
                "end_lineno": 11,
                "lineno": 11,
                "node_id": 33,
                "src": "224:35:1"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 30,
                    "end_col_offset": 36,
                    "end_lineno": 11,
                    "id": "result",
                    "lineno": 11,
                    "node_id": 37,
                    "src": "243:6:1"
                  },
                  {
                    "ast_type": "Name",
                    "col_offset": 38,
                    "end_col_offset": 45,
                    "end_lineno": 11,
                    "id": "uint256",
                    "lineno": 11,
                    "node_id": 39,
                    "src": "251:7:1"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 22,
                "end_col_offset": 46,
                "end_lineno": 11,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 11,
                  "id": "convert",
                  "lineno": 11,
                  "node_id": 35,
                  "src": "235:7:1"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 11,
                "node_id": 34,
                "src": "235:24:1"
              },
              "src": "224:35:1"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 7,
            "id": "view",
            "lineno": 7,
            "node_id": 41,
            "src": "68:4:1"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 8,
            "id": "external",
            "lineno": 8,
            "node_id": 43,
            "src": "74:8:1"
          }
        ],
        "doc_string": null,
        "end_col_offset": 46,
        "end_lineno": 11,
        "lineno": 9,
        "name": "get_rate",
        "node_id": 3,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 32,
          "end_col_offset": 39,
          "end_lineno": 9,
          "id": "uint256",
          "lineno": 9,
          "node_id": 45,
          "src": "115:7:1"
        },
        "src": "83:176:1"
      }
    ],
    "col_offset": 0,
    "doc_string": {
      "ast_type": "DocStr",
      "col_offset": 0,
      "end_col_offset": 3,
      "end_lineno": 4,
      "lineno": 2,
      "node_id": 47,
      "src": "18:46:1",
      "value": "\n@title Mock Kagla Pool Rate Calculator\n"
    },
    "end_col_offset": 46,
    "end_lineno": 11,
    "lineno": 1,
    "name": "contracts/testing/RateCalcMock.vy",
    "node_id": 0,
    "src": "0:259:1"
  },
  "bytecode": "0x61014a56600436101561000d57610140565b600035601c52600051341561002157600080fd5b638f32207881141561013e5760043560a01c1561003d57600080fd5b60046101a0527f71ca337d000000000000000000000000000000000000000000000000000000006101c0526101a08051602001806102008284600060045af161008557600080fd5b50506020610280610200516102206004355afa6100a157600080fd5b60203d808211156100b257806100b4565b815b90509050610260526102608051602001806101408284600060045af16100d957600080fd5b50506ec097ce7bc90715b34b9f100000000061014080602001516000825180602090131561010657600080fd5b809190121561011457600080fd5b806020036101000a8204905090509050808061012f57600080fd5b82049050905060005260206000f35b505b60006000fd5b61000461014a0361000460003961000461014a036000f3",
  "bytecodeSha1": "79df1fdc5351f2adac9fa8bdc0b8a98c921c3be2",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.2.11"
  },
  "contractName": "RateCalcMock",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "RateCalcMock.get_rate": {
          "0": [
            128,
            212
          ],
          "1": [
            217,
            259
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x600436101561000d57610140565b600035601c52600051341561002157600080fd5b638f32207881141561013e5760043560a01c1561003d57600080fd5b60046101a0527f71ca337d000000000000000000000000000000000000000000000000000000006101c0526101a08051602001806102008284600060045af161008557600080fd5b50506020610280610200516102206004355afa6100a157600080fd5b60203d808211156100b257806100b4565b815b90509050610260526102608051602001806101408284600060045af16100d957600080fd5b50506ec097ce7bc90715b34b9f100000000061014080602001516000825180602090131561010657600080fd5b809190121561011457600080fd5b806020036101000a8204905090509050808061012f57600080fd5b82049050905060005260206000f35b505b60006000fd",
  "deployedSourceMap": "-1:-1:1:-;;;;;:::-;;:::-;:::-;;;;;;;;;;:::-;;;;:::-;83:176;;;;;:::-;-1:-1;;;;;83:176;:::-;;;;:::-;164:10;;;;;;;-1:-1;;;;;148:64;-1:-1;;;;;;;:::-;;;;:::-;;148:64;;;;;;157:5;148:64;;;;:::-;;;;:::-;;;;;;;;:::-;;;:::-;:::-;;:::-;;;;;;;;-1:-1;;;;;128:84;-1:-1;;;;;;;:::-;;;;:::-;;83:176;224:35;243:6;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;224:35;;;;;:::-;;;;:::-;;;;;;;217:42;;;;;83:176::-;-1:-1;:::-;;;;",
  "language": "Vyper",
  "natspec": {
    "methods": {},
    "title": "Mock Kagla Pool Rate Calculator"
  },
  "offset": [
    0,
    260
  ],
  "opcodes": "PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x0D JUMPI PUSH2 0x140 JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1C MSTORE PUSH1 0x0 MLOAD CALLVALUE ISZERO PUSH2 0x021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x8F322078 DUP2 EQ ISZERO PUSH2 0x13E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x03D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH2 0x1A0 MSTORE PUSH32 0x71CA337D0000000000000000000000000000 PUSH2 0x1C0 MSTORE PUSH2 0x1A0 DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x20 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0x085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH2 0x280 PUSH2 0x20 MLOAD PUSH2 0x220 PUSH1 0x4 CALLDATALOAD GAS STATICCALL PUSH2 0x0A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP1 DUP3 GT ISZERO PUSH2 0x0B2 JUMPI DUP1 PUSH2 0x0B4 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x260 MSTORE PUSH2 0x260 DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x140 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0x0D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH15 0xC097CE7BC9715B34B9F100000 PUSH2 0x140 DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP DUP1 DUP1 PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DIV SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT",
  "pcMap": {
    "0": {
      "offset": [
        0,
        259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "LT"
    },
    "4": {
      "op": "ISZERO"
    },
    "5": {
      "op": "PUSH2",
      "value": "0x0D"
    },
    "8": {
      "op": "JUMPI"
    },
    "9": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "12": {
      "op": "JUMP"
    },
    "13": {
      "op": "JUMPDEST"
    },
    "14": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16": {
      "op": "CALLDATALOAD"
    },
    "17": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "19": {
      "op": "MSTORE"
    },
    "20": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22": {
      "op": "MLOAD"
    },
    "23": {
      "op": "CALLVALUE"
    },
    "24": {
      "op": "ISZERO"
    },
    "25": {
      "op": "PUSH2",
      "value": "0x021"
    },
    "28": {
      "op": "JUMPI"
    },
    "29": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "31": {
      "offset": [
        0,
        0
      ],
      "op": "DUP1",
      "path": "0"
    },
    "32": {
      "dev": "Cannot send ether to nonpayable function",
      "op": "REVERT"
    },
    "33": {
      "op": "JUMPDEST"
    },
    "34": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8F322078"
    },
    "39": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "DUP2",
      "path": "0"
    },
    "40": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "EQ",
      "path": "0"
    },
    "41": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "42": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "45": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "46": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "48": {
      "op": "CALLDATALOAD"
    },
    "49": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "51": {
      "op": "SHR"
    },
    "52": {
      "op": "ISZERO"
    },
    "53": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x03D"
    },
    "56": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "57": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "59": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "60": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "REVERT",
      "path": "0"
    },
    "61": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "62": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        164,
        174
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x4"
    },
    "64": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        164,
        174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "67": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        164,
        174
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "68": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        164,
        174
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x71CA337D0000000000000000000000000000"
    },
    "101": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        164,
        174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "104": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        164,
        174
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "105": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        164,
        174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "108": {
      "op": "DUP1"
    },
    "109": {
      "op": "MLOAD"
    },
    "110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "112": {
      "op": "ADD"
    },
    "113": {
      "op": "DUP1"
    },
    "114": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "117": {
      "op": "DUP3"
    },
    "118": {
      "op": "DUP5"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "121": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "123": {
      "op": "GAS"
    },
    "124": {
      "op": "CALL"
    },
    "125": {
      "op": "PUSH2",
      "value": "0x085"
    },
    "128": {
      "op": "JUMPI"
    },
    "129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "131": {
      "op": "DUP1"
    },
    "132": {
      "op": "REVERT"
    },
    "133": {
      "op": "JUMPDEST"
    },
    "134": {
      "op": "POP"
    },
    "135": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "POP",
      "path": "0"
    },
    "136": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "138": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "141": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20"
    },
    "144": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "145": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "148": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        157,
        162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "150": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "151": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "GAS",
      "path": "0"
    },
    "152": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "153": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0A1"
    },
    "156": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "157": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "159": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "160": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "REVERT",
      "path": "0"
    },
    "161": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "162": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "164": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "165": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "166": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "167": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "GT",
      "path": "0"
    },
    "168": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "169": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0B2"
    },
    "172": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "173": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "174": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0B4"
    },
    "177": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "178": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "179": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "180": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "182": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "POP",
      "path": "0"
    },
    "183": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "184": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "POP",
      "path": "0"
    },
    "185": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "188": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "189": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        148,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "192": {
      "op": "DUP1"
    },
    "193": {
      "op": "MLOAD"
    },
    "194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "196": {
      "op": "ADD"
    },
    "197": {
      "op": "DUP1"
    },
    "198": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        128,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "201": {
      "op": "DUP3"
    },
    "202": {
      "op": "DUP5"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "205": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "207": {
      "op": "GAS"
    },
    "208": {
      "op": "CALL"
    },
    "209": {
      "op": "PUSH2",
      "value": "0x0D9"
    },
    "212": {
      "op": "JUMPI"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "215": {
      "op": "DUP1"
    },
    "216": {
      "op": "REVERT"
    },
    "217": {
      "op": "JUMPDEST"
    },
    "218": {
      "op": "POP"
    },
    "219": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "POP",
      "path": "0"
    },
    "220": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "PUSH15",
      "path": "0",
      "statement": 1,
      "value": "0xC097CE7BC9715B34B9F100000"
    },
    "236": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        243,
        249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "239": {
      "op": "DUP1"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "op": "MLOAD"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "246": {
      "op": "DUP3"
    },
    "247": {
      "op": "MLOAD"
    },
    "248": {
      "op": "DUP1"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "251": {
      "op": "SWAP1"
    },
    "252": {
      "op": "SGT"
    },
    "253": {
      "op": "ISZERO"
    },
    "254": {
      "op": "PUSH2",
      "value": "0x16"
    },
    "257": {
      "op": "JUMPI"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "260": {
      "op": "DUP1"
    },
    "261": {
      "op": "REVERT"
    },
    "262": {
      "op": "JUMPDEST"
    },
    "263": {
      "op": "DUP1"
    },
    "264": {
      "op": "SWAP2"
    },
    "265": {
      "op": "SWAP1"
    },
    "266": {
      "op": "SLT"
    },
    "267": {
      "op": "ISZERO"
    },
    "268": {
      "op": "PUSH2",
      "value": "0x114"
    },
    "271": {
      "op": "JUMPI"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "274": {
      "op": "DUP1"
    },
    "275": {
      "op": "REVERT"
    },
    "276": {
      "op": "JUMPDEST"
    },
    "277": {
      "op": "DUP1"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "280": {
      "op": "SUB"
    },
    "281": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "284": {
      "op": "EXP"
    },
    "285": {
      "op": "DUP3"
    },
    "286": {
      "op": "DIV"
    },
    "287": {
      "op": "SWAP1"
    },
    "288": {
      "op": "POP"
    },
    "289": {
      "op": "SWAP1"
    },
    "290": {
      "op": "POP"
    },
    "291": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "292": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "POP",
      "path": "0"
    },
    "293": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "294": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "295": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "298": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "299": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "301": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "302": {
      "dev": "Division by zero",
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "REVERT",
      "path": "0"
    },
    "303": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "304": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "DUP3",
      "path": "0"
    },
    "305": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "DIV",
      "path": "0"
    },
    "306": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "307": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "POP",
      "path": "0"
    },
    "308": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "309": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        224,
        259
      ],
      "op": "POP",
      "path": "0"
    },
    "310": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        217,
        259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "312": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        217,
        259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "313": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        217,
        259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "315": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        217,
        259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "317": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        217,
        259
      ],
      "op": "RETURN",
      "path": "0"
    },
    "318": {
      "fn": "RateCalcMock.get_rate",
      "offset": [
        83,
        259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "op": "POP"
    },
    "320": {
      "op": "JUMPDEST"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "325": {
      "op": "REVERT"
    }
  },
  "sha1": "7c2e09f7e2f91e67313b3ae8e945504b0ba3f890",
  "source": "# @version 0.2.11\n\"\"\"\n@title Mock Kagla Pool Rate Calculator\n\"\"\"\n\n\n@view\n@external\ndef get_rate(_coin: address) -> uint256:\n    result: Bytes[32] = raw_call(_coin, 0x71ca337d, max_outsize=32, is_static_call=True)\n    return 10 ** 36 / convert(result, uint256)\n",
  "sourceMap": "",
  "sourcePath": "contracts/testing/RateCalcMock.vy",
  "type": "contract"
}